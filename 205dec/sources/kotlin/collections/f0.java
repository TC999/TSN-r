package kotlin.collections;

import com.bytedance.pangle.sdk.component.log.impl.core.monitor.EventMonitor;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.ListIterator;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.RandomAccess;
import java.util.Set;
import kotlin.Deprecated;
import kotlin.DeprecatedSinceKotlin;
import kotlin.ExperimentalStdlibApi;
import kotlin.ExperimentalUnsignedTypes;
import kotlin.Metadata;
import kotlin.OverloadResolutionByLambdaReturnType;
import kotlin.Pair;
import kotlin.ReplaceWith;
import kotlin.SinceKotlin;
import kotlin.WasExperimental;
import kotlin.comparisons.b;
import kotlin.internal.HidesMembers;
import kotlin.internal.InlineOnly;
import kotlin.jvm.JvmName;
import kotlin.jvm.internal.Lambda;
import kotlin.random.Random;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/* compiled from: _Collections.kt */
@Metadata(bv = {}, d1 = {"\u0000\u00d2\u0002\n\u0000\n\u0002\u0010 \n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0002\u0010\u001c\n\u0000\n\u0002\u0010\u000b\n\u0002\b\u0002\n\u0002\u0010\b\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0011\n\u0002\u0010\u0000\n\u0002\b\u001b\n\u0002\u0010\u001e\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0011\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u001f\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\t\n\u0002\u0018\u0002\n\u0002\b\b\n\u0002\u0010!\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000f\n\u0002\b\b\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\u0018\n\u0000\n\u0002\u0010\u0005\n\u0002\u0010\u0012\n\u0000\n\u0002\u0010\f\n\u0002\u0010\u0019\n\u0000\n\u0002\u0010\u0006\n\u0002\u0010\u0013\n\u0000\n\u0002\u0010\u0007\n\u0002\u0010\u0014\n\u0000\n\u0002\u0010\u0015\n\u0000\n\u0002\u0010\t\n\u0002\u0010\u0016\n\u0000\n\u0002\u0010\n\n\u0002\u0010\u0017\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\u0010$\n\u0002\b\u0005\n\u0002\u0010%\n\u0002\b\n\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0010\"\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\r\n\u0002\u0018\u0002\n\u0002\b\t\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0010#\n\u0002\b\r\n\u0002\u0018\u0002\n\u0002\bX\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\b\n\u0002\u0010\u0011\n\u0002\b \n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010\r\n\u0002\b\u0007\n\u0002\u0010\u000e\n\u0002\b\u0014\u001a \u0010\u0002\u001a\u00028\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u0001H\u0087\n\u00a2\u0006\u0004\b\u0002\u0010\u0003\u001a \u0010\u0004\u001a\u00028\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u0001H\u0087\n\u00a2\u0006\u0004\b\u0004\u0010\u0003\u001a \u0010\u0005\u001a\u00028\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u0001H\u0087\n\u00a2\u0006\u0004\b\u0005\u0010\u0003\u001a \u0010\u0006\u001a\u00028\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u0001H\u0087\n\u00a2\u0006\u0004\b\u0006\u0010\u0003\u001a \u0010\u0007\u001a\u00028\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u0001H\u0087\n\u00a2\u0006\u0004\b\u0007\u0010\u0003\u001a-\u0010\f\u001a\u00020\u000b\"\t\b\u0000\u0010\u0000\u00a2\u0006\u0002\b\b*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010\n\u001a\u00028\u0000H\u0086\u0002\u00a2\u0006\u0004\b\f\u0010\r\u001a%\u0010\u0010\u001a\u00028\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010\u000f\u001a\u00020\u000e\u00a2\u0006\u0004\b\u0010\u0010\u0011\u001a(\u0010\u0012\u001a\u00028\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u00012\u0006\u0010\u000f\u001a\u00020\u000eH\u0087\b\u00a2\u0006\u0004\b\u0012\u0010\u0013\u001a9\u0010\u0016\u001a\u00028\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010\u000f\u001a\u00020\u000e2\u0012\u0010\u0015\u001a\u000e\u0012\u0004\u0012\u00020\u000e\u0012\u0004\u0012\u00028\u00000\u0014\u00a2\u0006\u0004\b\u0016\u0010\u0017\u001a?\u0010\u0018\u001a\u00028\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u00012\u0006\u0010\u000f\u001a\u00020\u000e2\u0012\u0010\u0015\u001a\u000e\u0012\u0004\u0012\u00020\u000e\u0012\u0004\u0012\u00028\u00000\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0004\b\u0018\u0010\u0019\u001a'\u0010\u001a\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010\u000f\u001a\u00020\u000e\u00a2\u0006\u0004\b\u001a\u0010\u0011\u001a*\u0010\u001b\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u00012\u0006\u0010\u000f\u001a\u00020\u000eH\u0087\b\u00a2\u0006\u0004\b\u001b\u0010\u0013\u001a9\u0010\u001d\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0004\b\u001d\u0010\u001e\u001a9\u0010\u001f\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0004\b\u001f\u0010\u001e\u001a9\u0010 \u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u00012\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0004\b \u0010!\u001a\u001d\u0010\"\u001a\u00028\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t\u00a2\u0006\u0004\b\"\u0010#\u001a\u001d\u0010$\u001a\u00028\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u0001\u00a2\u0006\u0004\b$\u0010\u0003\u001a7\u0010%\u001a\u00028\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0004\b%\u0010\u001e\u001aC\u0010)\u001a\u00028\u0001\"\u0004\b\u0000\u0010\u0000\"\b\b\u0001\u0010'*\u00020&*\b\u0012\u0004\u0012\u00028\u00000\t2\u0014\u0010(\u001a\u0010\u0012\u0004\u0012\u00028\u0000\u0012\u0006\u0012\u0004\u0018\u00018\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0004\b)\u0010\u001e\u001aE\u0010*\u001a\u0004\u0018\u00018\u0001\"\u0004\b\u0000\u0010\u0000\"\b\b\u0001\u0010'*\u00020&*\b\u0012\u0004\u0012\u00028\u00000\t2\u0014\u0010(\u001a\u0010\u0012\u0004\u0012\u00028\u0000\u0012\u0006\u0012\u0004\u0018\u00018\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0004\b*\u0010\u001e\u001a\u001f\u0010+\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t\u00a2\u0006\u0004\b+\u0010#\u001a\u001f\u0010,\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u0001\u00a2\u0006\u0004\b,\u0010\u0003\u001a9\u0010-\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0004\b-\u0010\u001e\u001a?\u0010.\u001a\u00028\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u00012\u0006\u0010\u000f\u001a\u00020\u000e2\u0012\u0010\u0015\u001a\u000e\u0012\u0004\u0012\u00020\u000e\u0012\u0004\u0012\u00028\u00000\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0004\b.\u0010\u0019\u001a'\u0010/\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u00012\u0006\u0010\u000f\u001a\u00020\u000e\u00a2\u0006\u0004\b/\u0010\u0013\u001a*\u00100\u001a\u00020\u000e\"\t\b\u0000\u0010\u0000\u00a2\u0006\u0002\b\b*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010\n\u001a\u00028\u0000\u00a2\u0006\u0004\b0\u00101\u001a*\u00102\u001a\u00020\u000e\"\t\b\u0000\u0010\u0000\u00a2\u0006\u0002\b\b*\b\u0012\u0004\u0012\u00028\u00000\u00012\u0006\u0010\n\u001a\u00028\u0000\u00a2\u0006\u0004\b2\u00103\u001a0\u00104\u001a\u00020\u000e\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u001a0\u00105\u001a\u00020\u000e\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u00012\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u001a0\u00106\u001a\u00020\u000e\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u001a0\u00107\u001a\u00020\u000e\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u00012\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u001a\u001d\u00108\u001a\u00028\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t\u00a2\u0006\u0004\b8\u0010#\u001a\u001d\u00109\u001a\u00028\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u0001\u00a2\u0006\u0004\b9\u0010\u0003\u001a7\u0010:\u001a\u00028\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0004\b:\u0010\u001e\u001a7\u0010;\u001a\u00028\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u00012\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0004\b;\u0010!\u001a*\u0010<\u001a\u00020\u000e\"\t\b\u0000\u0010\u0000\u00a2\u0006\u0002\b\b*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010\n\u001a\u00028\u0000\u00a2\u0006\u0004\b<\u00101\u001a*\u0010=\u001a\u00020\u000e\"\t\b\u0000\u0010\u0000\u00a2\u0006\u0002\b\b*\b\u0012\u0004\u0012\u00028\u00000\u00012\u0006\u0010\n\u001a\u00028\u0000\u00a2\u0006\u0004\b=\u00103\u001a\u001f\u0010>\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t\u00a2\u0006\u0004\b>\u0010#\u001a\u001f\u0010?\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u0001\u00a2\u0006\u0004\b?\u0010\u0003\u001a9\u0010@\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0004\b@\u0010\u001e\u001a9\u0010A\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u00012\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0004\bA\u0010!\u001a \u0010C\u001a\u00028\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000BH\u0087\b\u00a2\u0006\u0004\bC\u0010D\u001a'\u0010G\u001a\u00028\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000B2\u0006\u0010F\u001a\u00020EH\u0007\u00a2\u0006\u0004\bG\u0010H\u001a\"\u0010I\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000BH\u0087\b\u00a2\u0006\u0004\bI\u0010D\u001a)\u0010J\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000B2\u0006\u0010F\u001a\u00020EH\u0007\u00a2\u0006\u0004\bJ\u0010H\u001a\u001d\u0010K\u001a\u00028\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t\u00a2\u0006\u0004\bK\u0010#\u001a\u001d\u0010L\u001a\u00028\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u0001\u00a2\u0006\u0004\bL\u0010\u0003\u001a7\u0010M\u001a\u00028\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0004\bM\u0010\u001e\u001a\u001f\u0010N\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t\u00a2\u0006\u0004\bN\u0010#\u001a\u001f\u0010O\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u0001\u00a2\u0006\u0004\bO\u0010\u0003\u001a9\u0010P\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0004\bP\u0010\u001e\u001a$\u0010R\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010Q\u001a\u00020\u000e\u001a$\u0010S\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u00012\u0006\u0010Q\u001a\u00020\u000e\u001a6\u0010T\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u00012\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u001a6\u0010U\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u001a6\u0010V\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u001aK\u0010Z\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2'\u0010\u001c\u001a#\u0012\u0013\u0012\u00110\u000e\u00a2\u0006\f\bX\u0012\b\bY\u0012\u0004\b\b(\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0WH\u0086\b\u00f8\u0001\u0000\u001af\u0010^\u001a\u00028\u0001\"\u0004\b\u0000\u0010\u0000\"\u0010\b\u0001\u0010\\*\n\u0012\u0006\b\u0000\u0012\u00028\u00000[*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010]\u001a\u00028\u00012'\u0010\u001c\u001a#\u0012\u0013\u0012\u00110\u000e\u00a2\u0006\f\bX\u0012\b\bY\u0012\u0004\b\b(\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0WH\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0004\b^\u0010_\u001a$\u0010a\u001a\r\u0012\t\u0012\u00078\u0000\u00a2\u0006\u0002\b`0\u0001\"\u0006\b\u0000\u0010'\u0018\u0001*\u0006\u0012\u0002\b\u00030\tH\u0086\b\u001a:\u0010b\u001a\u00028\u0001\"\u0006\b\u0000\u0010'\u0018\u0001\"\u0010\b\u0001\u0010\\*\n\u0012\u0006\b\u0000\u0012\u00028\u00000[*\u0006\u0012\u0002\b\u00030\t2\u0006\u0010]\u001a\u00028\u0001H\u0086\b\u00a2\u0006\u0004\bb\u0010c\u001a6\u0010d\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u001a\"\u0010e\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\b\b\u0000\u0010\u0000*\u00020&*\n\u0012\u0006\u0012\u0004\u0018\u00018\u00000\t\u001a=\u0010f\u001a\u00028\u0000\"\u0010\b\u0000\u0010\\*\n\u0012\u0006\b\u0000\u0012\u00028\u00010[\"\b\b\u0001\u0010\u0000*\u00020&*\n\u0012\u0006\u0012\u0004\u0018\u00018\u00010\t2\u0006\u0010]\u001a\u00028\u0000\u00a2\u0006\u0004\bf\u0010c\u001aQ\u0010g\u001a\u00028\u0001\"\u0004\b\u0000\u0010\u0000\"\u0010\b\u0001\u0010\\*\n\u0012\u0006\b\u0000\u0012\u00028\u00000[*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010]\u001a\u00028\u00012\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0004\bg\u0010h\u001aQ\u0010i\u001a\u00028\u0001\"\u0004\b\u0000\u0010\u0000\"\u0010\b\u0001\u0010\\*\n\u0012\u0006\b\u0000\u0012\u00028\u00000[*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010]\u001a\u00028\u00012\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0004\bi\u0010h\u001a$\u0010l\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u00012\u0006\u0010k\u001a\u00020j\u001a*\u0010m\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u00012\f\u0010k\u001a\b\u0012\u0004\u0012\u00020\u000e0\t\u001a$\u0010n\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010Q\u001a\u00020\u000e\u001a$\u0010o\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u00012\u0006\u0010Q\u001a\u00020\u000e\u001a6\u0010p\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\u00012\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u001a6\u0010q\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u001a\u001c\u0010r\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t\u001a \u0010u\u001a\u00020t\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000s2\u0006\u0010F\u001a\u00020EH\u0007\u001aD\u0010x\u001a\u00020t\"\u0004\b\u0000\u0010\u0000\"\u000e\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00010v*\b\u0012\u0004\u0012\u00028\u00000s2\u0016\b\u0004\u0010w\u001a\u0010\u0012\u0004\u0012\u00028\u0000\u0012\u0006\u0012\u0004\u0018\u00018\u00010\u0014H\u0086\b\u00f8\u0001\u0000\u001aD\u0010y\u001a\u00020t\"\u0004\b\u0000\u0010\u0000\"\u000e\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00010v*\b\u0012\u0004\u0012\u00028\u00000s2\u0016\b\u0004\u0010w\u001a\u0010\u0012\u0004\u0012\u00028\u0000\u0012\u0006\u0012\u0004\u0018\u00018\u00010\u0014H\u0086\b\u00f8\u0001\u0000\u001a \u0010z\u001a\u00020t\"\u000e\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000v*\b\u0012\u0004\u0012\u00028\u00000s\u001a&\u0010{\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u000e\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000v*\b\u0012\u0004\u0012\u00028\u00000\t\u001aJ\u0010|\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000\"\u000e\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00010v*\b\u0012\u0004\u0012\u00028\u00000\t2\u0016\b\u0004\u0010w\u001a\u0010\u0012\u0004\u0012\u00028\u0000\u0012\u0006\u0012\u0004\u0018\u00018\u00010\u0014H\u0086\b\u00f8\u0001\u0000\u001aJ\u0010}\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000\"\u000e\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00010v*\b\u0012\u0004\u0012\u00028\u00000\t2\u0016\b\u0004\u0010w\u001a\u0010\u0012\u0004\u0012\u00028\u0000\u0012\u0006\u0012\u0004\u0018\u00018\u00010\u0014H\u0086\b\u00f8\u0001\u0000\u001a&\u0010~\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u000e\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000v*\b\u0012\u0004\u0012\u00028\u00000\t\u001a;\u0010\u0082\u0001\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u001c\u0010\u0081\u0001\u001a\u0017\u0012\u0006\b\u0000\u0012\u00028\u00000\u007fj\u000b\u0012\u0006\b\u0000\u0012\u00028\u0000`\u0080\u0001\u001a\u0012\u0010\u0084\u0001\u001a\u00030\u0083\u0001*\b\u0012\u0004\u0012\u00020\u000b0B\u001a\u0013\u0010\u0087\u0001\u001a\u00030\u0086\u0001*\t\u0012\u0005\u0012\u00030\u0085\u00010B\u001a\u0013\u0010\u008a\u0001\u001a\u00030\u0089\u0001*\t\u0012\u0005\u0012\u00030\u0088\u00010B\u001a\u0013\u0010\u008d\u0001\u001a\u00030\u008c\u0001*\t\u0012\u0005\u0012\u00030\u008b\u00010B\u001a\u0013\u0010\u0090\u0001\u001a\u00030\u008f\u0001*\t\u0012\u0005\u0012\u00030\u008e\u00010B\u001a\u0012\u0010\u0092\u0001\u001a\u00030\u0091\u0001*\b\u0012\u0004\u0012\u00020\u000e0B\u001a\u0013\u0010\u0095\u0001\u001a\u00030\u0094\u0001*\t\u0012\u0005\u0012\u00030\u0093\u00010B\u001a\u0013\u0010\u0098\u0001\u001a\u00030\u0097\u0001*\t\u0012\u0005\u0012\u00030\u0096\u00010B\u001aY\u0010\u009d\u0001\u001a\u000f\u0012\u0004\u0012\u00028\u0001\u0012\u0004\u0012\u00028\u00020\u009c\u0001\"\u0004\b\u0000\u0010\u0000\"\u0005\b\u0001\u0010\u0099\u0001\"\u0005\b\u0002\u0010\u009a\u0001*\b\u0012\u0004\u0012\u00028\u00000\t2\u001f\u0010(\u001a\u001b\u0012\u0004\u0012\u00028\u0000\u0012\u0011\u0012\u000f\u0012\u0004\u0012\u00028\u0001\u0012\u0004\u0012\u00028\u00020\u009b\u00010\u0014H\u0086\b\u00f8\u0001\u0000\u001aF\u0010\u009f\u0001\u001a\u000f\u0012\u0004\u0012\u00028\u0001\u0012\u0004\u0012\u00028\u00000\u009c\u0001\"\u0004\b\u0000\u0010\u0000\"\u0005\b\u0001\u0010\u0099\u0001*\b\u0012\u0004\u0012\u00028\u00000\t2\u0013\u0010\u009e\u0001\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u0014H\u0086\b\u00f8\u0001\u0000\u001ab\u0010\u00a1\u0001\u001a\u000f\u0012\u0004\u0012\u00028\u0001\u0012\u0004\u0012\u00028\u00020\u009c\u0001\"\u0004\b\u0000\u0010\u0000\"\u0005\b\u0001\u0010\u0099\u0001\"\u0005\b\u0002\u0010\u009a\u0001*\b\u0012\u0004\u0012\u00028\u00000\t2\u0013\u0010\u009e\u0001\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u00142\u0013\u0010\u00a0\u0001\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00020\u0014H\u0086\b\u00f8\u0001\u0000\u001af\u0010\u00a4\u0001\u001a\u00028\u0002\"\u0004\b\u0000\u0010\u0000\"\u0005\b\u0001\u0010\u0099\u0001\"\u001a\b\u0002\u0010\u00a3\u0001*\u0013\u0012\u0006\b\u0000\u0012\u00028\u0001\u0012\u0006\b\u0000\u0012\u00028\u00000\u00a2\u0001*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010]\u001a\u00028\u00022\u0013\u0010\u009e\u0001\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u0014H\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00a4\u0001\u0010\u00a5\u0001\u001a\u0082\u0001\u0010\u00a6\u0001\u001a\u00028\u0003\"\u0004\b\u0000\u0010\u0000\"\u0005\b\u0001\u0010\u0099\u0001\"\u0005\b\u0002\u0010\u009a\u0001\"\u001a\b\u0003\u0010\u00a3\u0001*\u0013\u0012\u0006\b\u0000\u0012\u00028\u0001\u0012\u0006\b\u0000\u0012\u00028\u00020\u00a2\u0001*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010]\u001a\u00028\u00032\u0013\u0010\u009e\u0001\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u00142\u0013\u0010\u00a0\u0001\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00020\u0014H\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00a6\u0001\u0010\u00a7\u0001\u001ay\u0010\u00a8\u0001\u001a\u00028\u0003\"\u0004\b\u0000\u0010\u0000\"\u0005\b\u0001\u0010\u0099\u0001\"\u0005\b\u0002\u0010\u009a\u0001\"\u001a\b\u0003\u0010\u00a3\u0001*\u0013\u0012\u0006\b\u0000\u0012\u00028\u0001\u0012\u0006\b\u0000\u0012\u00028\u00020\u00a2\u0001*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010]\u001a\u00028\u00032\u001f\u0010(\u001a\u001b\u0012\u0004\u0012\u00028\u0000\u0012\u0011\u0012\u000f\u0012\u0004\u0012\u00028\u0001\u0012\u0004\u0012\u00028\u00020\u009b\u00010\u0014H\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00a8\u0001\u0010\u00a5\u0001\u001aG\u0010\u00aa\u0001\u001a\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u009c\u0001\"\u0005\b\u0000\u0010\u0099\u0001\"\u0005\b\u0001\u0010\u009a\u0001*\b\u0012\u0004\u0012\u00028\u00000\t2\u0013\u0010\u00a9\u0001\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u001ag\u0010\u00ab\u0001\u001a\u00028\u0002\"\u0005\b\u0000\u0010\u0099\u0001\"\u0005\b\u0001\u0010\u009a\u0001\"\u001a\b\u0002\u0010\u00a3\u0001*\u0013\u0012\u0006\b\u0000\u0012\u00028\u0000\u0012\u0006\b\u0000\u0012\u00028\u00010\u00a2\u0001*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010]\u001a\u00028\u00022\u0013\u0010\u00a9\u0001\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00ab\u0001\u0010\u00a5\u0001\u001a9\u0010\u00ac\u0001\u001a\u00028\u0001\"\u0004\b\u0000\u0010\u0000\"\u0010\b\u0001\u0010\\*\n\u0012\u0006\b\u0000\u0012\u00028\u00000[*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010]\u001a\u00028\u0001\u00a2\u0006\u0005\b\u00ac\u0001\u0010c\u001a)\u0010\u00af\u0001\u001a\u0014\u0012\u0004\u0012\u00028\u00000\u00ad\u0001j\t\u0012\u0004\u0012\u00028\u0000`\u00ae\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t\u001a\u001d\u0010\u00b0\u0001\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t\u001a\u001d\u0010\u00b1\u0001\u001a\b\u0012\u0004\u0012\u00028\u00000s\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t\u001a\u001d\u0010\u00b2\u0001\u001a\b\u0012\u0004\u0012\u00028\u00000s\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000B\u001a\u001e\u0010\u00b4\u0001\u001a\t\u0012\u0004\u0012\u00028\u00000\u00b3\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t\u001aC\u0010\u00b5\u0001\u001a\b\u0012\u0004\u0012\u00028\u00010\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00000\t2\u0018\u0010(\u001a\u0014\u0012\u0004\u0012\u00028\u0000\u0012\n\u0012\b\u0012\u0004\u0012\u00028\u00010\t0\u0014H\u0086\b\u00f8\u0001\u0000\u001aM\u0010\u00b7\u0001\u001a\b\u0012\u0004\u0012\u00028\u00010\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00000\t2\u0019\u0010(\u001a\u0015\u0012\u0004\u0012\u00028\u0000\u0012\u000b\u0012\t\u0012\u0004\u0012\u00028\u00010\u00b6\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00b7\u0001\u0010\u00b8\u0001\u001aa\u0010\u00b9\u0001\u001a\b\u0012\u0004\u0012\u00028\u00010\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00000\t2-\u0010(\u001a)\u0012\u0013\u0012\u00110\u000e\u00a2\u0006\f\bX\u0012\b\bY\u0012\u0004\b\b(\u000f\u0012\u0004\u0012\u00028\u0000\u0012\n\u0012\b\u0012\u0004\u0012\u00028\u00010\t0WH\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00b9\u0001\u0010\u00ba\u0001\u001ab\u0010\u00bb\u0001\u001a\b\u0012\u0004\u0012\u00028\u00010\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00000\t2.\u0010(\u001a*\u0012\u0013\u0012\u00110\u000e\u00a2\u0006\f\bX\u0012\b\bY\u0012\u0004\b\b(\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u000b\u0012\t\u0012\u0004\u0012\u00028\u00010\u00b6\u00010WH\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00bb\u0001\u0010\u00ba\u0001\u001at\u0010\u00bc\u0001\u001a\u00028\u0002\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'\"\u0010\b\u0002\u0010\\*\n\u0012\u0006\b\u0000\u0012\u00028\u00010[*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010]\u001a\u00028\u00022-\u0010(\u001a)\u0012\u0013\u0012\u00110\u000e\u00a2\u0006\f\bX\u0012\b\bY\u0012\u0004\b\b(\u000f\u0012\u0004\u0012\u00028\u0000\u0012\n\u0012\b\u0012\u0004\u0012\u00028\u00010\t0WH\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0005\b\u00bc\u0001\u0010_\u001au\u0010\u00bd\u0001\u001a\u00028\u0002\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'\"\u0010\b\u0002\u0010\\*\n\u0012\u0006\b\u0000\u0012\u00028\u00010[*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010]\u001a\u00028\u00022.\u0010(\u001a*\u0012\u0013\u0012\u00110\u000e\u00a2\u0006\f\bX\u0012\b\bY\u0012\u0004\b\b(\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u000b\u0012\t\u0012\u0004\u0012\u00028\u00010\u00b6\u00010WH\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0005\b\u00bd\u0001\u0010_\u001a_\u0010\u00be\u0001\u001a\u00028\u0002\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'\"\u0010\b\u0002\u0010\\*\n\u0012\u0006\b\u0000\u0012\u00028\u00010[*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010]\u001a\u00028\u00022\u0018\u0010(\u001a\u0014\u0012\u0004\u0012\u00028\u0000\u0012\n\u0012\b\u0012\u0004\u0012\u00028\u00010\t0\u0014H\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0005\b\u00be\u0001\u0010h\u001a`\u0010\u00bf\u0001\u001a\u00028\u0002\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'\"\u0010\b\u0002\u0010\\*\n\u0012\u0006\b\u0000\u0012\u00028\u00010[*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010]\u001a\u00028\u00022\u0019\u0010(\u001a\u0015\u0012\u0004\u0012\u00028\u0000\u0012\u000b\u0012\t\u0012\u0004\u0012\u00028\u00010\u00b6\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0005\b\u00bf\u0001\u0010h\u001aL\u0010\u00c0\u0001\u001a\u0015\u0012\u0004\u0012\u00028\u0001\u0012\n\u0012\b\u0012\u0004\u0012\u00028\u00000\u00010\u009c\u0001\"\u0004\b\u0000\u0010\u0000\"\u0005\b\u0001\u0010\u0099\u0001*\b\u0012\u0004\u0012\u00028\u00000\t2\u0013\u0010\u009e\u0001\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u0014H\u0086\b\u00f8\u0001\u0000\u001ah\u0010\u00c1\u0001\u001a\u0015\u0012\u0004\u0012\u00028\u0001\u0012\n\u0012\b\u0012\u0004\u0012\u00028\u00020\u00010\u009c\u0001\"\u0004\b\u0000\u0010\u0000\"\u0005\b\u0001\u0010\u0099\u0001\"\u0005\b\u0002\u0010\u009a\u0001*\b\u0012\u0004\u0012\u00028\u00000\t2\u0013\u0010\u009e\u0001\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u00142\u0013\u0010\u00a0\u0001\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00020\u0014H\u0086\b\u00f8\u0001\u0000\u001aj\u0010\u00c2\u0001\u001a\u00028\u0002\"\u0004\b\u0000\u0010\u0000\"\u0005\b\u0001\u0010\u0099\u0001\"\u001e\b\u0002\u0010\u00a3\u0001*\u0017\u0012\u0006\b\u0000\u0012\u00028\u0001\u0012\n\u0012\b\u0012\u0004\u0012\u00028\u00000s0\u00a2\u0001*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010]\u001a\u00028\u00022\u0013\u0010\u009e\u0001\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u0014H\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00c2\u0001\u0010\u00a5\u0001\u001a\u0086\u0001\u0010\u00c3\u0001\u001a\u00028\u0003\"\u0004\b\u0000\u0010\u0000\"\u0005\b\u0001\u0010\u0099\u0001\"\u0005\b\u0002\u0010\u009a\u0001\"\u001e\b\u0003\u0010\u00a3\u0001*\u0017\u0012\u0006\b\u0000\u0012\u00028\u0001\u0012\n\u0012\b\u0012\u0004\u0012\u00028\u00020s0\u00a2\u0001*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010]\u001a\u00028\u00032\u0013\u0010\u009e\u0001\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u00142\u0013\u0010\u00a0\u0001\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00020\u0014H\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00c3\u0001\u0010\u00a7\u0001\u001aH\u0010\u00c5\u0001\u001a\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u00c4\u0001\"\u0004\b\u0000\u0010\u0000\"\u0005\b\u0001\u0010\u0099\u0001*\b\u0012\u0004\u0012\u00028\u00000\t2\u0015\b\u0004\u0010\u009e\u0001\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u001a=\u0010\u00c6\u0001\u001a\b\u0012\u0004\u0012\u00028\u00010\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010(\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u0014H\u0086\b\u00f8\u0001\u0000\u001aR\u0010\u00c7\u0001\u001a\b\u0012\u0004\u0012\u00028\u00010\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00000\t2'\u0010(\u001a#\u0012\u0013\u0012\u00110\u000e\u00a2\u0006\f\bX\u0012\b\bY\u0012\u0004\b\b(\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010WH\u0086\b\u00f8\u0001\u0000\u001aX\u0010\u00c8\u0001\u001a\b\u0012\u0004\u0012\u00028\u00010\u0001\"\u0004\b\u0000\u0010\u0000\"\b\b\u0001\u0010'*\u00020&*\b\u0012\u0004\u0012\u00028\u00000\t2)\u0010(\u001a%\u0012\u0013\u0012\u00110\u000e\u00a2\u0006\f\bX\u0012\b\bY\u0012\u0004\b\b(\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0006\u0012\u0004\u0018\u00018\u00010WH\u0086\b\u00f8\u0001\u0000\u001at\u0010\u00c9\u0001\u001a\u00028\u0002\"\u0004\b\u0000\u0010\u0000\"\b\b\u0001\u0010'*\u00020&\"\u0010\b\u0002\u0010\\*\n\u0012\u0006\b\u0000\u0012\u00028\u00010[*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010]\u001a\u00028\u00022)\u0010(\u001a%\u0012\u0013\u0012\u00110\u000e\u00a2\u0006\f\bX\u0012\b\bY\u0012\u0004\b\b(\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0006\u0012\u0004\u0018\u00018\u00010WH\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0005\b\u00c9\u0001\u0010_\u001an\u0010\u00ca\u0001\u001a\u00028\u0002\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'\"\u0010\b\u0002\u0010\\*\n\u0012\u0006\b\u0000\u0012\u00028\u00010[*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010]\u001a\u00028\u00022'\u0010(\u001a#\u0012\u0013\u0012\u00110\u000e\u00a2\u0006\f\bX\u0012\b\bY\u0012\u0004\b\b(\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010WH\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0005\b\u00ca\u0001\u0010_\u001aC\u0010\u00cb\u0001\u001a\b\u0012\u0004\u0012\u00028\u00010\u0001\"\u0004\b\u0000\u0010\u0000\"\b\b\u0001\u0010'*\u00020&*\b\u0012\u0004\u0012\u00028\u00000\t2\u0014\u0010(\u001a\u0010\u0012\u0004\u0012\u00028\u0000\u0012\u0006\u0012\u0004\u0018\u00018\u00010\u0014H\u0086\b\u00f8\u0001\u0000\u001a_\u0010\u00cc\u0001\u001a\u00028\u0002\"\u0004\b\u0000\u0010\u0000\"\b\b\u0001\u0010'*\u00020&\"\u0010\b\u0002\u0010\\*\n\u0012\u0006\b\u0000\u0012\u00028\u00010[*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010]\u001a\u00028\u00022\u0014\u0010(\u001a\u0010\u0012\u0004\u0012\u00028\u0000\u0012\u0006\u0012\u0004\u0018\u00018\u00010\u0014H\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0005\b\u00cc\u0001\u0010h\u001aY\u0010\u00cd\u0001\u001a\u00028\u0002\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'\"\u0010\b\u0002\u0010\\*\n\u0012\u0006\b\u0000\u0012\u00028\u00010[*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010]\u001a\u00028\u00022\u0012\u0010(\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u0014H\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0005\b\u00cd\u0001\u0010h\u001a$\u0010\u00cf\u0001\u001a\u000f\u0012\u000b\u0012\t\u0012\u0004\u0012\u00028\u00000\u00ce\u00010\t\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t\u001a\u001d\u0010\u00d0\u0001\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t\u001a>\u0010\u00d1\u0001\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000\"\u0005\b\u0001\u0010\u0099\u0001*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010w\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u0014H\u0086\b\u00f8\u0001\u0000\u001a0\u0010\u00d3\u0001\u001a\t\u0012\u0004\u0012\u00028\u00000\u00b3\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\r\u0010\u00d2\u0001\u001a\b\u0012\u0004\u0012\u00028\u00000\tH\u0086\u0004\u001a0\u0010\u00d4\u0001\u001a\t\u0012\u0004\u0012\u00028\u00000\u00b3\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\r\u0010\u00d2\u0001\u001a\b\u0012\u0004\u0012\u00028\u00000\tH\u0086\u0004\u001a\u001e\u0010\u00d6\u0001\u001a\t\u0012\u0004\u0012\u00028\u00000\u00d5\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t\u001a0\u0010\u00d7\u0001\u001a\t\u0012\u0004\u0012\u00028\u00000\u00b3\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\r\u0010\u00d2\u0001\u001a\b\u0012\u0004\u0012\u00028\u00000\tH\u0086\u0004\u001a1\u0010\u00d8\u0001\u001a\u00020\u000b\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u001a\u0017\u0010\u00d9\u0001\u001a\u00020\u000b\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t\u001a1\u0010\u00da\u0001\u001a\u00020\u000b\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u001a\u0017\u0010\u00db\u0001\u001a\u00020\u000e\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t\u001a\u001a\u0010\u00dc\u0001\u001a\u00020\u000e\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000BH\u0087\b\u001a1\u0010\u00dd\u0001\u001a\u00020\u000e\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u001a`\u0010\u00e1\u0001\u001a\u00028\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00000\t2\u0007\u0010\u00de\u0001\u001a\u00028\u00012)\u0010\u00e0\u0001\u001a$\u0012\u0014\u0012\u00128\u0001\u00a2\u0006\r\bX\u0012\t\bY\u0012\u0005\b\b(\u00df\u0001\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010WH\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00e1\u0001\u0010\u00e2\u0001\u001av\u0010\u00e4\u0001\u001a\u00028\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00000\t2\u0007\u0010\u00de\u0001\u001a\u00028\u00012?\u0010\u00e0\u0001\u001a:\u0012\u0013\u0012\u00110\u000e\u00a2\u0006\f\bX\u0012\b\bY\u0012\u0004\b\b(\u000f\u0012\u0014\u0012\u00128\u0001\u00a2\u0006\r\bX\u0012\t\bY\u0012\u0005\b\b(\u00df\u0001\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u00e3\u0001H\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00e4\u0001\u0010\u00e5\u0001\u001a`\u0010\u00e6\u0001\u001a\u00028\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00000\u00012\u0007\u0010\u00de\u0001\u001a\u00028\u00012)\u0010\u00e0\u0001\u001a$\u0012\u0004\u0012\u00028\u0000\u0012\u0014\u0012\u00128\u0001\u00a2\u0006\r\bX\u0012\t\bY\u0012\u0005\b\b(\u00df\u0001\u0012\u0004\u0012\u00028\u00010WH\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00e6\u0001\u0010\u00e7\u0001\u001av\u0010\u00e8\u0001\u001a\u00028\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00000\u00012\u0007\u0010\u00de\u0001\u001a\u00028\u00012?\u0010\u00e0\u0001\u001a:\u0012\u0013\u0012\u00110\u000e\u00a2\u0006\f\bX\u0012\b\bY\u0012\u0004\b\b(\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0014\u0012\u00128\u0001\u00a2\u0006\r\bX\u0012\t\bY\u0012\u0005\b\b(\u00df\u0001\u0012\u0004\u0012\u00028\u00010\u00e3\u0001H\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00e8\u0001\u0010\u00e9\u0001\u001a2\u0010\u00eb\u0001\u001a\u00020t\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0013\u0010\u00ea\u0001\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020t0\u0014H\u0087\b\u00f8\u0001\u0000\u001aG\u0010\u00ec\u0001\u001a\u00020t\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2(\u0010\u00ea\u0001\u001a#\u0012\u0013\u0012\u00110\u000e\u00a2\u0006\f\bX\u0012\b\bY\u0012\u0004\b\b(\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020t0WH\u0086\b\u00f8\u0001\u0000\u001a \u0010\u00ed\u0001\u001a\u0005\u0018\u00010\u008b\u0001*\t\u0012\u0005\u0012\u00030\u008b\u00010\tH\u0007\u00a2\u0006\u0006\b\u00ed\u0001\u0010\u00ee\u0001\u001a \u0010\u00ef\u0001\u001a\u0005\u0018\u00010\u008e\u0001*\t\u0012\u0005\u0012\u00030\u008e\u00010\tH\u0007\u00a2\u0006\u0006\b\u00ef\u0001\u0010\u00f0\u0001\u001a.\u0010\u00f1\u0001\u001a\u0004\u0018\u00018\u0000\"\u000e\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000v*\b\u0012\u0004\u0012\u00028\u00000\tH\u0007\u00a2\u0006\u0006\b\u00f1\u0001\u0010\u00f2\u0001\u001aK\u0010\u00f3\u0001\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000\"\u000e\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00010v*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010w\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0005\b\u00f3\u0001\u0010\u001e\u001aK\u0010\u00f4\u0001\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000\"\u000e\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00010v*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010w\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0005\b\u00f4\u0001\u0010\u001e\u001a3\u0010\u00f5\u0001\u001a\u00030\u008b\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0013\u0010w\u001a\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0005\u0012\u00030\u008b\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u001a3\u0010\u00f6\u0001\u001a\u00030\u008e\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0013\u0010w\u001a\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0005\u0012\u00030\u008e\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u001aJ\u0010\u00f7\u0001\u001a\u00028\u0001\"\u0004\b\u0000\u0010\u0000\"\u000e\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00010v*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010w\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00f7\u0001\u0010\u00f8\u0001\u001a>\u0010\u00f9\u0001\u001a\u0005\u0018\u00010\u008b\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0013\u0010w\u001a\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0005\u0012\u00030\u008b\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00f9\u0001\u0010\u00fa\u0001\u001a>\u0010\u00fb\u0001\u001a\u0005\u0018\u00010\u008e\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0013\u0010w\u001a\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0005\u0012\u00030\u008e\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00fb\u0001\u0010\u00fc\u0001\u001aL\u0010\u00fd\u0001\u001a\u0004\u0018\u00018\u0001\"\u0004\b\u0000\u0010\u0000\"\u000e\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00010v*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010w\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00fd\u0001\u0010\u00f8\u0001\u001a^\u0010\u00fe\u0001\u001a\u00028\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00000\t2\u001c\u0010\u0081\u0001\u001a\u0017\u0012\u0006\b\u0000\u0012\u00028\u00010\u007fj\u000b\u0012\u0006\b\u0000\u0012\u00028\u0001`\u0080\u00012\u0012\u0010w\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00fe\u0001\u0010\u00ff\u0001\u001a`\u0010\u0080\u0002\u001a\u0004\u0018\u00018\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00000\t2\u001c\u0010\u0081\u0001\u001a\u0017\u0012\u0006\b\u0000\u0012\u00028\u00010\u007fj\u000b\u0012\u0006\b\u0000\u0012\u00028\u0001`\u0080\u00012\u0012\u0010w\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u0080\u0002\u0010\u00ff\u0001\u001a \u0010\u0081\u0002\u001a\u0005\u0018\u00010\u008b\u0001*\t\u0012\u0005\u0012\u00030\u008b\u00010\tH\u0007\u00a2\u0006\u0006\b\u0081\u0002\u0010\u00ee\u0001\u001a \u0010\u0082\u0002\u001a\u0005\u0018\u00010\u008e\u0001*\t\u0012\u0005\u0012\u00030\u008e\u00010\tH\u0007\u00a2\u0006\u0006\b\u0082\u0002\u0010\u00f0\u0001\u001a.\u0010\u0083\u0002\u001a\u0004\u0018\u00018\u0000\"\u000e\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000v*\b\u0012\u0004\u0012\u00028\u00000\tH\u0007\u00a2\u0006\u0006\b\u0083\u0002\u0010\u00f2\u0001\u001aB\u0010\u0084\u0002\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u001c\u0010\u0081\u0001\u001a\u0017\u0012\u0006\b\u0000\u0012\u00028\u00000\u007fj\u000b\u0012\u0006\b\u0000\u0012\u00028\u0000`\u0080\u0001H\u0007\u00a2\u0006\u0006\b\u0084\u0002\u0010\u0085\u0002\u001aB\u0010\u0086\u0002\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u001c\u0010\u0081\u0001\u001a\u0017\u0012\u0006\b\u0000\u0012\u00028\u00000\u007fj\u000b\u0012\u0006\b\u0000\u0012\u00028\u0000`\u0080\u0001H\u0007\u00a2\u0006\u0006\b\u0086\u0002\u0010\u0085\u0002\u001a \u0010\u0087\u0002\u001a\u0005\u0018\u00010\u008b\u0001*\t\u0012\u0005\u0012\u00030\u008b\u00010\tH\u0007\u00a2\u0006\u0006\b\u0087\u0002\u0010\u00ee\u0001\u001a \u0010\u0088\u0002\u001a\u0005\u0018\u00010\u008e\u0001*\t\u0012\u0005\u0012\u00030\u008e\u00010\tH\u0007\u00a2\u0006\u0006\b\u0088\u0002\u0010\u00f0\u0001\u001a.\u0010\u0089\u0002\u001a\u0004\u0018\u00018\u0000\"\u000e\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000v*\b\u0012\u0004\u0012\u00028\u00000\tH\u0007\u00a2\u0006\u0006\b\u0089\u0002\u0010\u00f2\u0001\u001aK\u0010\u008a\u0002\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000\"\u000e\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00010v*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010w\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0005\b\u008a\u0002\u0010\u001e\u001aK\u0010\u008b\u0002\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000\"\u000e\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00010v*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010w\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0005\b\u008b\u0002\u0010\u001e\u001a3\u0010\u008c\u0002\u001a\u00030\u008b\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0013\u0010w\u001a\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0005\u0012\u00030\u008b\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u001a3\u0010\u008d\u0002\u001a\u00030\u008e\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0013\u0010w\u001a\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0005\u0012\u00030\u008e\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u001aJ\u0010\u008e\u0002\u001a\u00028\u0001\"\u0004\b\u0000\u0010\u0000\"\u000e\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00010v*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010w\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u008e\u0002\u0010\u00f8\u0001\u001a>\u0010\u008f\u0002\u001a\u0005\u0018\u00010\u008b\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0013\u0010w\u001a\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0005\u0012\u00030\u008b\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u008f\u0002\u0010\u00fa\u0001\u001a>\u0010\u0090\u0002\u001a\u0005\u0018\u00010\u008e\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0013\u0010w\u001a\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0005\u0012\u00030\u008e\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u0090\u0002\u0010\u00fc\u0001\u001aL\u0010\u0091\u0002\u001a\u0004\u0018\u00018\u0001\"\u0004\b\u0000\u0010\u0000\"\u000e\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00010v*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010w\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u0091\u0002\u0010\u00f8\u0001\u001a^\u0010\u0092\u0002\u001a\u00028\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00000\t2\u001c\u0010\u0081\u0001\u001a\u0017\u0012\u0006\b\u0000\u0012\u00028\u00010\u007fj\u000b\u0012\u0006\b\u0000\u0012\u00028\u0001`\u0080\u00012\u0012\u0010w\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u0092\u0002\u0010\u00ff\u0001\u001a`\u0010\u0093\u0002\u001a\u0004\u0018\u00018\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00000\t2\u001c\u0010\u0081\u0001\u001a\u0017\u0012\u0006\b\u0000\u0012\u00028\u00010\u007fj\u000b\u0012\u0006\b\u0000\u0012\u00028\u0001`\u0080\u00012\u0012\u0010w\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u0093\u0002\u0010\u00ff\u0001\u001a \u0010\u0094\u0002\u001a\u0005\u0018\u00010\u008b\u0001*\t\u0012\u0005\u0012\u00030\u008b\u00010\tH\u0007\u00a2\u0006\u0006\b\u0094\u0002\u0010\u00ee\u0001\u001a \u0010\u0095\u0002\u001a\u0005\u0018\u00010\u008e\u0001*\t\u0012\u0005\u0012\u00030\u008e\u00010\tH\u0007\u00a2\u0006\u0006\b\u0095\u0002\u0010\u00f0\u0001\u001a.\u0010\u0096\u0002\u001a\u0004\u0018\u00018\u0000\"\u000e\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000v*\b\u0012\u0004\u0012\u00028\u00000\tH\u0007\u00a2\u0006\u0006\b\u0096\u0002\u0010\u00f2\u0001\u001aB\u0010\u0097\u0002\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u001c\u0010\u0081\u0001\u001a\u0017\u0012\u0006\b\u0000\u0012\u00028\u00000\u007fj\u000b\u0012\u0006\b\u0000\u0012\u00028\u0000`\u0080\u0001H\u0007\u00a2\u0006\u0006\b\u0097\u0002\u0010\u0085\u0002\u001aB\u0010\u0098\u0002\u001a\u0004\u0018\u00018\u0000\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u001c\u0010\u0081\u0001\u001a\u0017\u0012\u0006\b\u0000\u0012\u00028\u00000\u007fj\u000b\u0012\u0006\b\u0000\u0012\u00028\u0000`\u0080\u0001H\u0007\u00a2\u0006\u0006\b\u0098\u0002\u0010\u0085\u0002\u001a\u0017\u0010\u0099\u0002\u001a\u00020\u000b\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t\u001a1\u0010\u009a\u0002\u001a\u00020\u000b\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u001aE\u0010\u009b\u0002\u001a\u00028\u0001\"\u0004\b\u0000\u0010\u0000\"\u000e\b\u0001\u0010\\*\b\u0012\u0004\u0012\u00028\u00000\t*\u00028\u00012\u0013\u0010\u00ea\u0001\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020t0\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u009b\u0002\u0010\u009c\u0002\u001aZ\u0010\u009d\u0002\u001a\u00028\u0001\"\u0004\b\u0000\u0010\u0000\"\u000e\b\u0001\u0010\\*\b\u0012\u0004\u0012\u00028\u00000\t*\u00028\u00012(\u0010\u00ea\u0001\u001a#\u0012\u0013\u0012\u00110\u000e\u00a2\u0006\f\bX\u0012\b\bY\u0012\u0004\b\b(\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020t0WH\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u009d\u0002\u0010\u009e\u0002\u001a\\\u0010\u00a0\u0002\u001a\u00028\u0000\"\u0005\b\u0000\u0010\u009f\u0002\"\b\b\u0001\u0010\u0000*\u00028\u0000*\b\u0012\u0004\u0012\u00028\u00010\t2)\u0010\u00e0\u0001\u001a$\u0012\u0014\u0012\u00128\u0000\u00a2\u0006\r\bX\u0012\t\bY\u0012\u0005\b\b(\u00df\u0001\u0012\u0004\u0012\u00028\u0001\u0012\u0004\u0012\u00028\u00000WH\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00a0\u0002\u0010\u00a1\u0002\u001ar\u0010\u00a2\u0002\u001a\u00028\u0000\"\u0005\b\u0000\u0010\u009f\u0002\"\b\b\u0001\u0010\u0000*\u00028\u0000*\b\u0012\u0004\u0012\u00028\u00010\t2?\u0010\u00e0\u0001\u001a:\u0012\u0013\u0012\u00110\u000e\u00a2\u0006\f\bX\u0012\b\bY\u0012\u0004\b\b(\u000f\u0012\u0014\u0012\u00128\u0000\u00a2\u0006\r\bX\u0012\t\bY\u0012\u0005\b\b(\u00df\u0001\u0012\u0004\u0012\u00028\u0001\u0012\u0004\u0012\u00028\u00000\u00e3\u0001H\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00a2\u0002\u0010\u00a3\u0002\u001at\u0010\u00a4\u0002\u001a\u0004\u0018\u00018\u0000\"\u0005\b\u0000\u0010\u009f\u0002\"\b\b\u0001\u0010\u0000*\u00028\u0000*\b\u0012\u0004\u0012\u00028\u00010\t2?\u0010\u00e0\u0001\u001a:\u0012\u0013\u0012\u00110\u000e\u00a2\u0006\f\bX\u0012\b\bY\u0012\u0004\b\b(\u000f\u0012\u0014\u0012\u00128\u0000\u00a2\u0006\r\bX\u0012\t\bY\u0012\u0005\b\b(\u00df\u0001\u0012\u0004\u0012\u00028\u0001\u0012\u0004\u0012\u00028\u00000\u00e3\u0001H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00a4\u0002\u0010\u00a3\u0002\u001a^\u0010\u00a5\u0002\u001a\u0004\u0018\u00018\u0000\"\u0005\b\u0000\u0010\u009f\u0002\"\b\b\u0001\u0010\u0000*\u00028\u0000*\b\u0012\u0004\u0012\u00028\u00010\t2)\u0010\u00e0\u0001\u001a$\u0012\u0014\u0012\u00128\u0000\u00a2\u0006\r\bX\u0012\t\bY\u0012\u0005\b\b(\u00df\u0001\u0012\u0004\u0012\u00028\u0001\u0012\u0004\u0012\u00028\u00000WH\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00a5\u0002\u0010\u00a1\u0002\u001a\\\u0010\u00a6\u0002\u001a\u00028\u0000\"\u0005\b\u0000\u0010\u009f\u0002\"\b\b\u0001\u0010\u0000*\u00028\u0000*\b\u0012\u0004\u0012\u00028\u00010\u00012)\u0010\u00e0\u0001\u001a$\u0012\u0004\u0012\u00028\u0001\u0012\u0014\u0012\u00128\u0000\u00a2\u0006\r\bX\u0012\t\bY\u0012\u0005\b\b(\u00df\u0001\u0012\u0004\u0012\u00028\u00000WH\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00a6\u0002\u0010\u00a7\u0002\u001ar\u0010\u00a8\u0002\u001a\u00028\u0000\"\u0005\b\u0000\u0010\u009f\u0002\"\b\b\u0001\u0010\u0000*\u00028\u0000*\b\u0012\u0004\u0012\u00028\u00010\u00012?\u0010\u00e0\u0001\u001a:\u0012\u0013\u0012\u00110\u000e\u00a2\u0006\f\bX\u0012\b\bY\u0012\u0004\b\b(\u000f\u0012\u0004\u0012\u00028\u0001\u0012\u0014\u0012\u00128\u0000\u00a2\u0006\r\bX\u0012\t\bY\u0012\u0005\b\b(\u00df\u0001\u0012\u0004\u0012\u00028\u00000\u00e3\u0001H\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00a8\u0002\u0010\u00a9\u0002\u001at\u0010\u00aa\u0002\u001a\u0004\u0018\u00018\u0000\"\u0005\b\u0000\u0010\u009f\u0002\"\b\b\u0001\u0010\u0000*\u00028\u0000*\b\u0012\u0004\u0012\u00028\u00010\u00012?\u0010\u00e0\u0001\u001a:\u0012\u0013\u0012\u00110\u000e\u00a2\u0006\f\bX\u0012\b\bY\u0012\u0004\b\b(\u000f\u0012\u0004\u0012\u00028\u0001\u0012\u0014\u0012\u00128\u0000\u00a2\u0006\r\bX\u0012\t\bY\u0012\u0005\b\b(\u00df\u0001\u0012\u0004\u0012\u00028\u00000\u00e3\u0001H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00aa\u0002\u0010\u00a9\u0002\u001a^\u0010\u00ab\u0002\u001a\u0004\u0018\u00018\u0000\"\u0005\b\u0000\u0010\u009f\u0002\"\b\b\u0001\u0010\u0000*\u00028\u0000*\b\u0012\u0004\u0012\u00028\u00010\u00012)\u0010\u00e0\u0001\u001a$\u0012\u0004\u0012\u00028\u0001\u0012\u0014\u0012\u00128\u0000\u00a2\u0006\r\bX\u0012\t\bY\u0012\u0005\b\b(\u00df\u0001\u0012\u0004\u0012\u00028\u00000WH\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00ab\u0002\u0010\u00a7\u0002\u001af\u0010\u00ac\u0002\u001a\b\u0012\u0004\u0012\u00028\u00010\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00000\t2\u0007\u0010\u00de\u0001\u001a\u00028\u00012)\u0010\u00e0\u0001\u001a$\u0012\u0014\u0012\u00128\u0001\u00a2\u0006\r\bX\u0012\t\bY\u0012\u0005\b\b(\u00df\u0001\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010WH\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00ac\u0002\u0010\u00ad\u0002\u001a|\u0010\u00ae\u0002\u001a\b\u0012\u0004\u0012\u00028\u00010\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00000\t2\u0007\u0010\u00de\u0001\u001a\u00028\u00012?\u0010\u00e0\u0001\u001a:\u0012\u0013\u0012\u00110\u000e\u00a2\u0006\f\bX\u0012\b\bY\u0012\u0004\b\b(\u000f\u0012\u0014\u0012\u00128\u0001\u00a2\u0006\r\bX\u0012\t\bY\u0012\u0005\b\b(\u00df\u0001\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u00e3\u0001H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00ae\u0002\u0010\u00af\u0002\u001aY\u0010\u00b0\u0002\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0005\b\u0000\u0010\u009f\u0002\"\b\b\u0001\u0010\u0000*\u00028\u0000*\b\u0012\u0004\u0012\u00028\u00010\t2)\u0010\u00e0\u0001\u001a$\u0012\u0014\u0012\u00128\u0000\u00a2\u0006\r\bX\u0012\t\bY\u0012\u0005\b\b(\u00df\u0001\u0012\u0004\u0012\u00028\u0001\u0012\u0004\u0012\u00028\u00000WH\u0087\b\u00f8\u0001\u0000\u001ao\u0010\u00b1\u0002\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0005\b\u0000\u0010\u009f\u0002\"\b\b\u0001\u0010\u0000*\u00028\u0000*\b\u0012\u0004\u0012\u00028\u00010\t2?\u0010\u00e0\u0001\u001a:\u0012\u0013\u0012\u00110\u000e\u00a2\u0006\f\bX\u0012\b\bY\u0012\u0004\b\b(\u000f\u0012\u0014\u0012\u00128\u0000\u00a2\u0006\r\bX\u0012\t\bY\u0012\u0005\b\b(\u00df\u0001\u0012\u0004\u0012\u00028\u0001\u0012\u0004\u0012\u00028\u00000\u00e3\u0001H\u0087\b\u00f8\u0001\u0000\u001af\u0010\u00b2\u0002\u001a\b\u0012\u0004\u0012\u00028\u00010\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00000\t2\u0007\u0010\u00de\u0001\u001a\u00028\u00012)\u0010\u00e0\u0001\u001a$\u0012\u0014\u0012\u00128\u0001\u00a2\u0006\r\bX\u0012\t\bY\u0012\u0005\b\b(\u00df\u0001\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010WH\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00b2\u0002\u0010\u00ad\u0002\u001a|\u0010\u00b3\u0002\u001a\b\u0012\u0004\u0012\u00028\u00010\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00000\t2\u0007\u0010\u00de\u0001\u001a\u00028\u00012?\u0010\u00e0\u0001\u001a:\u0012\u0013\u0012\u00110\u000e\u00a2\u0006\f\bX\u0012\b\bY\u0012\u0004\b\b(\u000f\u0012\u0014\u0012\u00128\u0001\u00a2\u0006\r\bX\u0012\t\bY\u0012\u0005\b\b(\u00df\u0001\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u00e3\u0001H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00b3\u0002\u0010\u00af\u0002\u001a1\u0010\u00b4\u0002\u001a\u00020\u000e\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010w\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000e0\u0014H\u0087\b\u00f8\u0001\u0000\u001a3\u0010\u00b5\u0002\u001a\u00030\u008b\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0013\u0010w\u001a\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0005\u0012\u00030\u008b\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u001a<\u0010\u00b6\u0002\u001a\u00030\u008b\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0013\u0010w\u001a\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0005\u0012\u00030\u008b\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00b6\u0002\u0010\u00b7\u0002\u001a:\u0010\u00b8\u0002\u001a\u00020\u000e\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010w\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000e0\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00b8\u0002\u0010\u00b9\u0002\u001a<\u0010\u00ba\u0002\u001a\u00030\u0093\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0013\u0010w\u001a\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0005\u0012\u00030\u0093\u00010\u0014H\u0087\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00ba\u0002\u0010\u00bb\u0002\u001a?\u0010\u00bd\u0002\u001a\u00030\u00bc\u0002\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0013\u0010w\u001a\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0005\u0012\u00030\u00bc\u00020\u0014H\u0087\b\u00f8\u0001\u0001\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00bd\u0002\u0010\u00b9\u0002\u001a?\u0010\u00bf\u0002\u001a\u00030\u00be\u0002\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0013\u0010w\u001a\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0005\u0012\u00030\u00be\u00020\u0014H\u0087\b\u00f8\u0001\u0001\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00bf\u0002\u0010\u00bb\u0002\u001a#\u0010\u00c0\u0002\u001a\b\u0012\u0004\u0012\u00028\u00000\t\"\b\b\u0000\u0010\u0000*\u00020&*\n\u0012\u0006\u0012\u0004\u0018\u00018\u00000\t\u001a#\u0010\u00c1\u0002\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\b\b\u0000\u0010\u0000*\u00020&*\n\u0012\u0006\u0012\u0004\u0018\u00018\u00000\u0001\u001a.\u0010\u00c3\u0002\u001a\u000e\u0012\n\u0012\b\u0012\u0004\u0012\u00028\u00000\u00010\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0007\u0010\u00c2\u0002\u001a\u00020\u000eH\u0007\u001aH\u0010\u00c4\u0002\u001a\b\u0012\u0004\u0012\u00028\u00010\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00000\t2\u0007\u0010\u00c2\u0002\u001a\u00020\u000e2\u0018\u0010(\u001a\u0014\u0012\n\u0012\b\u0012\u0004\u0012\u00028\u00000\u0001\u0012\u0004\u0012\u00028\u00010\u0014H\u0007\u001a1\u0010\u00c5\u0002\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010\n\u001a\u00028\u0000H\u0086\u0002\u00a2\u0006\u0006\b\u00c5\u0002\u0010\u00c6\u0002\u001a;\u0010\u00c9\u0002\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0010\u0010\u00c8\u0002\u001a\u000b\u0012\u0006\b\u0001\u0012\u00028\u00000\u00c7\u0002H\u0086\u0002\u00a2\u0006\u0006\b\u00c9\u0002\u0010\u00ca\u0002\u001a/\u0010\u00cb\u0002\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\r\u0010\u00c8\u0002\u001a\b\u0012\u0004\u0012\u00028\u00000\tH\u0086\u0002\u001a0\u0010\u00cc\u0002\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u000e\u0010\u00c8\u0002\u001a\t\u0012\u0004\u0012\u00028\u00000\u00b6\u0001H\u0086\u0002\u001a1\u0010\u00cd\u0002\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010\n\u001a\u00028\u0000H\u0087\b\u00a2\u0006\u0006\b\u00cd\u0002\u0010\u00c6\u0002\u001aJ\u0010\u00ce\u0002\u001a\u001b\u0012\n\u0012\b\u0012\u0004\u0012\u00028\u00000\u0001\u0012\n\u0012\b\u0012\u0004\u0012\u00028\u00000\u00010\u009b\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0012\u0010\u001c\u001a\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00020\u000b0\u0014H\u0086\b\u00f8\u0001\u0000\u001a1\u0010\u00cf\u0002\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010\n\u001a\u00028\u0000H\u0086\u0002\u00a2\u0006\u0006\b\u00cf\u0002\u0010\u00c6\u0002\u001a1\u0010\u00d0\u0002\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000B2\u0006\u0010\n\u001a\u00028\u0000H\u0086\u0002\u00a2\u0006\u0006\b\u00d0\u0002\u0010\u00d1\u0002\u001a;\u0010\u00d2\u0002\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0010\u0010\u00c8\u0002\u001a\u000b\u0012\u0006\b\u0001\u0012\u00028\u00000\u00c7\u0002H\u0086\u0002\u00a2\u0006\u0006\b\u00d2\u0002\u0010\u00ca\u0002\u001a;\u0010\u00d3\u0002\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000B2\u0010\u0010\u00c8\u0002\u001a\u000b\u0012\u0006\b\u0001\u0012\u00028\u00000\u00c7\u0002H\u0086\u0002\u00a2\u0006\u0006\b\u00d3\u0002\u0010\u00d4\u0002\u001a/\u0010\u00d5\u0002\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\r\u0010\u00c8\u0002\u001a\b\u0012\u0004\u0012\u00028\u00000\tH\u0086\u0002\u001a/\u0010\u00d6\u0002\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000B2\r\u0010\u00c8\u0002\u001a\b\u0012\u0004\u0012\u00028\u00000\tH\u0086\u0002\u001a0\u0010\u00d7\u0002\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u000e\u0010\u00c8\u0002\u001a\t\u0012\u0004\u0012\u00028\u00000\u00b6\u0001H\u0086\u0002\u001a0\u0010\u00d8\u0002\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000B2\u000e\u0010\u00c8\u0002\u001a\t\u0012\u0004\u0012\u00028\u00000\u00b6\u0001H\u0086\u0002\u001a1\u0010\u00d9\u0002\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0006\u0010\n\u001a\u00028\u0000H\u0087\b\u00a2\u0006\u0006\b\u00d9\u0002\u0010\u00c6\u0002\u001a1\u0010\u00da\u0002\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000B2\u0006\u0010\n\u001a\u00028\u0000H\u0087\b\u00a2\u0006\u0006\b\u00da\u0002\u0010\u00d1\u0002\u001aD\u0010\u00dd\u0002\u001a\u000e\u0012\n\u0012\b\u0012\u0004\u0012\u00028\u00000\u00010\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\u0007\u0010\u00c2\u0002\u001a\u00020\u000e2\t\b\u0002\u0010\u00db\u0002\u001a\u00020\u000e2\t\b\u0002\u0010\u00dc\u0002\u001a\u00020\u000bH\u0007\u001a^\u0010\u00de\u0002\u001a\b\u0012\u0004\u0012\u00028\u00010\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00000\t2\u0007\u0010\u00c2\u0002\u001a\u00020\u000e2\t\b\u0002\u0010\u00db\u0002\u001a\u00020\u000e2\t\b\u0002\u0010\u00dc\u0002\u001a\u00020\u000b2\u0018\u0010(\u001a\u0014\u0012\n\u0012\b\u0012\u0004\u0012\u00028\u00000\u0001\u0012\u0004\u0012\u00028\u00010\u0014H\u0007\u001aN\u0010\u00df\u0002\u001a\u0015\u0012\u0011\u0012\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u009b\u00010\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00000\t2\u0010\u0010\u00d2\u0001\u001a\u000b\u0012\u0006\b\u0001\u0012\u00028\u00010\u00c7\u0002H\u0086\u0004\u00a2\u0006\u0006\b\u00df\u0002\u0010\u00ca\u0002\u001a\u0085\u0001\u0010\u00e2\u0002\u001a\b\u0012\u0004\u0012\u00028\u00020\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'\"\u0005\b\u0002\u0010\u009a\u0001*\b\u0012\u0004\u0012\u00028\u00000\t2\u0010\u0010\u00d2\u0001\u001a\u000b\u0012\u0006\b\u0001\u0012\u00028\u00010\u00c7\u000228\u0010(\u001a4\u0012\u0014\u0012\u00128\u0000\u00a2\u0006\r\bX\u0012\t\bY\u0012\u0005\b\b(\u00e0\u0002\u0012\u0014\u0012\u00128\u0001\u00a2\u0006\r\bX\u0012\t\bY\u0012\u0005\b\b(\u00e1\u0002\u0012\u0004\u0012\u00028\u00020WH\u0086\b\u00f8\u0001\u0000\u00a2\u0006\u0006\b\u00e2\u0002\u0010\u00e3\u0002\u001aB\u0010\u00e4\u0002\u001a\u0015\u0012\u0011\u0012\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u009b\u00010\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00000\t2\r\u0010\u00d2\u0001\u001a\b\u0012\u0004\u0012\u00028\u00010\tH\u0086\u0004\u001ay\u0010\u00e5\u0002\u001a\b\u0012\u0004\u0012\u00028\u00020\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'\"\u0005\b\u0002\u0010\u009a\u0001*\b\u0012\u0004\u0012\u00028\u00000\t2\r\u0010\u00d2\u0001\u001a\b\u0012\u0004\u0012\u00028\u00010\t28\u0010(\u001a4\u0012\u0014\u0012\u00128\u0000\u00a2\u0006\r\bX\u0012\t\bY\u0012\u0005\b\b(\u00e0\u0002\u0012\u0014\u0012\u00128\u0001\u00a2\u0006\r\bX\u0012\t\bY\u0012\u0005\b\b(\u00e1\u0002\u0012\u0004\u0012\u00028\u00020WH\u0086\b\u00f8\u0001\u0000\u001a,\u0010\u00e6\u0002\u001a\u0015\u0012\u0011\u0012\u000f\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00000\u009b\u00010\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\tH\u0007\u001ac\u0010\u00e7\u0002\u001a\b\u0012\u0004\u0012\u00028\u00010\u0001\"\u0004\b\u0000\u0010\u0000\"\u0004\b\u0001\u0010'*\b\u0012\u0004\u0012\u00028\u00000\t28\u0010(\u001a4\u0012\u0014\u0012\u00128\u0000\u00a2\u0006\r\bX\u0012\t\bY\u0012\u0005\b\b(\u00e0\u0002\u0012\u0014\u0012\u00128\u0000\u00a2\u0006\r\bX\u0012\t\bY\u0012\u0005\b\b(\u00e1\u0002\u0012\u0004\u0012\u00028\u00010WH\u0087\b\u00f8\u0001\u0000\u001a\u008e\u0001\u0010\u00f2\u0002\u001a\u00028\u0001\"\u0004\b\u0000\u0010\u0000\"\u000f\b\u0001\u0010\u00ea\u0002*\b0\u00e8\u0002j\u0003`\u00e9\u0002*\b\u0012\u0004\u0012\u00028\u00000\t2\u0007\u0010\u00eb\u0002\u001a\u00028\u00012\n\b\u0002\u0010\u00ed\u0002\u001a\u00030\u00ec\u00022\n\b\u0002\u0010\u00ee\u0002\u001a\u00030\u00ec\u00022\n\b\u0002\u0010\u00ef\u0002\u001a\u00030\u00ec\u00022\t\b\u0002\u0010\u00f0\u0002\u001a\u00020\u000e2\n\b\u0002\u0010\u00f1\u0002\u001a\u00030\u00ec\u00022\u0017\b\u0002\u0010(\u001a\u0011\u0012\u0004\u0012\u00028\u0000\u0012\u0005\u0012\u00030\u00ec\u0002\u0018\u00010\u0014\u00a2\u0006\u0006\b\u00f2\u0002\u0010\u00f3\u0002\u001al\u0010\u00f5\u0002\u001a\u00030\u00f4\u0002\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t2\n\b\u0002\u0010\u00ed\u0002\u001a\u00030\u00ec\u00022\n\b\u0002\u0010\u00ee\u0002\u001a\u00030\u00ec\u00022\n\b\u0002\u0010\u00ef\u0002\u001a\u00030\u00ec\u00022\t\b\u0002\u0010\u00f0\u0002\u001a\u00020\u000e2\n\b\u0002\u0010\u00f1\u0002\u001a\u00030\u00ec\u00022\u0017\b\u0002\u0010(\u001a\u0011\u0012\u0004\u0012\u00028\u0000\u0012\u0005\u0012\u00030\u00ec\u0002\u0018\u00010\u0014\u001a \u0010\u00f6\u0002\u001a\b\u0012\u0004\u0012\u00028\u00000\t\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\tH\u0087\b\u001a\u001e\u0010\u00f7\u0002\u001a\t\u0012\u0004\u0012\u00028\u00000\u00b6\u0001\"\u0004\b\u0000\u0010\u0000*\b\u0012\u0004\u0012\u00028\u00000\t\u001a\u001e\u0010\u00f8\u0002\u001a\u00030\u008b\u0001*\t\u0012\u0005\u0012\u00030\u0085\u00010\tH\u0007\u00a2\u0006\u0006\b\u00f8\u0002\u0010\u00f9\u0002\u001a\u001e\u0010\u00fa\u0002\u001a\u00030\u008b\u0001*\t\u0012\u0005\u0012\u00030\u0096\u00010\tH\u0007\u00a2\u0006\u0006\b\u00fa\u0002\u0010\u00f9\u0002\u001a\u001d\u0010\u00fb\u0002\u001a\u00030\u008b\u0001*\b\u0012\u0004\u0012\u00020\u000e0\tH\u0007\u00a2\u0006\u0006\b\u00fb\u0002\u0010\u00f9\u0002\u001a\u001e\u0010\u00fc\u0002\u001a\u00030\u008b\u0001*\t\u0012\u0005\u0012\u00030\u0093\u00010\tH\u0007\u00a2\u0006\u0006\b\u00fc\u0002\u0010\u00f9\u0002\u001a\u001e\u0010\u00fd\u0002\u001a\u00030\u008b\u0001*\t\u0012\u0005\u0012\u00030\u008e\u00010\tH\u0007\u00a2\u0006\u0006\b\u00fd\u0002\u0010\u00f9\u0002\u001a\u001e\u0010\u00fe\u0002\u001a\u00030\u008b\u0001*\t\u0012\u0005\u0012\u00030\u008b\u00010\tH\u0007\u00a2\u0006\u0006\b\u00fe\u0002\u0010\u00f9\u0002\u001a\u001d\u0010\u00ff\u0002\u001a\u00020\u000e*\t\u0012\u0005\u0012\u00030\u0085\u00010\tH\u0007\u00a2\u0006\u0006\b\u00ff\u0002\u0010\u0080\u0003\u001a\u001d\u0010\u0081\u0003\u001a\u00020\u000e*\t\u0012\u0005\u0012\u00030\u0096\u00010\tH\u0007\u00a2\u0006\u0006\b\u0081\u0003\u0010\u0080\u0003\u001a\u001c\u0010\u0082\u0003\u001a\u00020\u000e*\b\u0012\u0004\u0012\u00020\u000e0\tH\u0007\u00a2\u0006\u0006\b\u0082\u0003\u0010\u0080\u0003\u001a\u001e\u0010\u0083\u0003\u001a\u00030\u0093\u0001*\t\u0012\u0005\u0012\u00030\u0093\u00010\tH\u0007\u00a2\u0006\u0006\b\u0083\u0003\u0010\u0084\u0003\u001a\u001e\u0010\u0085\u0003\u001a\u00030\u008e\u0001*\t\u0012\u0005\u0012\u00030\u008e\u00010\tH\u0007\u00a2\u0006\u0006\b\u0085\u0003\u0010\u0086\u0003\u001a\u001e\u0010\u0087\u0003\u001a\u00030\u008b\u0001*\t\u0012\u0005\u0012\u00030\u008b\u00010\tH\u0007\u00a2\u0006\u0006\b\u0087\u0003\u0010\u00f9\u0002\u0082\u0002\u000b\n\u0005\b\u009920\u0001\n\u0002\b\u0019\u00a8\u0006\u0088\u0003"}, d2 = {"T", "", "C1", "(Ljava/util/List;)Ljava/lang/Object;", "D1", "E1", "F1", "G1", "Lkotlin/internal/OnlyInputTypes;", "", "element", "", "H1", "(Ljava/lang/Iterable;Ljava/lang/Object;)Z", "", "index", "R1", "(Ljava/lang/Iterable;I)Ljava/lang/Object;", "S1", "(Ljava/util/List;I)Ljava/lang/Object;", "Lkotlin/Function1;", "defaultValue", "T1", "(Ljava/lang/Iterable;ILd2/l;)Ljava/lang/Object;", "U1", "(Ljava/util/List;ILd2/l;)Ljava/lang/Object;", "V1", "W1", "predicate", "h2", "(Ljava/lang/Iterable;Ld2/l;)Ljava/lang/Object;", "i2", "j2", "(Ljava/util/List;Ld2/l;)Ljava/lang/Object;", "k2", "(Ljava/lang/Iterable;)Ljava/lang/Object;", "m2", "l2", "", "R", "transform", "n2", "o2", "p2", "r2", "q2", "G2", "H2", "N2", "(Ljava/lang/Iterable;Ljava/lang/Object;)I", "O2", "(Ljava/util/List;Ljava/lang/Object;)I", "P2", "Q2", "R2", "S2", "Y2", "a3", "Z2", "b3", "c3", "d3", "e3", "g3", "f3", "h3", "", "u4", "(Ljava/util/Collection;)Ljava/lang/Object;", "Lkotlin/random/Random;", "random", "v4", "(Ljava/util/Collection;Lkotlin/random/Random;)Ljava/lang/Object;", "w4", "x4", "Q4", "S4", "R4", "T4", "V4", "U4", "n", "N1", "O1", "P1", "Q1", "X1", "Lkotlin/Function2;", "Lkotlin/ParameterName;", "name", "Y1", "", "C", "destination", "Z1", "(Ljava/lang/Iterable;Ljava/util/Collection;Ld2/p;)Ljava/util/Collection;", "Lkotlin/internal/NoInfer;", "a2", "b2", "(Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;", "c2", "d2", "e2", "f2", "(Ljava/lang/Iterable;Ljava/util/Collection;Ld2/l;)Ljava/util/Collection;", "g2", "Lkotlin/ranges/k;", "indices", "X4", "W4", "u5", "v5", "w5", "x5", "I4", "", "Lkotlin/f1;", "P4", "", "selector", "Y4", "Z4", "a5", "b5", "c5", "d5", "e5", "Ljava/util/Comparator;", "Lkotlin/Comparator;", "comparator", "f5", "", "y5", "", "", "z5", "", "", "A5", "", "", "C5", "", "", "D5", "", "F5", "", "", "H5", "", "", "M5", "K", "V", "Lkotlin/Pair;", "", "m1", "keySelector", "n1", "valueTransform", "o1", "", "M", "p1", "(Ljava/lang/Iterable;Ljava/util/Map;Ld2/l;)Ljava/util/Map;", "q1", "(Ljava/lang/Iterable;Ljava/util/Map;Ld2/l;Ld2/l;)Ljava/util/Map;", "r1", "valueSelector", "s1", "t1", "B5", "Ljava/util/HashSet;", "Lkotlin/collections/HashSet;", "E5", "G5", "I5", "J5", "", "L5", "s2", "Lkotlin/sequences/m;", "x2", "(Ljava/lang/Iterable;Ld2/l;)Ljava/util/List;", "t2", "(Ljava/lang/Iterable;Ld2/p;)Ljava/util/List;", "v2", "u2", "w2", "z2", "y2", "I2", "J2", "K2", "L2", "Lkotlin/collections/k0;", "M2", "i3", "j3", "k3", "l3", "m3", "n3", "o3", "p3", "Lkotlin/collections/o0;", "S5", "L1", "M1", "other", "T2", "g5", "", "K5", "N5", "h1", "i1", "j1", "I1", "K1", "J1", "initial", "acc", "operation", "A2", "(Ljava/lang/Iterable;Ljava/lang/Object;Ld2/p;)Ljava/lang/Object;", "Lkotlin/Function3;", "B2", "(Ljava/lang/Iterable;Ljava/lang/Object;Ld2/q;)Ljava/lang/Object;", "C2", "(Ljava/util/List;Ljava/lang/Object;Ld2/p;)Ljava/lang/Object;", "D2", "(Ljava/util/List;Ljava/lang/Object;Ld2/q;)Ljava/lang/Object;", "action", "E2", "F2", "r3", "(Ljava/lang/Iterable;)Ljava/lang/Double;", "s3", "(Ljava/lang/Iterable;)Ljava/lang/Float;", "q3", "(Ljava/lang/Iterable;)Ljava/lang/Comparable;", "t3", "u3", EventMonitor.V3_STAGING_ADLOG, "w3", "x3", "(Ljava/lang/Iterable;Ld2/l;)Ljava/lang/Comparable;", "z3", "(Ljava/lang/Iterable;Ld2/l;)Ljava/lang/Double;", "A3", "(Ljava/lang/Iterable;Ld2/l;)Ljava/lang/Float;", "y3", "B3", "(Ljava/lang/Iterable;Ljava/util/Comparator;Ld2/l;)Ljava/lang/Object;", "C3", "E3", "F3", "D3", "G3", "(Ljava/lang/Iterable;Ljava/util/Comparator;)Ljava/lang/Object;", "H3", "J3", "K3", "I3", "L3", "M3", "N3", "O3", "P3", "R3", "S3", "Q3", "T3", "U3", "W3", "X3", "V3", "Y3", "Z3", "f4", "g4", "h4", "(Ljava/lang/Iterable;Ld2/l;)Ljava/lang/Iterable;", "i4", "(Ljava/lang/Iterable;Ld2/p;)Ljava/lang/Iterable;", "S", "y4", "(Ljava/lang/Iterable;Ld2/p;)Ljava/lang/Object;", "z4", "(Ljava/lang/Iterable;Ld2/q;)Ljava/lang/Object;", "A4", "B4", "C4", "(Ljava/util/List;Ld2/p;)Ljava/lang/Object;", "D4", "(Ljava/util/List;Ld2/q;)Ljava/lang/Object;", "E4", "F4", "J4", "(Ljava/lang/Iterable;Ljava/lang/Object;Ld2/p;)Ljava/util/List;", "K4", "(Ljava/lang/Iterable;Ljava/lang/Object;Ld2/q;)Ljava/util/List;", "L4", "M4", "N4", "O4", "h5", "i5", "l5", "(Ljava/lang/Iterable;Ld2/l;)D", "o5", "(Ljava/lang/Iterable;Ld2/l;)I", "q5", "(Ljava/lang/Iterable;Ld2/l;)J", "Lkotlin/r0;", "s5", "Lkotlin/v0;", "t5", "G4", "H4", "size", "A1", "B1", "b4", "(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/util/List;", "", "elements", "d4", "(Ljava/lang/Iterable;[Ljava/lang/Object;)Ljava/util/List;", "a4", "c4", "e4", "j4", "l4", "p4", "(Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/List;", "n4", "r4", "(Ljava/util/Collection;[Ljava/lang/Object;)Ljava/util/List;", "k4", "o4", "m4", "q4", "s4", "t4", "step", "partialWindows", "O5", "P5", "V5", "a", "b", "W5", "(Ljava/lang/Iterable;[Ljava/lang/Object;Ld2/p;)Ljava/util/List;", "T5", "U5", "X5", "Y5", "Ljava/lang/Appendable;", "Lkotlin/text/Appendable;", "A", "buffer", "", "separator", "prefix", "postfix", "limit", "truncated", "U2", "(Ljava/lang/Iterable;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Ld2/l;)Ljava/lang/Appendable;", "", "W2", "k1", "l1", "u1", "(Ljava/lang/Iterable;)D", "z1", "x1", "y1", "w1", EventMonitor.V1_STAGING_ADLOG, "j5", "(Ljava/lang/Iterable;)I", "r5", "n5", "p5", "(Ljava/lang/Iterable;)J", "m5", "(Ljava/lang/Iterable;)F", "k5", "kotlin-stdlib"}, k = 5, mv = {1, 6, 0}, xs = "kotlin/collections/CollectionsKt")
/* loaded from: E:\TSN-r\205dec\7502512.dex */
public class f0 extends e0 {

    /* compiled from: Sequences.kt */
    @Metadata(bv = {}, d1 = {"\u0000\u0011\n\u0000\n\u0002\u0018\u0002\n\u0002\u0010(\n\u0002\b\u0002*\u0001\u0000\b\n\u0018\u00002\b\u0012\u0004\u0012\u00028\u00000\u0001J\u000f\u0010\u0003\u001a\b\u0012\u0004\u0012\u00028\u00000\u0002H\u0096\u0002\u00a8\u0006\u0004\u00b8\u0006\u0000"}, d2 = {"kotlin/sequences/s$a", "Lkotlin/sequences/m;", "", "iterator", "kotlin-stdlib"}, k = 1, mv = {1, 6, 0})
    /* loaded from: E:\TSN-r\205dec\7343912.dex */
    public static final class a<T> implements kotlin.sequences.m<T> {

        /* renamed from: a */
        final /* synthetic */ Iterable f55316a;

        public a(Iterable iterable) {
            this.f55316a = iterable;
        }

        @Override // kotlin.sequences.m
        @NotNull
        public Iterator<T> iterator() {
            return this.f55316a.iterator();
        }
    }

    /* compiled from: _Collections.kt */
    @Metadata(bv = {}, d1 = {"\u0000\n\n\u0000\n\u0002\u0010\b\n\u0002\b\u0003\u0010\u0003\u001a\u00028\u0000\"\u0004\b\u0000\u0010\u00002\u0006\u0010\u0002\u001a\u00020\u0001H\n\u00a2\u0006\u0004\b\u0003\u0010\u0004"}, d2 = {"T", "", "it", "a", "(I)Ljava/lang/Object;"}, k = 3, mv = {1, 6, 0})
    /* loaded from: E:\TSN-r\205dec\7343912.dex */
    public static final class b<T> extends Lambda implements d2.l<Integer, T> {

        /* renamed from: a */
        final /* synthetic */ int f55317a;

        /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
        b(int i4) {
            super(1);
            this.f55317a = i4;
        }

        public final T a(int i4) {
            throw new IndexOutOfBoundsException("Collection doesn't contain element at index " + this.f55317a + '.');
        }

        @Override // d2.l
        public /* bridge */ /* synthetic */ Object invoke(Integer num) {
            return a(num.intValue());
        }
    }

    /* compiled from: _Collections.kt */
    @Metadata(bv = {}, d1 = {"\u0000\u0011\n\u0000\n\u0002\u0018\u0002\n\u0002\u0010(\n\u0002\b\u0005*\u0001\u0000\b\n\u0018\u00002\u000e\u0012\u0004\u0012\u00028\u0000\u0012\u0004\u0012\u00028\u00010\u0001J\u000e\u0010\u0003\u001a\b\u0012\u0004\u0012\u00028\u00000\u0002H\u0016J\u0017\u0010\u0005\u001a\u00028\u00012\u0006\u0010\u0004\u001a\u00028\u0000H\u0016\u00a2\u0006\u0004\b\u0005\u0010\u0006\u00a8\u0006\u0007"}, d2 = {"kotlin/collections/f0$c", "Lkotlin/collections/k0;", "", "b", "element", "a", "(Ljava/lang/Object;)Ljava/lang/Object;", "kotlin-stdlib"}, k = 1, mv = {1, 6, 0})
    /* loaded from: E:\TSN-r\205dec\7343912.dex */
    public static final class c<K, T> implements k0<T, K> {

        /* renamed from: a */
        final /* synthetic */ Iterable<T> f55318a;

        /* renamed from: b */
        final /* synthetic */ d2.l<T, K> f55319b;

        /* JADX WARN: Multi-variable type inference failed */
        public c(Iterable<? extends T> iterable, d2.l<? super T, ? extends K> lVar) {
            this.f55318a = iterable;
            this.f55319b = lVar;
        }

        @Override // kotlin.collections.k0
        public K a(T t3) {
            return this.f55319b.invoke(t3);
        }

        @Override // kotlin.collections.k0
        @NotNull
        public Iterator<T> b() {
            return this.f55318a.iterator();
        }
    }

    /* compiled from: _Collections.kt */
    @Metadata(bv = {}, d1 = {"\u0000\n\n\u0000\n\u0002\u0010(\n\u0002\b\u0002\u0010\u0002\u001a\b\u0012\u0004\u0012\u00028\u00000\u0001\"\u0004\b\u0000\u0010\u0000H\n\u00a2\u0006\u0004\b\u0002\u0010\u0003"}, d2 = {"T", "", "a", "()Ljava/util/Iterator;"}, k = 3, mv = {1, 6, 0})
    /* loaded from: E:\TSN-r\205dec\7343912.dex */
    public static final class d<T> extends Lambda implements d2.a<Iterator<? extends T>> {

        /* renamed from: a */
        final /* synthetic */ Iterable<T> f55320a;

        /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
        /* JADX WARN: Multi-variable type inference failed */
        d(Iterable<? extends T> iterable) {
            super(0);
            this.f55320a = iterable;
        }

        @Override // d2.a
        @NotNull
        /* renamed from: a */
        public final Iterator<T> invoke() {
            return this.f55320a.iterator();
        }
    }

    @SinceKotlin(version = "1.2")
    @NotNull
    public static final <T> List<List<T>> A1(@NotNull Iterable<? extends T> iterable, int i4) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        return O5(iterable, i4, i4, true);
    }

    public static final <T, R> R A2(@NotNull Iterable<? extends T> iterable, R r3, @NotNull d2.p<? super R, ? super T, ? extends R> operation) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(operation, "operation");
        for (Object obj : iterable) {
            r3 = operation.invoke(r3, obj);
        }
        return r3;
    }

    @SinceKotlin(version = "1.4")
    @OverloadResolutionByLambdaReturnType
    @InlineOnly
    private static final <T> Float A3(Iterable<? extends T> iterable, d2.l<? super T, Float> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            float floatValue = selector.invoke((T) it.next()).floatValue();
            while (it.hasNext()) {
                floatValue = Math.max(floatValue, selector.invoke((T) it.next()).floatValue());
            }
            return Float.valueOf(floatValue);
        }
        return null;
    }

    @SinceKotlin(version = "1.4")
    @Nullable
    public static final <S, T extends S> S A4(@NotNull Iterable<? extends T> iterable, @NotNull d2.q<? super Integer, ? super S, ? super T, ? extends S> operation) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(operation, "operation");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            Object obj = (T) it.next();
            int i4 = 1;
            while (it.hasNext()) {
                int i5 = i4 + 1;
                if (i4 < 0) {
                    CollectionsKt__CollectionsKt.X();
                }
                obj = (S) operation.invoke(Integer.valueOf(i4), obj, (T) it.next());
                i4 = i5;
            }
            return (S) obj;
        }
        return null;
    }

    @NotNull
    public static final char[] A5(@NotNull Collection<Character> collection) {
        kotlin.jvm.internal.f0.p(collection, "<this>");
        char[] cArr = new char[collection.size()];
        int i4 = 0;
        for (Character ch : collection) {
            cArr[i4] = ch.charValue();
            i4++;
        }
        return cArr;
    }

    @SinceKotlin(version = "1.2")
    @NotNull
    public static final <T, R> List<R> B1(@NotNull Iterable<? extends T> iterable, int i4, @NotNull d2.l<? super List<? extends T>, ? extends R> transform) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(transform, "transform");
        return P5(iterable, i4, i4, true, transform);
    }

    public static final <T, R> R B2(@NotNull Iterable<? extends T> iterable, R r3, @NotNull d2.q<? super Integer, ? super R, ? super T, ? extends R> operation) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(operation, "operation");
        int i4 = 0;
        for (Object obj : iterable) {
            int i5 = i4 + 1;
            if (i4 < 0) {
                CollectionsKt__CollectionsKt.X();
            }
            r3 = operation.invoke(Integer.valueOf(i4), r3, obj);
            i4 = i5;
        }
        return r3;
    }

    /* JADX WARN: Multi-variable type inference failed */
    @SinceKotlin(version = "1.4")
    @OverloadResolutionByLambdaReturnType
    @InlineOnly
    private static final <T, R> R B3(Iterable<? extends T> iterable, Comparator<? super R> comparator, d2.l<? super T, ? extends R> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(comparator, "comparator");
        kotlin.jvm.internal.f0.p(selector, "selector");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            Object obj = (R) selector.invoke((T) it.next());
            while (it.hasNext()) {
                R invoke = selector.invoke((T) it.next());
                if (comparator.compare(obj, invoke) < 0) {
                    obj = invoke;
                }
            }
            return (R) obj;
        }
        throw new NoSuchElementException();
    }

    @SinceKotlin(version = "1.4")
    @WasExperimental(markerClass = {ExperimentalStdlibApi.class})
    @Nullable
    public static final <S, T extends S> S B4(@NotNull Iterable<? extends T> iterable, @NotNull d2.p<? super S, ? super T, ? extends S> operation) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(operation, "operation");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            Object obj = (T) it.next();
            while (it.hasNext()) {
                obj = (S) operation.invoke(obj, (T) it.next());
            }
            return (S) obj;
        }
        return null;
    }

    @NotNull
    public static final <T, C extends Collection<? super T>> C B5(@NotNull Iterable<? extends T> iterable, @NotNull C destination) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(destination, "destination");
        for (T t3 : iterable) {
            destination.add(t3);
        }
        return destination;
    }

    @InlineOnly
    private static final <T> T C1(List<? extends T> list) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        return list.get(0);
    }

    public static final <T, R> R C2(@NotNull List<? extends T> list, R r3, @NotNull d2.p<? super T, ? super R, ? extends R> operation) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        kotlin.jvm.internal.f0.p(operation, "operation");
        if (!list.isEmpty()) {
            ListIterator<? extends T> listIterator = list.listIterator(list.size());
            while (listIterator.hasPrevious()) {
                r3 = operation.invoke((T) listIterator.previous(), r3);
            }
        }
        return r3;
    }

    /* JADX WARN: Multi-variable type inference failed */
    @SinceKotlin(version = "1.4")
    @OverloadResolutionByLambdaReturnType
    @InlineOnly
    private static final <T, R> R C3(Iterable<? extends T> iterable, Comparator<? super R> comparator, d2.l<? super T, ? extends R> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(comparator, "comparator");
        kotlin.jvm.internal.f0.p(selector, "selector");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            Object obj = (R) selector.invoke((T) it.next());
            while (it.hasNext()) {
                R invoke = selector.invoke((T) it.next());
                if (comparator.compare(obj, invoke) < 0) {
                    obj = invoke;
                }
            }
            return (R) obj;
        }
        return null;
    }

    public static final <S, T extends S> S C4(@NotNull List<? extends T> list, @NotNull d2.p<? super T, ? super S, ? extends S> operation) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        kotlin.jvm.internal.f0.p(operation, "operation");
        ListIterator<? extends T> listIterator = list.listIterator(list.size());
        if (listIterator.hasPrevious()) {
            Object obj = (T) listIterator.previous();
            while (listIterator.hasPrevious()) {
                obj = (S) operation.invoke((T) listIterator.previous(), obj);
            }
            return (S) obj;
        }
        throw new UnsupportedOperationException("Empty list can't be reduced.");
    }

    @NotNull
    public static double[] C5(@NotNull Collection<Double> collection) {
        kotlin.jvm.internal.f0.p(collection, "<this>");
        double[] dArr = new double[collection.size()];
        int i4 = 0;
        for (Double d4 : collection) {
            dArr[i4] = d4.doubleValue();
            i4++;
        }
        return dArr;
    }

    @InlineOnly
    private static final <T> T D1(List<? extends T> list) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        return list.get(1);
    }

    public static final <T, R> R D2(@NotNull List<? extends T> list, R r3, @NotNull d2.q<? super Integer, ? super T, ? super R, ? extends R> operation) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        kotlin.jvm.internal.f0.p(operation, "operation");
        if (!list.isEmpty()) {
            ListIterator<? extends T> listIterator = list.listIterator(list.size());
            while (listIterator.hasPrevious()) {
                r3 = operation.invoke(Integer.valueOf(listIterator.previousIndex()), (T) listIterator.previous(), r3);
            }
        }
        return r3;
    }

    @SinceKotlin(version = "1.4")
    @Nullable
    public static <T extends Comparable<? super T>> T D3(@NotNull Iterable<? extends T> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            T next = it.next();
            while (it.hasNext()) {
                T next2 = it.next();
                if (next.compareTo(next2) < 0) {
                    next = next2;
                }
            }
            return next;
        }
        return null;
    }

    public static final <S, T extends S> S D4(@NotNull List<? extends T> list, @NotNull d2.q<? super Integer, ? super T, ? super S, ? extends S> operation) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        kotlin.jvm.internal.f0.p(operation, "operation");
        ListIterator<? extends T> listIterator = list.listIterator(list.size());
        if (listIterator.hasPrevious()) {
            Object obj = (T) listIterator.previous();
            while (listIterator.hasPrevious()) {
                obj = (S) operation.invoke(Integer.valueOf(listIterator.previousIndex()), (T) listIterator.previous(), obj);
            }
            return (S) obj;
        }
        throw new UnsupportedOperationException("Empty list can't be reduced.");
    }

    @NotNull
    public static final float[] D5(@NotNull Collection<Float> collection) {
        kotlin.jvm.internal.f0.p(collection, "<this>");
        float[] fArr = new float[collection.size()];
        int i4 = 0;
        for (Float f4 : collection) {
            fArr[i4] = f4.floatValue();
            i4++;
        }
        return fArr;
    }

    @InlineOnly
    private static final <T> T E1(List<? extends T> list) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        return list.get(2);
    }

    @HidesMembers
    public static final <T> void E2(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, kotlin.f1> action) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(action, "action");
        for (Object obj : iterable) {
            action.invoke(obj);
        }
    }

    @SinceKotlin(version = "1.4")
    @Nullable
    public static Double E3(@NotNull Iterable<Double> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        Iterator<Double> it = iterable.iterator();
        if (it.hasNext()) {
            double doubleValue = it.next().doubleValue();
            while (it.hasNext()) {
                doubleValue = Math.max(doubleValue, it.next().doubleValue());
            }
            return Double.valueOf(doubleValue);
        }
        return null;
    }

    @SinceKotlin(version = "1.4")
    @Nullable
    public static final <S, T extends S> S E4(@NotNull List<? extends T> list, @NotNull d2.q<? super Integer, ? super T, ? super S, ? extends S> operation) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        kotlin.jvm.internal.f0.p(operation, "operation");
        ListIterator<? extends T> listIterator = list.listIterator(list.size());
        if (listIterator.hasPrevious()) {
            Object obj = (T) listIterator.previous();
            while (listIterator.hasPrevious()) {
                obj = (S) operation.invoke(Integer.valueOf(listIterator.previousIndex()), (T) listIterator.previous(), obj);
            }
            return (S) obj;
        }
        return null;
    }

    @NotNull
    public static final <T> HashSet<T> E5(@NotNull Iterable<? extends T> iterable) {
        int Z;
        int j4;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        Z = y.Z(iterable, 12);
        j4 = y0.j(Z);
        return (HashSet) B5(iterable, new HashSet(j4));
    }

    @InlineOnly
    private static final <T> T F1(List<? extends T> list) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        return list.get(3);
    }

    public static final <T> void F2(@NotNull Iterable<? extends T> iterable, @NotNull d2.p<? super Integer, ? super T, kotlin.f1> action) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(action, "action");
        int i4 = 0;
        for (Object obj : iterable) {
            int i5 = i4 + 1;
            if (i4 < 0) {
                CollectionsKt__CollectionsKt.X();
            }
            action.invoke(Integer.valueOf(i4), obj);
            i4 = i5;
        }
    }

    @SinceKotlin(version = "1.4")
    @Nullable
    public static final Float F3(@NotNull Iterable<Float> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        Iterator<Float> it = iterable.iterator();
        if (it.hasNext()) {
            float floatValue = it.next().floatValue();
            while (it.hasNext()) {
                floatValue = Math.max(floatValue, it.next().floatValue());
            }
            return Float.valueOf(floatValue);
        }
        return null;
    }

    @SinceKotlin(version = "1.4")
    @WasExperimental(markerClass = {ExperimentalStdlibApi.class})
    @Nullable
    public static final <S, T extends S> S F4(@NotNull List<? extends T> list, @NotNull d2.p<? super T, ? super S, ? extends S> operation) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        kotlin.jvm.internal.f0.p(operation, "operation");
        ListIterator<? extends T> listIterator = list.listIterator(list.size());
        if (listIterator.hasPrevious()) {
            Object obj = (T) listIterator.previous();
            while (listIterator.hasPrevious()) {
                obj = (S) operation.invoke((T) listIterator.previous(), obj);
            }
            return (S) obj;
        }
        return null;
    }

    @NotNull
    public static int[] F5(@NotNull Collection<Integer> collection) {
        kotlin.jvm.internal.f0.p(collection, "<this>");
        int[] iArr = new int[collection.size()];
        int i4 = 0;
        for (Integer num : collection) {
            iArr[i4] = num.intValue();
            i4++;
        }
        return iArr;
    }

    @InlineOnly
    private static final <T> T G1(List<? extends T> list) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        return list.get(4);
    }

    @InlineOnly
    private static final <T> T G2(List<? extends T> list, int i4, d2.l<? super Integer, ? extends T> defaultValue) {
        int H;
        kotlin.jvm.internal.f0.p(list, "<this>");
        kotlin.jvm.internal.f0.p(defaultValue, "defaultValue");
        if (i4 >= 0) {
            H = CollectionsKt__CollectionsKt.H(list);
            if (i4 <= H) {
                return list.get(i4);
            }
        }
        return defaultValue.invoke(Integer.valueOf(i4));
    }

    @Deprecated(message = "Use maxWithOrNull instead.", replaceWith = @ReplaceWith(expression = "this.maxWithOrNull(comparator)", imports = {}))
    @DeprecatedSinceKotlin(errorSince = "1.5", hiddenSince = "1.6", warningSince = "1.4")
    public static final /* synthetic */ Object G3(Iterable iterable, Comparator comparator) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(comparator, "comparator");
        return H3(iterable, comparator);
    }

    /* JADX WARN: Multi-variable type inference failed */
    @NotNull
    public static final <T> Iterable<T> G4(@NotNull Iterable<? extends T> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        for (Object obj : iterable) {
            if (obj == null) {
                throw new IllegalArgumentException("null element found in " + iterable + '.');
            }
        }
        return iterable;
    }

    @NotNull
    public static <T> List<T> G5(@NotNull Iterable<? extends T> iterable) {
        List<T> R;
        List<T> F;
        List<T> l4;
        List<T> J5;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        if (iterable instanceof Collection) {
            Collection collection = (Collection) iterable;
            int size = collection.size();
            if (size == 0) {
                F = CollectionsKt__CollectionsKt.F();
                return F;
            } else if (size != 1) {
                J5 = J5(collection);
                return J5;
            } else {
                l4 = x.l(iterable instanceof List ? ((List) iterable).get(0) : iterable.iterator().next());
                return l4;
            }
        }
        R = CollectionsKt__CollectionsKt.R(I5(iterable));
        return R;
    }

    public static <T> boolean H1(@NotNull Iterable<? extends T> iterable, T t3) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        if (iterable instanceof Collection) {
            return ((Collection) iterable).contains(t3);
        }
        return N2(iterable, t3) >= 0;
    }

    @Nullable
    public static <T> T H2(@NotNull List<? extends T> list, int i4) {
        int H;
        kotlin.jvm.internal.f0.p(list, "<this>");
        if (i4 >= 0) {
            H = CollectionsKt__CollectionsKt.H(list);
            if (i4 <= H) {
                return list.get(i4);
            }
        }
        return null;
    }

    @SinceKotlin(version = "1.4")
    @Nullable
    public static final <T> T H3(@NotNull Iterable<? extends T> iterable, @NotNull Comparator<? super T> comparator) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(comparator, "comparator");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            Object obj = (T) it.next();
            while (it.hasNext()) {
                Object obj2 = (T) it.next();
                if (comparator.compare(obj, obj2) < 0) {
                    obj = (T) obj2;
                }
            }
            return (T) obj;
        }
        return null;
    }

    /* JADX WARN: Multi-variable type inference failed */
    @NotNull
    public static final <T> List<T> H4(@NotNull List<? extends T> list) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        for (Object obj : list) {
            if (obj == null) {
                throw new IllegalArgumentException("null element found in " + list + '.');
            }
        }
        return list;
    }

    @NotNull
    public static final long[] H5(@NotNull Collection<Long> collection) {
        kotlin.jvm.internal.f0.p(collection, "<this>");
        long[] jArr = new long[collection.size()];
        int i4 = 0;
        for (Long l4 : collection) {
            jArr[i4] = l4.longValue();
            i4++;
        }
        return jArr;
    }

    public static final <T> int I1(@NotNull Iterable<? extends T> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        if (iterable instanceof Collection) {
            return ((Collection) iterable).size();
        }
        int i4 = 0;
        Iterator<? extends T> it = iterable.iterator();
        while (it.hasNext()) {
            it.next();
            i4++;
            if (i4 < 0) {
                CollectionsKt__CollectionsKt.W();
            }
        }
        return i4;
    }

    @NotNull
    public static final <T, K> Map<K, List<T>> I2(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, ? extends K> keySelector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(keySelector, "keySelector");
        LinkedHashMap linkedHashMap = new LinkedHashMap();
        for (Object obj : iterable) {
            K invoke = keySelector.invoke(obj);
            Object obj2 = linkedHashMap.get(invoke);
            if (obj2 == null) {
                obj2 = new ArrayList();
                linkedHashMap.put(invoke, obj2);
            }
            ((List) obj2).add(obj);
        }
        return linkedHashMap;
    }

    @Deprecated(message = "Use minOrNull instead.", replaceWith = @ReplaceWith(expression = "this.minOrNull()", imports = {}))
    @DeprecatedSinceKotlin(errorSince = "1.5", hiddenSince = "1.6", warningSince = "1.4")
    public static final /* synthetic */ Comparable I3(Iterable iterable) {
        Comparable V3;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        V3 = V3(iterable);
        return V3;
    }

    @NotNull
    public static final <T> List<T> I4(@NotNull Iterable<? extends T> iterable) {
        List<T> G5;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        if ((iterable instanceof Collection) && ((Collection) iterable).size() <= 1) {
            G5 = G5(iterable);
            return G5;
        }
        List<T> I5 = I5(iterable);
        e0.c1(I5);
        return I5;
    }

    @NotNull
    public static final <T> List<T> I5(@NotNull Iterable<? extends T> iterable) {
        List<T> J5;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        if (iterable instanceof Collection) {
            J5 = J5((Collection) iterable);
            return J5;
        }
        return (List) B5(iterable, new ArrayList());
    }

    public static final <T> int J1(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        int i4 = 0;
        if ((iterable instanceof Collection) && ((Collection) iterable).isEmpty()) {
            return 0;
        }
        for (Object obj : iterable) {
            if (predicate.invoke(obj).booleanValue() && (i4 = i4 + 1) < 0) {
                CollectionsKt__CollectionsKt.W();
            }
        }
        return i4;
    }

    @NotNull
    public static final <T, K, V> Map<K, List<V>> J2(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, ? extends K> keySelector, @NotNull d2.l<? super T, ? extends V> valueTransform) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(keySelector, "keySelector");
        kotlin.jvm.internal.f0.p(valueTransform, "valueTransform");
        LinkedHashMap linkedHashMap = new LinkedHashMap();
        for (Object obj : iterable) {
            K invoke = keySelector.invoke(obj);
            List<V> list = linkedHashMap.get(invoke);
            if (list == null) {
                list = new ArrayList<>();
                linkedHashMap.put(invoke, list);
            }
            list.add(valueTransform.invoke(obj));
        }
        return linkedHashMap;
    }

    @Deprecated(message = "Use minOrNull instead.", replaceWith = @ReplaceWith(expression = "this.minOrNull()", imports = {}))
    @SinceKotlin(version = "1.1")
    @DeprecatedSinceKotlin(errorSince = "1.5", hiddenSince = "1.6", warningSince = "1.4")
    public static final /* synthetic */ Double J3(Iterable iterable) {
        Double W3;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        W3 = W3(iterable);
        return W3;
    }

    @SinceKotlin(version = "1.4")
    @NotNull
    public static final <T, R> List<R> J4(@NotNull Iterable<? extends T> iterable, R r3, @NotNull d2.p<? super R, ? super T, ? extends R> operation) {
        int Z;
        List<R> l4;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(operation, "operation");
        Z = y.Z(iterable, 9);
        if (Z == 0) {
            l4 = x.l(r3);
            return l4;
        }
        ArrayList arrayList = new ArrayList(Z + 1);
        arrayList.add(r3);
        for (Object obj : iterable) {
            r3 = operation.invoke(r3, obj);
            arrayList.add(r3);
        }
        return arrayList;
    }

    @NotNull
    public static <T> List<T> J5(@NotNull Collection<? extends T> collection) {
        kotlin.jvm.internal.f0.p(collection, "<this>");
        return new ArrayList(collection);
    }

    @InlineOnly
    private static final <T> int K1(Collection<? extends T> collection) {
        kotlin.jvm.internal.f0.p(collection, "<this>");
        return collection.size();
    }

    @NotNull
    public static final <T, K, M extends Map<? super K, List<T>>> M K2(@NotNull Iterable<? extends T> iterable, @NotNull M destination, @NotNull d2.l<? super T, ? extends K> keySelector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(destination, "destination");
        kotlin.jvm.internal.f0.p(keySelector, "keySelector");
        for (Object obj : iterable) {
            K invoke = keySelector.invoke(obj);
            Object obj2 = destination.get(invoke);
            if (obj2 == null) {
                obj2 = new ArrayList();
                destination.put(invoke, obj2);
            }
            ((List) obj2).add(obj);
        }
        return destination;
    }

    @Deprecated(message = "Use minOrNull instead.", replaceWith = @ReplaceWith(expression = "this.minOrNull()", imports = {}))
    @SinceKotlin(version = "1.1")
    @DeprecatedSinceKotlin(errorSince = "1.5", hiddenSince = "1.6", warningSince = "1.4")
    public static final /* synthetic */ Float K3(Iterable iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        return X3(iterable);
    }

    @SinceKotlin(version = "1.4")
    @NotNull
    public static final <T, R> List<R> K4(@NotNull Iterable<? extends T> iterable, R r3, @NotNull d2.q<? super Integer, ? super R, ? super T, ? extends R> operation) {
        int Z;
        List<R> l4;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(operation, "operation");
        Z = y.Z(iterable, 9);
        if (Z == 0) {
            l4 = x.l(r3);
            return l4;
        }
        ArrayList arrayList = new ArrayList(Z + 1);
        arrayList.add(r3);
        int i4 = 0;
        for (Object obj : iterable) {
            int i5 = i4 + 1;
            r3 = operation.invoke(Integer.valueOf(i4), r3, obj);
            arrayList.add(r3);
            i4 = i5;
        }
        return arrayList;
    }

    @NotNull
    public static <T> Set<T> K5(@NotNull Iterable<? extends T> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        return iterable instanceof Collection ? new LinkedHashSet((Collection) iterable) : (Set) B5(iterable, new LinkedHashSet());
    }

    @NotNull
    public static <T> List<T> L1(@NotNull Iterable<? extends T> iterable) {
        Set K5;
        List<T> G5;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        K5 = K5(iterable);
        G5 = G5(K5);
        return G5;
    }

    /* JADX WARN: Multi-variable type inference failed */
    @NotNull
    public static final <T, K, V, M extends Map<? super K, List<V>>> M L2(@NotNull Iterable<? extends T> iterable, @NotNull M destination, @NotNull d2.l<? super T, ? extends K> keySelector, @NotNull d2.l<? super T, ? extends V> valueTransform) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(destination, "destination");
        kotlin.jvm.internal.f0.p(keySelector, "keySelector");
        kotlin.jvm.internal.f0.p(valueTransform, "valueTransform");
        for (Object obj : iterable) {
            K invoke = keySelector.invoke(obj);
            Object obj2 = destination.get(invoke);
            if (obj2 == null) {
                obj2 = new ArrayList();
                destination.put(invoke, obj2);
            }
            ((List) obj2).add(valueTransform.invoke(obj));
        }
        return destination;
    }

    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Type inference failed for: r0v12 */
    /* JADX WARN: Type inference failed for: r0v13 */
    /* JADX WARN: Type inference failed for: r0v3, types: [java.lang.Object] */
    /* JADX WARN: Type inference failed for: r0v5 */
    /* JADX WARN: Type inference failed for: r0v7 */
    /* JADX WARN: Type inference failed for: r2v0, types: [java.lang.Object] */
    @Deprecated(message = "Use minByOrNull instead.", replaceWith = @ReplaceWith(expression = "this.minByOrNull(selector)", imports = {}))
    @DeprecatedSinceKotlin(errorSince = "1.5", hiddenSince = "1.6", warningSince = "1.4")
    public static final /* synthetic */ <T, R extends Comparable<? super R>> T L3(Iterable<? extends T> iterable, d2.l<? super T, ? extends R> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            T next = it.next();
            if (it.hasNext()) {
                R invoke = selector.invoke(next);
                boolean z3 = next;
                do {
                    T next2 = it.next();
                    R invoke2 = selector.invoke(next2);
                    next = z3;
                    if (invoke.compareTo(invoke2) > 0) {
                        invoke = invoke2;
                        next = next2;
                    }
                    z3 = next;
                } while (it.hasNext());
                return next;
            }
            return next;
        }
        return null;
    }

    @SinceKotlin(version = "1.4")
    @WasExperimental(markerClass = {ExperimentalStdlibApi.class})
    @NotNull
    public static final <S, T extends S> List<S> L4(@NotNull Iterable<? extends T> iterable, @NotNull d2.p<? super S, ? super T, ? extends S> operation) {
        int Z;
        List<S> F;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(operation, "operation");
        Iterator<? extends T> it = iterable.iterator();
        if (!it.hasNext()) {
            F = CollectionsKt__CollectionsKt.F();
            return F;
        }
        Object obj = (T) it.next();
        Z = y.Z(iterable, 10);
        ArrayList arrayList = new ArrayList(Z);
        arrayList.add(obj);
        while (it.hasNext()) {
            obj = (S) operation.invoke(obj, (T) it.next());
            arrayList.add(obj);
        }
        return arrayList;
    }

    @NotNull
    public static <T> Set<T> L5(@NotNull Iterable<? extends T> iterable) {
        Set<T> r3;
        Set<T> k4;
        Set<T> f4;
        int j4;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        if (iterable instanceof Collection) {
            Collection collection = (Collection) iterable;
            int size = collection.size();
            if (size == 0) {
                k4 = j1.k();
                return k4;
            } else if (size != 1) {
                j4 = y0.j(collection.size());
                return (Set) B5(iterable, new LinkedHashSet(j4));
            } else {
                f4 = i1.f(iterable instanceof List ? ((List) iterable).get(0) : iterable.iterator().next());
                return f4;
            }
        }
        r3 = j1.r((Set) B5(iterable, new LinkedHashSet()));
        return r3;
    }

    @NotNull
    public static final <T, K> List<T> M1(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, ? extends K> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        HashSet hashSet = new HashSet();
        ArrayList arrayList = new ArrayList();
        for (Object obj : iterable) {
            if (hashSet.add(selector.invoke(obj))) {
                arrayList.add(obj);
            }
        }
        return arrayList;
    }

    @SinceKotlin(version = "1.1")
    @NotNull
    public static final <T, K> k0<T, K> M2(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, ? extends K> keySelector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(keySelector, "keySelector");
        return new c(iterable, keySelector);
    }

    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Type inference failed for: r0v3, types: [T, java.lang.Object] */
    @SinceKotlin(version = "1.4")
    @Nullable
    public static final <T, R extends Comparable<? super R>> T M3(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, ? extends R> selector) {
        T t3;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            T next = it.next();
            if (it.hasNext()) {
                R invoke = selector.invoke(next);
                T t4 = next;
                do {
                    T next2 = it.next();
                    R invoke2 = selector.invoke(next2);
                    t3 = t4;
                    if (invoke.compareTo(invoke2) > 0) {
                        invoke = invoke2;
                        t3 = next2;
                    }
                    t4 = t3;
                } while (it.hasNext());
                return t3;
            }
            return next;
        }
        return null;
    }

    @SinceKotlin(version = "1.4")
    @NotNull
    public static final <S, T extends S> List<S> M4(@NotNull Iterable<? extends T> iterable, @NotNull d2.q<? super Integer, ? super S, ? super T, ? extends S> operation) {
        int Z;
        List<S> F;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(operation, "operation");
        Iterator<? extends T> it = iterable.iterator();
        if (!it.hasNext()) {
            F = CollectionsKt__CollectionsKt.F();
            return F;
        }
        Object obj = (T) it.next();
        Z = y.Z(iterable, 10);
        ArrayList arrayList = new ArrayList(Z);
        arrayList.add(obj);
        int i4 = 1;
        while (it.hasNext()) {
            obj = (S) operation.invoke(Integer.valueOf(i4), obj, (T) it.next());
            arrayList.add(obj);
            i4++;
        }
        return arrayList;
    }

    @NotNull
    public static final short[] M5(@NotNull Collection<Short> collection) {
        kotlin.jvm.internal.f0.p(collection, "<this>");
        short[] sArr = new short[collection.size()];
        int i4 = 0;
        for (Short sh : collection) {
            sArr[i4] = sh.shortValue();
            i4++;
        }
        return sArr;
    }

    @NotNull
    public static <T> List<T> N1(@NotNull Iterable<? extends T> iterable, int i4) {
        ArrayList arrayList;
        List<T> R;
        Object Y2;
        List<T> l4;
        List<T> F;
        List<T> G5;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        int i5 = 0;
        if (!(i4 >= 0)) {
            throw new IllegalArgumentException(("Requested element count " + i4 + " is less than zero.").toString());
        } else if (i4 == 0) {
            G5 = G5(iterable);
            return G5;
        } else {
            if (iterable instanceof Collection) {
                Collection collection = (Collection) iterable;
                int size = collection.size() - i4;
                if (size <= 0) {
                    F = CollectionsKt__CollectionsKt.F();
                    return F;
                } else if (size == 1) {
                    Y2 = Y2(iterable);
                    l4 = x.l(Y2);
                    return l4;
                } else {
                    arrayList = new ArrayList(size);
                    if (iterable instanceof List) {
                        if (iterable instanceof RandomAccess) {
                            int size2 = collection.size();
                            while (i4 < size2) {
                                arrayList.add(((List) iterable).get(i4));
                                i4++;
                            }
                        } else {
                            ListIterator listIterator = ((List) iterable).listIterator(i4);
                            while (listIterator.hasNext()) {
                                arrayList.add(listIterator.next());
                            }
                        }
                        return arrayList;
                    }
                }
            } else {
                arrayList = new ArrayList();
            }
            for (T t3 : iterable) {
                if (i5 >= i4) {
                    arrayList.add(t3);
                } else {
                    i5++;
                }
            }
            R = CollectionsKt__CollectionsKt.R(arrayList);
            return R;
        }
    }

    public static final <T> int N2(@NotNull Iterable<? extends T> iterable, T t3) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        if (iterable instanceof List) {
            return ((List) iterable).indexOf(t3);
        }
        int i4 = 0;
        for (T t4 : iterable) {
            if (i4 < 0) {
                CollectionsKt__CollectionsKt.X();
            }
            if (kotlin.jvm.internal.f0.g(t3, t4)) {
                return i4;
            }
            i4++;
        }
        return -1;
    }

    @SinceKotlin(version = "1.4")
    @OverloadResolutionByLambdaReturnType
    @InlineOnly
    private static final <T> double N3(Iterable<? extends T> iterable, d2.l<? super T, Double> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            double doubleValue = selector.invoke((T) it.next()).doubleValue();
            while (it.hasNext()) {
                doubleValue = Math.min(doubleValue, selector.invoke((T) it.next()).doubleValue());
            }
            return doubleValue;
        }
        throw new NoSuchElementException();
    }

    @SinceKotlin(version = "1.4")
    @WasExperimental(markerClass = {ExperimentalStdlibApi.class})
    @NotNull
    public static final <T, R> List<R> N4(@NotNull Iterable<? extends T> iterable, R r3, @NotNull d2.p<? super R, ? super T, ? extends R> operation) {
        int Z;
        List<R> l4;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(operation, "operation");
        Z = y.Z(iterable, 9);
        if (Z == 0) {
            l4 = x.l(r3);
            return l4;
        }
        ArrayList arrayList = new ArrayList(Z + 1);
        arrayList.add(r3);
        for (Object obj : iterable) {
            r3 = operation.invoke(r3, obj);
            arrayList.add(r3);
        }
        return arrayList;
    }

    @NotNull
    public static <T> Set<T> N5(@NotNull Iterable<? extends T> iterable, @NotNull Iterable<? extends T> other) {
        Set<T> K5;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(other, "other");
        K5 = K5(iterable);
        c0.o0(K5, other);
        return K5;
    }

    @NotNull
    public static <T> List<T> O1(@NotNull List<? extends T> list, int i4) {
        int n4;
        kotlin.jvm.internal.f0.p(list, "<this>");
        if (i4 >= 0) {
            n4 = kotlin.ranges.q.n(list.size() - i4, 0);
            return u5(list, n4);
        }
        throw new IllegalArgumentException(("Requested element count " + i4 + " is less than zero.").toString());
    }

    public static final <T> int O2(@NotNull List<? extends T> list, T t3) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        return list.indexOf(t3);
    }

    @SinceKotlin(version = "1.4")
    @OverloadResolutionByLambdaReturnType
    @InlineOnly
    private static final <T> float O3(Iterable<? extends T> iterable, d2.l<? super T, Float> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            float floatValue = selector.invoke((T) it.next()).floatValue();
            while (it.hasNext()) {
                floatValue = Math.min(floatValue, selector.invoke((T) it.next()).floatValue());
            }
            return floatValue;
        }
        throw new NoSuchElementException();
    }

    @SinceKotlin(version = "1.4")
    @WasExperimental(markerClass = {ExperimentalStdlibApi.class})
    @NotNull
    public static final <T, R> List<R> O4(@NotNull Iterable<? extends T> iterable, R r3, @NotNull d2.q<? super Integer, ? super R, ? super T, ? extends R> operation) {
        int Z;
        List<R> l4;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(operation, "operation");
        Z = y.Z(iterable, 9);
        if (Z == 0) {
            l4 = x.l(r3);
            return l4;
        }
        ArrayList arrayList = new ArrayList(Z + 1);
        arrayList.add(r3);
        int i4 = 0;
        for (Object obj : iterable) {
            int i5 = i4 + 1;
            r3 = operation.invoke(Integer.valueOf(i4), r3, obj);
            arrayList.add(r3);
            i4 = i5;
        }
        return arrayList;
    }

    /* JADX WARN: Code restructure failed: missing block: B:50:0x0031, code lost:
        r5 = kotlin.ranges.q.u(r10, r0 - r2);
     */
    @kotlin.SinceKotlin(version = "1.2")
    @org.jetbrains.annotations.NotNull
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct code enable 'Show inconsistent code' option in preferences
    */
    public static final <T> java.util.List<java.util.List<T>> O5(@org.jetbrains.annotations.NotNull java.lang.Iterable<? extends T> r9, int r10, int r11, boolean r12) {
        /*
            java.lang.String r0 = "<this>"
            kotlin.jvm.internal.f0.p(r9, r0)
            kotlin.collections.m1.a(r10, r11)
            boolean r0 = r9 instanceof java.util.RandomAccess
            r1 = 0
            if (r0 == 0) goto L56
            boolean r0 = r9 instanceof java.util.List
            if (r0 == 0) goto L56
            java.util.List r9 = (java.util.List) r9
            int r0 = r9.size()
            int r2 = r0 / r11
            int r3 = r0 % r11
            r4 = 1
            if (r3 != 0) goto L20
            r3 = 0
            goto L21
        L20:
            r3 = 1
        L21:
            int r2 = r2 + r3
            java.util.ArrayList r3 = new java.util.ArrayList
            r3.<init>(r2)
            r2 = 0
        L28:
            if (r2 < 0) goto L2e
            if (r2 >= r0) goto L2e
            r5 = 1
            goto L2f
        L2e:
            r5 = 0
        L2f:
            if (r5 == 0) goto L55
            int r5 = r0 - r2
            int r5 = kotlin.ranges.o.u(r10, r5)
            if (r5 >= r10) goto L3c
            if (r12 != 0) goto L3c
            goto L55
        L3c:
            java.util.ArrayList r6 = new java.util.ArrayList
            r6.<init>(r5)
            r7 = 0
        L42:
            if (r7 >= r5) goto L50
            int r8 = r7 + 1
            int r7 = r7 + r2
            java.lang.Object r7 = r9.get(r7)
            r6.add(r7)
            r7 = r8
            goto L42
        L50:
            r3.add(r6)
            int r2 = r2 + r11
            goto L28
        L55:
            return r3
        L56:
            java.util.ArrayList r0 = new java.util.ArrayList
            r0.<init>()
            java.util.Iterator r9 = r9.iterator()
            java.util.Iterator r9 = kotlin.collections.m1.b(r9, r10, r11, r12, r1)
        L63:
            boolean r10 = r9.hasNext()
            if (r10 == 0) goto L73
            java.lang.Object r10 = r9.next()
            java.util.List r10 = (java.util.List) r10
            r0.add(r10)
            goto L63
        L73:
            return r0
        */
        throw new UnsupportedOperationException("Method not decompiled: kotlin.collections.f0.O5(java.lang.Iterable, int, int, boolean):java.util.List");
    }

    @NotNull
    public static final <T> List<T> P1(@NotNull List<? extends T> list, @NotNull d2.l<? super T, Boolean> predicate) {
        List<T> F;
        kotlin.jvm.internal.f0.p(list, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        if (!list.isEmpty()) {
            ListIterator<? extends T> listIterator = list.listIterator(list.size());
            while (listIterator.hasPrevious()) {
                if (!predicate.invoke((T) listIterator.previous()).booleanValue()) {
                    return u5(list, listIterator.nextIndex() + 1);
                }
            }
        }
        F = CollectionsKt__CollectionsKt.F();
        return F;
    }

    public static final <T> int P2(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        int i4 = 0;
        for (Object obj : iterable) {
            if (i4 < 0) {
                CollectionsKt__CollectionsKt.X();
            }
            if (predicate.invoke(obj).booleanValue()) {
                return i4;
            }
            i4++;
        }
        return -1;
    }

    @SinceKotlin(version = "1.4")
    @OverloadResolutionByLambdaReturnType
    @InlineOnly
    private static final <T, R extends Comparable<? super R>> R P3(Iterable<? extends T> iterable, d2.l<? super T, ? extends R> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            R invoke = selector.invoke((T) it.next());
            while (it.hasNext()) {
                R invoke2 = selector.invoke((T) it.next());
                if (invoke.compareTo(invoke2) > 0) {
                    invoke = invoke2;
                }
            }
            return invoke;
        }
        throw new NoSuchElementException();
    }

    @SinceKotlin(version = "1.3")
    public static final <T> void P4(@NotNull List<T> list, @NotNull Random random) {
        int H;
        kotlin.jvm.internal.f0.p(list, "<this>");
        kotlin.jvm.internal.f0.p(random, "random");
        H = CollectionsKt__CollectionsKt.H(list);
        if (1 > H) {
            return;
        }
        while (true) {
            int i4 = H - 1;
            int nextInt = random.nextInt(H + 1);
            list.set(nextInt, list.set(H, list.get(nextInt)));
            if (1 > i4) {
                return;
            }
            H = i4;
        }
    }

    @SinceKotlin(version = "1.2")
    @NotNull
    public static final <T, R> List<R> P5(@NotNull Iterable<? extends T> iterable, int i4, int i5, boolean z3, @NotNull d2.l<? super List<? extends T>, ? extends R> transform) {
        int u3;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(transform, "transform");
        m1.a(i4, i5);
        if ((iterable instanceof RandomAccess) && (iterable instanceof List)) {
            List list = (List) iterable;
            int size = list.size();
            ArrayList arrayList = new ArrayList((size / i5) + (size % i5 == 0 ? 0 : 1));
            b1 b1Var = new b1(list);
            int i6 = 0;
            while (true) {
                if (!(i6 >= 0 && i6 < size)) {
                    break;
                }
                u3 = kotlin.ranges.q.u(i4, size - i6);
                if (!z3 && u3 < i4) {
                    break;
                }
                b1Var.a(i6, u3 + i6);
                arrayList.add(transform.invoke(b1Var));
                i6 += i5;
            }
            return arrayList;
        }
        ArrayList arrayList2 = new ArrayList();
        Iterator b4 = m1.b(iterable.iterator(), i4, i5, z3, true);
        while (b4.hasNext()) {
            arrayList2.add(transform.invoke((List) b4.next()));
        }
        return arrayList2;
    }

    @NotNull
    public static final <T> List<T> Q1(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        ArrayList arrayList = new ArrayList();
        boolean z3 = false;
        for (Object obj : iterable) {
            if (z3) {
                arrayList.add(obj);
            } else if (!predicate.invoke(obj).booleanValue()) {
                arrayList.add(obj);
                z3 = true;
            }
        }
        return arrayList;
    }

    public static final <T> int Q2(@NotNull List<? extends T> list, @NotNull d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        int i4 = 0;
        for (Object obj : list) {
            if (predicate.invoke(obj).booleanValue()) {
                return i4;
            }
            i4++;
        }
        return -1;
    }

    @SinceKotlin(version = "1.4")
    @OverloadResolutionByLambdaReturnType
    @InlineOnly
    private static final <T, R extends Comparable<? super R>> R Q3(Iterable<? extends T> iterable, d2.l<? super T, ? extends R> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            R invoke = selector.invoke((T) it.next());
            while (it.hasNext()) {
                R invoke2 = selector.invoke((T) it.next());
                if (invoke.compareTo(invoke2) > 0) {
                    invoke = invoke2;
                }
            }
            return invoke;
        }
        return null;
    }

    public static <T> T Q4(@NotNull Iterable<? extends T> iterable) {
        Object S4;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        if (iterable instanceof List) {
            S4 = S4((List) iterable);
            return (T) S4;
        }
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            T next = it.next();
            if (it.hasNext()) {
                throw new IllegalArgumentException("Collection has more than one element.");
            }
            return next;
        }
        throw new NoSuchElementException("Collection is empty.");
    }

    public static /* synthetic */ List Q5(Iterable iterable, int i4, int i5, boolean z3, int i6, Object obj) {
        if ((i6 & 2) != 0) {
            i5 = 1;
        }
        if ((i6 & 4) != 0) {
            z3 = false;
        }
        return O5(iterable, i4, i5, z3);
    }

    public static final <T> T R1(@NotNull Iterable<? extends T> iterable, int i4) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        if (iterable instanceof List) {
            return (T) ((List) iterable).get(i4);
        }
        return (T) T1(iterable, i4, new b(i4));
    }

    public static final <T> int R2(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        int i4 = -1;
        int i5 = 0;
        for (Object obj : iterable) {
            if (i5 < 0) {
                CollectionsKt__CollectionsKt.X();
            }
            if (predicate.invoke(obj).booleanValue()) {
                i4 = i5;
            }
            i5++;
        }
        return i4;
    }

    @SinceKotlin(version = "1.4")
    @OverloadResolutionByLambdaReturnType
    @InlineOnly
    private static final <T> Double R3(Iterable<? extends T> iterable, d2.l<? super T, Double> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            double doubleValue = selector.invoke((T) it.next()).doubleValue();
            while (it.hasNext()) {
                doubleValue = Math.min(doubleValue, selector.invoke((T) it.next()).doubleValue());
            }
            return Double.valueOf(doubleValue);
        }
        return null;
    }

    /* JADX WARN: Multi-variable type inference failed */
    public static final <T> T R4(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        T t3 = null;
        boolean z3 = false;
        for (T t4 : iterable) {
            if (predicate.invoke(t4).booleanValue()) {
                if (z3) {
                    throw new IllegalArgumentException("Collection contains more than one matching element.");
                }
                z3 = true;
                t3 = t4;
            }
        }
        if (z3) {
            return t3;
        }
        throw new NoSuchElementException("Collection contains no element matching the predicate.");
    }

    public static /* synthetic */ List R5(Iterable iterable, int i4, int i5, boolean z3, d2.l lVar, int i6, Object obj) {
        if ((i6 & 2) != 0) {
            i5 = 1;
        }
        if ((i6 & 4) != 0) {
            z3 = false;
        }
        return P5(iterable, i4, i5, z3, lVar);
    }

    @InlineOnly
    private static final <T> T S1(List<? extends T> list, int i4) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        return list.get(i4);
    }

    public static final <T> int S2(@NotNull List<? extends T> list, @NotNull d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        ListIterator<? extends T> listIterator = list.listIterator(list.size());
        while (listIterator.hasPrevious()) {
            if (predicate.invoke((T) listIterator.previous()).booleanValue()) {
                return listIterator.nextIndex();
            }
        }
        return -1;
    }

    @SinceKotlin(version = "1.4")
    @OverloadResolutionByLambdaReturnType
    @InlineOnly
    private static final <T> Float S3(Iterable<? extends T> iterable, d2.l<? super T, Float> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            float floatValue = selector.invoke((T) it.next()).floatValue();
            while (it.hasNext()) {
                floatValue = Math.min(floatValue, selector.invoke((T) it.next()).floatValue());
            }
            return Float.valueOf(floatValue);
        }
        return null;
    }

    public static <T> T S4(@NotNull List<? extends T> list) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        int size = list.size();
        if (size != 0) {
            if (size == 1) {
                return list.get(0);
            }
            throw new IllegalArgumentException("List has more than one element.");
        }
        throw new NoSuchElementException("List is empty.");
    }

    @NotNull
    public static <T> Iterable<o0<T>> S5(@NotNull Iterable<? extends T> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        return new p0(new d(iterable));
    }

    public static final <T> T T1(@NotNull Iterable<? extends T> iterable, int i4, @NotNull d2.l<? super Integer, ? extends T> defaultValue) {
        int H;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(defaultValue, "defaultValue");
        if (iterable instanceof List) {
            List list = (List) iterable;
            if (i4 >= 0) {
                H = CollectionsKt__CollectionsKt.H(list);
                if (i4 <= H) {
                    return (T) list.get(i4);
                }
            }
            return defaultValue.invoke(Integer.valueOf(i4));
        } else if (i4 < 0) {
            return defaultValue.invoke(Integer.valueOf(i4));
        } else {
            int i5 = 0;
            for (T t3 : iterable) {
                int i6 = i5 + 1;
                if (i4 == i5) {
                    return t3;
                }
                i5 = i6;
            }
            return defaultValue.invoke(Integer.valueOf(i4));
        }
    }

    @NotNull
    public static <T> Set<T> T2(@NotNull Iterable<? extends T> iterable, @NotNull Iterable<? extends T> other) {
        Set<T> K5;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(other, "other");
        K5 = K5(iterable);
        c0.O0(K5, other);
        return K5;
    }

    /* JADX WARN: Multi-variable type inference failed */
    @SinceKotlin(version = "1.4")
    @OverloadResolutionByLambdaReturnType
    @InlineOnly
    private static final <T, R> R T3(Iterable<? extends T> iterable, Comparator<? super R> comparator, d2.l<? super T, ? extends R> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(comparator, "comparator");
        kotlin.jvm.internal.f0.p(selector, "selector");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            Object obj = (R) selector.invoke((T) it.next());
            while (it.hasNext()) {
                R invoke = selector.invoke((T) it.next());
                if (comparator.compare(obj, invoke) > 0) {
                    obj = invoke;
                }
            }
            return (R) obj;
        }
        throw new NoSuchElementException();
    }

    @Nullable
    public static <T> T T4(@NotNull Iterable<? extends T> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        if (iterable instanceof List) {
            List list = (List) iterable;
            if (list.size() == 1) {
                return (T) list.get(0);
            }
            return null;
        }
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            T next = it.next();
            if (it.hasNext()) {
                return null;
            }
            return next;
        }
        return null;
    }

    @NotNull
    public static <T, R> List<Pair<T, R>> T5(@NotNull Iterable<? extends T> iterable, @NotNull Iterable<? extends R> other) {
        int Z;
        int Z2;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(other, "other");
        Iterator<? extends T> it = iterable.iterator();
        Iterator<? extends R> it2 = other.iterator();
        Z = y.Z(iterable, 10);
        Z2 = y.Z(other, 10);
        ArrayList arrayList = new ArrayList(Math.min(Z, Z2));
        while (it.hasNext() && it2.hasNext()) {
            arrayList.add(kotlin.l0.a(it.next(), it2.next()));
        }
        return arrayList;
    }

    @InlineOnly
    private static final <T> T U1(List<? extends T> list, int i4, d2.l<? super Integer, ? extends T> defaultValue) {
        int H;
        kotlin.jvm.internal.f0.p(list, "<this>");
        kotlin.jvm.internal.f0.p(defaultValue, "defaultValue");
        if (i4 >= 0) {
            H = CollectionsKt__CollectionsKt.H(list);
            if (i4 <= H) {
                return list.get(i4);
            }
        }
        return defaultValue.invoke(Integer.valueOf(i4));
    }

    @NotNull
    public static final <T, A extends Appendable> A U2(@NotNull Iterable<? extends T> iterable, @NotNull A buffer, @NotNull CharSequence separator, @NotNull CharSequence prefix, @NotNull CharSequence postfix, int i4, @NotNull CharSequence truncated, @Nullable d2.l<? super T, ? extends CharSequence> lVar) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(buffer, "buffer");
        kotlin.jvm.internal.f0.p(separator, "separator");
        kotlin.jvm.internal.f0.p(prefix, "prefix");
        kotlin.jvm.internal.f0.p(postfix, "postfix");
        kotlin.jvm.internal.f0.p(truncated, "truncated");
        buffer.append(prefix);
        int i5 = 0;
        for (T t3 : iterable) {
            i5++;
            if (i5 > 1) {
                buffer.append(separator);
            }
            if (i4 >= 0 && i5 > i4) {
                break;
            }
            kotlin.text.o.b(buffer, t3, lVar);
        }
        if (i4 >= 0 && i5 > i4) {
            buffer.append(truncated);
        }
        buffer.append(postfix);
        return buffer;
    }

    /* JADX WARN: Multi-variable type inference failed */
    @SinceKotlin(version = "1.4")
    @OverloadResolutionByLambdaReturnType
    @InlineOnly
    private static final <T, R> R U3(Iterable<? extends T> iterable, Comparator<? super R> comparator, d2.l<? super T, ? extends R> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(comparator, "comparator");
        kotlin.jvm.internal.f0.p(selector, "selector");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            Object obj = (R) selector.invoke((T) it.next());
            while (it.hasNext()) {
                R invoke = selector.invoke((T) it.next());
                if (comparator.compare(obj, invoke) > 0) {
                    obj = invoke;
                }
            }
            return (R) obj;
        }
        return null;
    }

    /* JADX WARN: Multi-variable type inference failed */
    @Nullable
    public static final <T> T U4(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        boolean z3 = false;
        T t3 = null;
        for (T t4 : iterable) {
            if (predicate.invoke(t4).booleanValue()) {
                if (z3) {
                    return null;
                }
                z3 = true;
                t3 = t4;
            }
        }
        if (z3) {
            return t3;
        }
        return null;
    }

    @NotNull
    public static final <T, R, V> List<V> U5(@NotNull Iterable<? extends T> iterable, @NotNull Iterable<? extends R> other, @NotNull d2.p<? super T, ? super R, ? extends V> transform) {
        int Z;
        int Z2;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(other, "other");
        kotlin.jvm.internal.f0.p(transform, "transform");
        Iterator<? extends T> it = iterable.iterator();
        Iterator<? extends R> it2 = other.iterator();
        Z = y.Z(iterable, 10);
        Z2 = y.Z(other, 10);
        ArrayList arrayList = new ArrayList(Math.min(Z, Z2));
        while (it.hasNext() && it2.hasNext()) {
            arrayList.add(transform.invoke((T) it.next(), (R) it2.next()));
        }
        return arrayList;
    }

    @Nullable
    public static final <T> T V1(@NotNull Iterable<? extends T> iterable, int i4) {
        Object H2;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        if (iterable instanceof List) {
            H2 = H2((List) iterable, i4);
            return (T) H2;
        } else if (i4 < 0) {
            return null;
        } else {
            int i5 = 0;
            for (T t3 : iterable) {
                int i6 = i5 + 1;
                if (i4 == i5) {
                    return t3;
                }
                i5 = i6;
            }
            return null;
        }
    }

    public static /* synthetic */ Appendable V2(Iterable iterable, Appendable appendable, CharSequence charSequence, CharSequence charSequence2, CharSequence charSequence3, int i4, CharSequence charSequence4, d2.l lVar, int i5, Object obj) {
        return U2(iterable, appendable, (i5 & 2) != 0 ? ", " : charSequence, (i5 & 4) != 0 ? "" : charSequence2, (i5 & 8) == 0 ? charSequence3 : "", (i5 & 16) != 0 ? -1 : i4, (i5 & 32) != 0 ? "..." : charSequence4, (i5 & 64) != 0 ? null : lVar);
    }

    @SinceKotlin(version = "1.4")
    @Nullable
    public static <T extends Comparable<? super T>> T V3(@NotNull Iterable<? extends T> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            T next = it.next();
            while (it.hasNext()) {
                T next2 = it.next();
                if (next.compareTo(next2) > 0) {
                    next = next2;
                }
            }
            return next;
        }
        return null;
    }

    @Nullable
    public static <T> T V4(@NotNull List<? extends T> list) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        if (list.size() == 1) {
            return list.get(0);
        }
        return null;
    }

    @NotNull
    public static final <T, R> List<Pair<T, R>> V5(@NotNull Iterable<? extends T> iterable, @NotNull R[] other) {
        int Z;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(other, "other");
        int length = other.length;
        Z = y.Z(iterable, 10);
        ArrayList arrayList = new ArrayList(Math.min(Z, length));
        int i4 = 0;
        for (T t3 : iterable) {
            if (i4 >= length) {
                break;
            }
            arrayList.add(kotlin.l0.a(t3, other[i4]));
            i4++;
        }
        return arrayList;
    }

    @InlineOnly
    private static final <T> T W1(List<? extends T> list, int i4) {
        Object H2;
        kotlin.jvm.internal.f0.p(list, "<this>");
        H2 = H2(list, i4);
        return (T) H2;
    }

    @NotNull
    public static <T> String W2(@NotNull Iterable<? extends T> iterable, @NotNull CharSequence separator, @NotNull CharSequence prefix, @NotNull CharSequence postfix, int i4, @NotNull CharSequence truncated, @Nullable d2.l<? super T, ? extends CharSequence> lVar) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(separator, "separator");
        kotlin.jvm.internal.f0.p(prefix, "prefix");
        kotlin.jvm.internal.f0.p(postfix, "postfix");
        kotlin.jvm.internal.f0.p(truncated, "truncated");
        String sb = ((StringBuilder) U2(iterable, new StringBuilder(), separator, prefix, postfix, i4, truncated, lVar)).toString();
        kotlin.jvm.internal.f0.o(sb, "joinTo(StringBuilder(), \u2026ed, transform).toString()");
        return sb;
    }

    @SinceKotlin(version = "1.4")
    @Nullable
    public static Double W3(@NotNull Iterable<Double> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        Iterator<Double> it = iterable.iterator();
        if (it.hasNext()) {
            double doubleValue = it.next().doubleValue();
            while (it.hasNext()) {
                doubleValue = Math.min(doubleValue, it.next().doubleValue());
            }
            return Double.valueOf(doubleValue);
        }
        return null;
    }

    @NotNull
    public static final <T> List<T> W4(@NotNull List<? extends T> list, @NotNull Iterable<Integer> indices) {
        int Z;
        List<T> F;
        kotlin.jvm.internal.f0.p(list, "<this>");
        kotlin.jvm.internal.f0.p(indices, "indices");
        Z = y.Z(indices, 10);
        if (Z == 0) {
            F = CollectionsKt__CollectionsKt.F();
            return F;
        }
        ArrayList arrayList = new ArrayList(Z);
        for (Integer num : indices) {
            arrayList.add(list.get(num.intValue()));
        }
        return arrayList;
    }

    /* JADX WARN: Multi-variable type inference failed */
    @NotNull
    public static final <T, R, V> List<V> W5(@NotNull Iterable<? extends T> iterable, @NotNull R[] other, @NotNull d2.p<? super T, ? super R, ? extends V> transform) {
        int Z;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(other, "other");
        kotlin.jvm.internal.f0.p(transform, "transform");
        int length = other.length;
        Z = y.Z(iterable, 10);
        ArrayList arrayList = new ArrayList(Math.min(Z, length));
        int i4 = 0;
        for (Object obj : iterable) {
            if (i4 >= length) {
                break;
            }
            arrayList.add(transform.invoke(obj, other[i4]));
            i4++;
        }
        return arrayList;
    }

    @NotNull
    public static <T> List<T> X1(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        ArrayList arrayList = new ArrayList();
        for (Object obj : iterable) {
            if (predicate.invoke(obj).booleanValue()) {
                arrayList.add(obj);
            }
        }
        return arrayList;
    }

    public static /* synthetic */ String X2(Iterable iterable, CharSequence charSequence, CharSequence charSequence2, CharSequence charSequence3, int i4, CharSequence charSequence4, d2.l lVar, int i5, Object obj) {
        String W2;
        if ((i5 & 1) != 0) {
            charSequence = ", ";
        }
        String str = (i5 & 2) != 0 ? "" : charSequence2;
        String str2 = (i5 & 4) == 0 ? charSequence3 : "";
        int i6 = (i5 & 8) != 0 ? -1 : i4;
        if ((i5 & 16) != 0) {
            charSequence4 = "...";
        }
        CharSequence charSequence5 = charSequence4;
        if ((i5 & 32) != 0) {
            lVar = null;
        }
        W2 = W2(iterable, charSequence, str, str2, i6, charSequence5, lVar);
        return W2;
    }

    @SinceKotlin(version = "1.4")
    @Nullable
    public static final Float X3(@NotNull Iterable<Float> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        Iterator<Float> it = iterable.iterator();
        if (it.hasNext()) {
            float floatValue = it.next().floatValue();
            while (it.hasNext()) {
                floatValue = Math.min(floatValue, it.next().floatValue());
            }
            return Float.valueOf(floatValue);
        }
        return null;
    }

    @NotNull
    public static final <T> List<T> X4(@NotNull List<? extends T> list, @NotNull kotlin.ranges.k indices) {
        List<T> G5;
        List<T> F;
        kotlin.jvm.internal.f0.p(list, "<this>");
        kotlin.jvm.internal.f0.p(indices, "indices");
        if (indices.isEmpty()) {
            F = CollectionsKt__CollectionsKt.F();
            return F;
        }
        G5 = G5(list.subList(indices.getStart().intValue(), indices.getEndInclusive().intValue() + 1));
        return G5;
    }

    @SinceKotlin(version = "1.2")
    @NotNull
    public static final <T> List<Pair<T, T>> X5(@NotNull Iterable<? extends T> iterable) {
        List<Pair<T, T>> F;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        Iterator<? extends T> it = iterable.iterator();
        if (!it.hasNext()) {
            F = CollectionsKt__CollectionsKt.F();
            return F;
        }
        ArrayList arrayList = new ArrayList();
        T next = it.next();
        while (it.hasNext()) {
            T next2 = it.next();
            arrayList.add(kotlin.l0.a(next, next2));
            next = next2;
        }
        return arrayList;
    }

    @NotNull
    public static final <T> List<T> Y1(@NotNull Iterable<? extends T> iterable, @NotNull d2.p<? super Integer, ? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        ArrayList arrayList = new ArrayList();
        int i4 = 0;
        for (Object obj : iterable) {
            int i5 = i4 + 1;
            if (i4 < 0) {
                CollectionsKt__CollectionsKt.X();
            }
            if (predicate.invoke(Integer.valueOf(i4), obj).booleanValue()) {
                arrayList.add(obj);
            }
            i4 = i5;
        }
        return arrayList;
    }

    public static <T> T Y2(@NotNull Iterable<? extends T> iterable) {
        Object a32;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        if (iterable instanceof List) {
            a32 = a3((List) iterable);
            return (T) a32;
        }
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            T next = it.next();
            while (it.hasNext()) {
                next = it.next();
            }
            return next;
        }
        throw new NoSuchElementException("Collection is empty.");
    }

    @Deprecated(message = "Use minWithOrNull instead.", replaceWith = @ReplaceWith(expression = "this.minWithOrNull(comparator)", imports = {}))
    @DeprecatedSinceKotlin(errorSince = "1.5", hiddenSince = "1.6", warningSince = "1.4")
    public static final /* synthetic */ Object Y3(Iterable iterable, Comparator comparator) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(comparator, "comparator");
        return Z3(iterable, comparator);
    }

    public static final <T, R extends Comparable<? super R>> void Y4(@NotNull List<T> list, @NotNull d2.l<? super T, ? extends R> selector) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        if (list.size() > 1) {
            b0.n0(list, new b.C1096b(selector));
        }
    }

    @SinceKotlin(version = "1.2")
    @NotNull
    public static final <T, R> List<R> Y5(@NotNull Iterable<? extends T> iterable, @NotNull d2.p<? super T, ? super T, ? extends R> transform) {
        List<R> F;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(transform, "transform");
        Iterator<? extends T> it = iterable.iterator();
        if (!it.hasNext()) {
            F = CollectionsKt__CollectionsKt.F();
            return F;
        }
        ArrayList arrayList = new ArrayList();
        Object obj = (T) it.next();
        while (it.hasNext()) {
            Object obj2 = (T) it.next();
            arrayList.add(transform.invoke(obj, obj2));
            obj = (Object) obj2;
        }
        return arrayList;
    }

    @NotNull
    public static final <T, C extends Collection<? super T>> C Z1(@NotNull Iterable<? extends T> iterable, @NotNull C destination, @NotNull d2.p<? super Integer, ? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(destination, "destination");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        int i4 = 0;
        for (Object obj : iterable) {
            int i5 = i4 + 1;
            if (i4 < 0) {
                CollectionsKt__CollectionsKt.X();
            }
            if (predicate.invoke(Integer.valueOf(i4), obj).booleanValue()) {
                destination.add(obj);
            }
            i4 = i5;
        }
        return destination;
    }

    /* JADX WARN: Multi-variable type inference failed */
    public static final <T> T Z2(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        T t3 = null;
        boolean z3 = false;
        for (T t4 : iterable) {
            if (predicate.invoke(t4).booleanValue()) {
                z3 = true;
                t3 = t4;
            }
        }
        if (z3) {
            return t3;
        }
        throw new NoSuchElementException("Collection contains no element matching the predicate.");
    }

    @SinceKotlin(version = "1.4")
    @Nullable
    public static final <T> T Z3(@NotNull Iterable<? extends T> iterable, @NotNull Comparator<? super T> comparator) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(comparator, "comparator");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            Object obj = (T) it.next();
            while (it.hasNext()) {
                Object obj2 = (T) it.next();
                if (comparator.compare(obj, obj2) > 0) {
                    obj = (T) obj2;
                }
            }
            return (T) obj;
        }
        return null;
    }

    public static final <T, R extends Comparable<? super R>> void Z4(@NotNull List<T> list, @NotNull d2.l<? super T, ? extends R> selector) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        if (list.size() > 1) {
            b0.n0(list, new b.d(selector));
        }
    }

    public static final /* synthetic */ <R> List<R> a2(Iterable<?> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        ArrayList arrayList = new ArrayList();
        for (Object obj : iterable) {
            kotlin.jvm.internal.f0.y(3, "R");
            if (obj instanceof Object) {
                arrayList.add(obj);
            }
        }
        return arrayList;
    }

    public static <T> T a3(@NotNull List<? extends T> list) {
        int H;
        kotlin.jvm.internal.f0.p(list, "<this>");
        if (!list.isEmpty()) {
            H = CollectionsKt__CollectionsKt.H(list);
            return list.get(H);
        }
        throw new NoSuchElementException("List is empty.");
    }

    @NotNull
    public static final <T> List<T> a4(@NotNull Iterable<? extends T> iterable, @NotNull Iterable<? extends T> elements) {
        List<T> G5;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(elements, "elements");
        Collection d4 = s.d(elements, iterable);
        if (d4.isEmpty()) {
            G5 = G5(iterable);
            return G5;
        }
        ArrayList arrayList = new ArrayList();
        for (T t3 : iterable) {
            if (!d4.contains(t3)) {
                arrayList.add(t3);
            }
        }
        return arrayList;
    }

    public static final <T extends Comparable<? super T>> void a5(@NotNull List<T> list) {
        Comparator q3;
        kotlin.jvm.internal.f0.p(list, "<this>");
        q3 = kotlin.comparisons.b.q();
        b0.n0(list, q3);
    }

    public static final /* synthetic */ <R, C extends Collection<? super R>> C b2(Iterable<?> iterable, C destination) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(destination, "destination");
        for (Object obj : iterable) {
            kotlin.jvm.internal.f0.y(3, "R");
            if (obj instanceof Object) {
                destination.add(obj);
            }
        }
        return destination;
    }

    /* JADX WARN: Type inference failed for: r0v4, types: [T, java.lang.Object] */
    public static final <T> T b3(@NotNull List<? extends T> list, @NotNull d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        ListIterator<? extends T> listIterator = list.listIterator(list.size());
        while (listIterator.hasPrevious()) {
            T previous = listIterator.previous();
            if (predicate.invoke(previous).booleanValue()) {
                return previous;
            }
        }
        throw new NoSuchElementException("List contains no element matching the predicate.");
    }

    @NotNull
    public static <T> List<T> b4(@NotNull Iterable<? extends T> iterable, T t3) {
        int Z;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        Z = y.Z(iterable, 10);
        ArrayList arrayList = new ArrayList(Z);
        boolean z3 = false;
        for (T t4 : iterable) {
            boolean z4 = true;
            if (!z3 && kotlin.jvm.internal.f0.g(t4, t3)) {
                z3 = true;
                z4 = false;
            }
            if (z4) {
                arrayList.add(t4);
            }
        }
        return arrayList;
    }

    @NotNull
    public static <T extends Comparable<? super T>> List<T> b5(@NotNull Iterable<? extends T> iterable) {
        List<T> t3;
        List<T> G5;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        if (iterable instanceof Collection) {
            Collection collection = (Collection) iterable;
            if (collection.size() <= 1) {
                G5 = G5(iterable);
                return G5;
            }
            Object[] array = collection.toArray(new Comparable[0]);
            if (array != null) {
                o.r3((Comparable[]) array);
                t3 = o.t(array);
                return t3;
            }
            throw new NullPointerException("null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");
        }
        List<T> I5 = I5(iterable);
        b0.k0(I5);
        return I5;
    }

    @NotNull
    public static final <T> List<T> c2(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        ArrayList arrayList = new ArrayList();
        for (Object obj : iterable) {
            if (!predicate.invoke(obj).booleanValue()) {
                arrayList.add(obj);
            }
        }
        return arrayList;
    }

    public static final <T> int c3(@NotNull Iterable<? extends T> iterable, T t3) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        if (iterable instanceof List) {
            return ((List) iterable).lastIndexOf(t3);
        }
        int i4 = -1;
        int i5 = 0;
        for (T t4 : iterable) {
            if (i5 < 0) {
                CollectionsKt__CollectionsKt.X();
            }
            if (kotlin.jvm.internal.f0.g(t3, t4)) {
                i4 = i5;
            }
            i5++;
        }
        return i4;
    }

    @NotNull
    public static final <T> List<T> c4(@NotNull Iterable<? extends T> iterable, @NotNull kotlin.sequences.m<? extends T> elements) {
        List<T> G5;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(elements, "elements");
        Collection b4 = s.b(elements);
        if (b4.isEmpty()) {
            G5 = G5(iterable);
            return G5;
        }
        ArrayList arrayList = new ArrayList();
        for (T t3 : iterable) {
            if (!b4.contains(t3)) {
                arrayList.add(t3);
            }
        }
        return arrayList;
    }

    @NotNull
    public static final <T, R extends Comparable<? super R>> List<T> c5(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, ? extends R> selector) {
        List<T> f5;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        f5 = f5(iterable, new b.C1096b(selector));
        return f5;
    }

    @NotNull
    public static final <T> List<T> d2(@NotNull Iterable<? extends T> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        return (List) e2(iterable, new ArrayList());
    }

    public static final <T> int d3(@NotNull List<? extends T> list, T t3) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        return list.lastIndexOf(t3);
    }

    @NotNull
    public static final <T> List<T> d4(@NotNull Iterable<? extends T> iterable, @NotNull T[] elements) {
        List<T> G5;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(elements, "elements");
        if (elements.length == 0) {
            G5 = G5(iterable);
            return G5;
        }
        Collection c4 = s.c(elements);
        ArrayList arrayList = new ArrayList();
        for (T t3 : iterable) {
            if (!c4.contains(t3)) {
                arrayList.add(t3);
            }
        }
        return arrayList;
    }

    @NotNull
    public static final <T, R extends Comparable<? super R>> List<T> d5(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, ? extends R> selector) {
        List<T> f5;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        f5 = f5(iterable, new b.d(selector));
        return f5;
    }

    @NotNull
    public static final <C extends Collection<? super T>, T> C e2(@NotNull Iterable<? extends T> iterable, @NotNull C destination) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(destination, "destination");
        for (T t3 : iterable) {
            if (t3 != null) {
                destination.add(t3);
            }
        }
        return destination;
    }

    @Nullable
    public static <T> T e3(@NotNull Iterable<? extends T> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        if (iterable instanceof List) {
            List list = (List) iterable;
            if (list.isEmpty()) {
                return null;
            }
            return (T) list.get(list.size() - 1);
        }
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            T next = it.next();
            while (it.hasNext()) {
                next = it.next();
            }
            return next;
        }
        return null;
    }

    @InlineOnly
    private static final <T> List<T> e4(Iterable<? extends T> iterable, T t3) {
        List<T> b4;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        b4 = b4(iterable, t3);
        return b4;
    }

    @NotNull
    public static final <T extends Comparable<? super T>> List<T> e5(@NotNull Iterable<? extends T> iterable) {
        Comparator q3;
        List<T> f5;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        q3 = kotlin.comparisons.b.q();
        f5 = f5(iterable, q3);
        return f5;
    }

    @NotNull
    public static final <T, C extends Collection<? super T>> C f2(@NotNull Iterable<? extends T> iterable, @NotNull C destination, @NotNull d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(destination, "destination");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        for (Object obj : iterable) {
            if (!predicate.invoke(obj).booleanValue()) {
                destination.add(obj);
            }
        }
        return destination;
    }

    /* JADX WARN: Multi-variable type inference failed */
    @Nullable
    public static final <T> T f3(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        T t3 = null;
        for (T t4 : iterable) {
            if (predicate.invoke(t4).booleanValue()) {
                t3 = t4;
            }
        }
        return t3;
    }

    public static final <T> boolean f4(@NotNull Iterable<? extends T> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        return iterable instanceof Collection ? ((Collection) iterable).isEmpty() : !iterable.iterator().hasNext();
    }

    /* JADX WARN: Multi-variable type inference failed */
    @NotNull
    public static <T> List<T> f5(@NotNull Iterable<? extends T> iterable, @NotNull Comparator<? super T> comparator) {
        List<T> t3;
        List<T> G5;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(comparator, "comparator");
        if (iterable instanceof Collection) {
            Collection collection = (Collection) iterable;
            if (collection.size() <= 1) {
                G5 = G5(iterable);
                return G5;
            }
            Object[] array = collection.toArray(new Object[0]);
            if (array != null) {
                o.E3(array, comparator);
                t3 = o.t(array);
                return t3;
            }
            throw new NullPointerException("null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>");
        }
        List<T> I5 = I5(iterable);
        b0.n0(I5, comparator);
        return I5;
    }

    @NotNull
    public static final <T, C extends Collection<? super T>> C g2(@NotNull Iterable<? extends T> iterable, @NotNull C destination, @NotNull d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(destination, "destination");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        for (Object obj : iterable) {
            if (predicate.invoke(obj).booleanValue()) {
                destination.add(obj);
            }
        }
        return destination;
    }

    @Nullable
    public static <T> T g3(@NotNull List<? extends T> list) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        if (list.isEmpty()) {
            return null;
        }
        return list.get(list.size() - 1);
    }

    public static final <T> boolean g4(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        if ((iterable instanceof Collection) && ((Collection) iterable).isEmpty()) {
            return true;
        }
        for (Object obj : iterable) {
            if (predicate.invoke(obj).booleanValue()) {
                return false;
            }
        }
        return true;
    }

    @NotNull
    public static final <T> Set<T> g5(@NotNull Iterable<? extends T> iterable, @NotNull Iterable<? extends T> other) {
        Set<T> K5;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(other, "other");
        K5 = K5(iterable);
        c0.E0(K5, other);
        return K5;
    }

    public static <T> boolean h1(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        if ((iterable instanceof Collection) && ((Collection) iterable).isEmpty()) {
            return true;
        }
        for (Object obj : iterable) {
            if (!predicate.invoke(obj).booleanValue()) {
                return false;
            }
        }
        return true;
    }

    /* JADX WARN: Type inference failed for: r0v4, types: [T, java.lang.Object] */
    @InlineOnly
    private static final <T> T h2(Iterable<? extends T> iterable, d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        for (T t3 : iterable) {
            if (predicate.invoke(t3).booleanValue()) {
                return t3;
            }
        }
        return null;
    }

    /* JADX WARN: Type inference failed for: r0v4, types: [T, java.lang.Object] */
    @Nullable
    public static final <T> T h3(@NotNull List<? extends T> list, @NotNull d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        ListIterator<? extends T> listIterator = list.listIterator(list.size());
        while (listIterator.hasPrevious()) {
            T previous = listIterator.previous();
            if (predicate.invoke(previous).booleanValue()) {
                return previous;
            }
        }
        return null;
    }

    @SinceKotlin(version = "1.1")
    @NotNull
    public static final <T, C extends Iterable<? extends T>> C h4(@NotNull C c4, @NotNull d2.l<? super T, kotlin.f1> action) {
        kotlin.jvm.internal.f0.p(c4, "<this>");
        kotlin.jvm.internal.f0.p(action, "action");
        Iterator<T> it = c4.iterator();
        while (it.hasNext()) {
            action.invoke(it.next());
        }
        return c4;
    }

    @Deprecated(message = "Use sumOf instead.", replaceWith = @ReplaceWith(expression = "this.sumOf(selector)", imports = {}))
    @DeprecatedSinceKotlin(warningSince = "1.5")
    public static final <T> int h5(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, Integer> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        int i4 = 0;
        for (Object obj : iterable) {
            i4 += selector.invoke(obj).intValue();
        }
        return i4;
    }

    public static final <T> boolean i1(@NotNull Iterable<? extends T> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        return iterable instanceof Collection ? !((Collection) iterable).isEmpty() : iterable.iterator().hasNext();
    }

    /* JADX WARN: Multi-variable type inference failed */
    @InlineOnly
    private static final <T> T i2(Iterable<? extends T> iterable, d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        T t3 = null;
        for (T t4 : iterable) {
            if (predicate.invoke(t4).booleanValue()) {
                t3 = t4;
            }
        }
        return t3;
    }

    @NotNull
    public static <T, R> List<R> i3(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, ? extends R> transform) {
        int Z;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(transform, "transform");
        Z = y.Z(iterable, 10);
        ArrayList arrayList = new ArrayList(Z);
        for (Object obj : iterable) {
            arrayList.add(transform.invoke(obj));
        }
        return arrayList;
    }

    @SinceKotlin(version = "1.4")
    @NotNull
    public static final <T, C extends Iterable<? extends T>> C i4(@NotNull C c4, @NotNull d2.p<? super Integer, ? super T, kotlin.f1> action) {
        kotlin.jvm.internal.f0.p(c4, "<this>");
        kotlin.jvm.internal.f0.p(action, "action");
        int i4 = 0;
        for (T t3 : c4) {
            int i5 = i4 + 1;
            if (i4 < 0) {
                CollectionsKt__CollectionsKt.X();
            }
            action.invoke(Integer.valueOf(i4), t3);
            i4 = i5;
        }
        return c4;
    }

    @Deprecated(message = "Use sumOf instead.", replaceWith = @ReplaceWith(expression = "this.sumOf(selector)", imports = {}))
    @DeprecatedSinceKotlin(warningSince = "1.5")
    public static final <T> double i5(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, Double> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        double d4 = 0.0d;
        for (Object obj : iterable) {
            d4 += selector.invoke(obj).doubleValue();
        }
        return d4;
    }

    public static final <T> boolean j1(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        if ((iterable instanceof Collection) && ((Collection) iterable).isEmpty()) {
            return false;
        }
        for (Object obj : iterable) {
            if (predicate.invoke(obj).booleanValue()) {
                return true;
            }
        }
        return false;
    }

    /* JADX WARN: Type inference failed for: r0v5, types: [T, java.lang.Object] */
    @InlineOnly
    private static final <T> T j2(List<? extends T> list, d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        ListIterator<? extends T> listIterator = list.listIterator(list.size());
        while (listIterator.hasPrevious()) {
            T previous = listIterator.previous();
            if (predicate.invoke(previous).booleanValue()) {
                return previous;
            }
        }
        return null;
    }

    @NotNull
    public static final <T, R> List<R> j3(@NotNull Iterable<? extends T> iterable, @NotNull d2.p<? super Integer, ? super T, ? extends R> transform) {
        int Z;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(transform, "transform");
        Z = y.Z(iterable, 10);
        ArrayList arrayList = new ArrayList(Z);
        int i4 = 0;
        for (Object obj : iterable) {
            int i5 = i4 + 1;
            if (i4 < 0) {
                CollectionsKt__CollectionsKt.X();
            }
            arrayList.add(transform.invoke(Integer.valueOf(i4), obj));
            i4 = i5;
        }
        return arrayList;
    }

    @NotNull
    public static final <T> Pair<List<T>, List<T>> j4(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        ArrayList arrayList = new ArrayList();
        ArrayList arrayList2 = new ArrayList();
        for (Object obj : iterable) {
            if (predicate.invoke(obj).booleanValue()) {
                arrayList.add(obj);
            } else {
                arrayList2.add(obj);
            }
        }
        return new Pair<>(arrayList, arrayList2);
    }

    @JvmName(name = "sumOfByte")
    public static final int j5(@NotNull Iterable<Byte> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        int i4 = 0;
        for (Byte b4 : iterable) {
            i4 += b4.byteValue();
        }
        return i4;
    }

    /* JADX WARN: Multi-variable type inference failed */
    @InlineOnly
    private static final <T> Iterable<T> k1(Iterable<? extends T> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        return iterable;
    }

    public static <T> T k2(@NotNull Iterable<? extends T> iterable) {
        Object m22;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        if (iterable instanceof List) {
            m22 = m2((List) iterable);
            return (T) m22;
        }
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            return it.next();
        }
        throw new NoSuchElementException("Collection is empty.");
    }

    @NotNull
    public static final <T, R> List<R> k3(@NotNull Iterable<? extends T> iterable, @NotNull d2.p<? super Integer, ? super T, ? extends R> transform) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(transform, "transform");
        ArrayList arrayList = new ArrayList();
        int i4 = 0;
        for (Object obj : iterable) {
            int i5 = i4 + 1;
            if (i4 < 0) {
                CollectionsKt__CollectionsKt.X();
            }
            R invoke = transform.invoke(Integer.valueOf(i4), obj);
            if (invoke != null) {
                arrayList.add(invoke);
            }
            i4 = i5;
        }
        return arrayList;
    }

    @NotNull
    public static <T> List<T> k4(@NotNull Iterable<? extends T> iterable, @NotNull Iterable<? extends T> elements) {
        List<T> o4;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(elements, "elements");
        if (iterable instanceof Collection) {
            o4 = o4((Collection) iterable, elements);
            return o4;
        }
        ArrayList arrayList = new ArrayList();
        c0.o0(arrayList, iterable);
        c0.o0(arrayList, elements);
        return arrayList;
    }

    @JvmName(name = "sumOfDouble")
    public static final double k5(@NotNull Iterable<Double> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        double d4 = 0.0d;
        for (Double d5 : iterable) {
            d4 += d5.doubleValue();
        }
        return d4;
    }

    @NotNull
    public static <T> kotlin.sequences.m<T> l1(@NotNull Iterable<? extends T> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        return new a(iterable);
    }

    /* JADX WARN: Type inference failed for: r0v3, types: [T, java.lang.Object] */
    public static final <T> T l2(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        for (T t3 : iterable) {
            if (predicate.invoke(t3).booleanValue()) {
                return t3;
            }
        }
        throw new NoSuchElementException("Collection contains no element matching the predicate.");
    }

    @NotNull
    public static final <T, R, C extends Collection<? super R>> C l3(@NotNull Iterable<? extends T> iterable, @NotNull C destination, @NotNull d2.p<? super Integer, ? super T, ? extends R> transform) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(destination, "destination");
        kotlin.jvm.internal.f0.p(transform, "transform");
        int i4 = 0;
        for (Object obj : iterable) {
            int i5 = i4 + 1;
            if (i4 < 0) {
                CollectionsKt__CollectionsKt.X();
            }
            R invoke = transform.invoke(Integer.valueOf(i4), obj);
            if (invoke != null) {
                destination.add(invoke);
            }
            i4 = i5;
        }
        return destination;
    }

    @NotNull
    public static <T> List<T> l4(@NotNull Iterable<? extends T> iterable, T t3) {
        List<T> p4;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        if (iterable instanceof Collection) {
            p4 = p4((Collection) iterable, t3);
            return p4;
        }
        ArrayList arrayList = new ArrayList();
        c0.o0(arrayList, iterable);
        arrayList.add(t3);
        return arrayList;
    }

    @SinceKotlin(version = "1.4")
    @InlineOnly
    @JvmName(name = "sumOfDouble")
    @OverloadResolutionByLambdaReturnType
    private static final <T> double l5(Iterable<? extends T> iterable, d2.l<? super T, Double> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        double d4 = 0.0d;
        for (Object obj : iterable) {
            d4 += selector.invoke(obj).doubleValue();
        }
        return d4;
    }

    @NotNull
    public static final <T, K, V> Map<K, V> m1(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, ? extends Pair<? extends K, ? extends V>> transform) {
        int Z;
        int j4;
        int n4;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(transform, "transform");
        Z = y.Z(iterable, 10);
        j4 = y0.j(Z);
        n4 = kotlin.ranges.q.n(j4, 16);
        LinkedHashMap linkedHashMap = new LinkedHashMap(n4);
        for (Object obj : iterable) {
            Pair<? extends K, ? extends V> invoke = transform.invoke(obj);
            linkedHashMap.put(invoke.getFirst(), invoke.getSecond());
        }
        return linkedHashMap;
    }

    public static <T> T m2(@NotNull List<? extends T> list) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        if (!list.isEmpty()) {
            return list.get(0);
        }
        throw new NoSuchElementException("List is empty.");
    }

    @NotNull
    public static final <T, R, C extends Collection<? super R>> C m3(@NotNull Iterable<? extends T> iterable, @NotNull C destination, @NotNull d2.p<? super Integer, ? super T, ? extends R> transform) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(destination, "destination");
        kotlin.jvm.internal.f0.p(transform, "transform");
        int i4 = 0;
        for (Object obj : iterable) {
            int i5 = i4 + 1;
            if (i4 < 0) {
                CollectionsKt__CollectionsKt.X();
            }
            destination.add(transform.invoke(Integer.valueOf(i4), obj));
            i4 = i5;
        }
        return destination;
    }

    @NotNull
    public static final <T> List<T> m4(@NotNull Iterable<? extends T> iterable, @NotNull kotlin.sequences.m<? extends T> elements) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(elements, "elements");
        ArrayList arrayList = new ArrayList();
        c0.o0(arrayList, iterable);
        c0.p0(arrayList, elements);
        return arrayList;
    }

    @JvmName(name = "sumOfFloat")
    public static final float m5(@NotNull Iterable<Float> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        float f4 = 0.0f;
        for (Float f5 : iterable) {
            f4 += f5.floatValue();
        }
        return f4;
    }

    @NotNull
    public static final <T, K> Map<K, T> n1(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, ? extends K> keySelector) {
        int Z;
        int j4;
        int n4;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(keySelector, "keySelector");
        Z = y.Z(iterable, 10);
        j4 = y0.j(Z);
        n4 = kotlin.ranges.q.n(j4, 16);
        LinkedHashMap linkedHashMap = new LinkedHashMap(n4);
        for (Object obj : iterable) {
            linkedHashMap.put(keySelector.invoke(obj), obj);
        }
        return linkedHashMap;
    }

    @SinceKotlin(version = "1.5")
    @InlineOnly
    private static final <T, R> R n2(Iterable<? extends T> iterable, d2.l<? super T, ? extends R> transform) {
        R r3;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(transform, "transform");
        Iterator<? extends T> it = iterable.iterator();
        while (true) {
            if (!it.hasNext()) {
                r3 = null;
                break;
            }
            r3 = transform.invoke((T) it.next());
            if (r3 != null) {
                break;
            }
        }
        if (r3 != null) {
            return r3;
        }
        throw new NoSuchElementException("No element of the collection was transformed to a non-null value.");
    }

    @NotNull
    public static final <T, R> List<R> n3(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, ? extends R> transform) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(transform, "transform");
        ArrayList arrayList = new ArrayList();
        for (Object obj : iterable) {
            R invoke = transform.invoke(obj);
            if (invoke != null) {
                arrayList.add(invoke);
            }
        }
        return arrayList;
    }

    @NotNull
    public static final <T> List<T> n4(@NotNull Iterable<? extends T> iterable, @NotNull T[] elements) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(elements, "elements");
        if (iterable instanceof Collection) {
            return r4((Collection) iterable, elements);
        }
        ArrayList arrayList = new ArrayList();
        c0.o0(arrayList, iterable);
        c0.q0(arrayList, elements);
        return arrayList;
    }

    @JvmName(name = "sumOfInt")
    public static int n5(@NotNull Iterable<Integer> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        int i4 = 0;
        for (Integer num : iterable) {
            i4 += num.intValue();
        }
        return i4;
    }

    @NotNull
    public static final <T, K, V> Map<K, V> o1(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, ? extends K> keySelector, @NotNull d2.l<? super T, ? extends V> valueTransform) {
        int Z;
        int j4;
        int n4;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(keySelector, "keySelector");
        kotlin.jvm.internal.f0.p(valueTransform, "valueTransform");
        Z = y.Z(iterable, 10);
        j4 = y0.j(Z);
        n4 = kotlin.ranges.q.n(j4, 16);
        LinkedHashMap linkedHashMap = new LinkedHashMap(n4);
        for (Object obj : iterable) {
            linkedHashMap.put(keySelector.invoke(obj), valueTransform.invoke(obj));
        }
        return linkedHashMap;
    }

    @SinceKotlin(version = "1.5")
    @InlineOnly
    private static final <T, R> R o2(Iterable<? extends T> iterable, d2.l<? super T, ? extends R> transform) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(transform, "transform");
        for (Object obj : iterable) {
            R invoke = transform.invoke(obj);
            if (invoke != null) {
                return invoke;
            }
        }
        return null;
    }

    @NotNull
    public static final <T, R, C extends Collection<? super R>> C o3(@NotNull Iterable<? extends T> iterable, @NotNull C destination, @NotNull d2.l<? super T, ? extends R> transform) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(destination, "destination");
        kotlin.jvm.internal.f0.p(transform, "transform");
        for (Object obj : iterable) {
            R invoke = transform.invoke(obj);
            if (invoke != null) {
                destination.add(invoke);
            }
        }
        return destination;
    }

    @NotNull
    public static <T> List<T> o4(@NotNull Collection<? extends T> collection, @NotNull Iterable<? extends T> elements) {
        kotlin.jvm.internal.f0.p(collection, "<this>");
        kotlin.jvm.internal.f0.p(elements, "elements");
        if (elements instanceof Collection) {
            Collection collection2 = (Collection) elements;
            ArrayList arrayList = new ArrayList(collection.size() + collection2.size());
            arrayList.addAll(collection);
            arrayList.addAll(collection2);
            return arrayList;
        }
        ArrayList arrayList2 = new ArrayList(collection);
        c0.o0(arrayList2, elements);
        return arrayList2;
    }

    @SinceKotlin(version = "1.4")
    @InlineOnly
    @JvmName(name = "sumOfInt")
    @OverloadResolutionByLambdaReturnType
    private static final <T> int o5(Iterable<? extends T> iterable, d2.l<? super T, Integer> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        int i4 = 0;
        for (Object obj : iterable) {
            i4 += selector.invoke(obj).intValue();
        }
        return i4;
    }

    @NotNull
    public static final <T, K, M extends Map<? super K, ? super T>> M p1(@NotNull Iterable<? extends T> iterable, @NotNull M destination, @NotNull d2.l<? super T, ? extends K> keySelector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(destination, "destination");
        kotlin.jvm.internal.f0.p(keySelector, "keySelector");
        for (Object obj : iterable) {
            destination.put(keySelector.invoke(obj), obj);
        }
        return destination;
    }

    @Nullable
    public static <T> T p2(@NotNull Iterable<? extends T> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        if (iterable instanceof List) {
            List list = (List) iterable;
            if (list.isEmpty()) {
                return null;
            }
            return (T) list.get(0);
        }
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            return it.next();
        }
        return null;
    }

    @NotNull
    public static final <T, R, C extends Collection<? super R>> C p3(@NotNull Iterable<? extends T> iterable, @NotNull C destination, @NotNull d2.l<? super T, ? extends R> transform) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(destination, "destination");
        kotlin.jvm.internal.f0.p(transform, "transform");
        for (Object obj : iterable) {
            destination.add(transform.invoke(obj));
        }
        return destination;
    }

    @NotNull
    public static <T> List<T> p4(@NotNull Collection<? extends T> collection, T t3) {
        kotlin.jvm.internal.f0.p(collection, "<this>");
        ArrayList arrayList = new ArrayList(collection.size() + 1);
        arrayList.addAll(collection);
        arrayList.add(t3);
        return arrayList;
    }

    @JvmName(name = "sumOfLong")
    public static final long p5(@NotNull Iterable<Long> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        long j4 = 0;
        for (Long l4 : iterable) {
            j4 += l4.longValue();
        }
        return j4;
    }

    @NotNull
    public static final <T, K, V, M extends Map<? super K, ? super V>> M q1(@NotNull Iterable<? extends T> iterable, @NotNull M destination, @NotNull d2.l<? super T, ? extends K> keySelector, @NotNull d2.l<? super T, ? extends V> valueTransform) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(destination, "destination");
        kotlin.jvm.internal.f0.p(keySelector, "keySelector");
        kotlin.jvm.internal.f0.p(valueTransform, "valueTransform");
        for (Object obj : iterable) {
            destination.put(keySelector.invoke(obj), valueTransform.invoke(obj));
        }
        return destination;
    }

    /* JADX WARN: Type inference failed for: r0v3, types: [T, java.lang.Object] */
    @Nullable
    public static final <T> T q2(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        for (T t3 : iterable) {
            if (predicate.invoke(t3).booleanValue()) {
                return t3;
            }
        }
        return null;
    }

    @Deprecated(message = "Use maxOrNull instead.", replaceWith = @ReplaceWith(expression = "this.maxOrNull()", imports = {}))
    @DeprecatedSinceKotlin(errorSince = "1.5", hiddenSince = "1.6", warningSince = "1.4")
    public static final /* synthetic */ Comparable q3(Iterable iterable) {
        Comparable D3;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        D3 = D3(iterable);
        return D3;
    }

    @NotNull
    public static final <T> List<T> q4(@NotNull Collection<? extends T> collection, @NotNull kotlin.sequences.m<? extends T> elements) {
        kotlin.jvm.internal.f0.p(collection, "<this>");
        kotlin.jvm.internal.f0.p(elements, "elements");
        ArrayList arrayList = new ArrayList(collection.size() + 10);
        arrayList.addAll(collection);
        c0.p0(arrayList, elements);
        return arrayList;
    }

    @SinceKotlin(version = "1.4")
    @InlineOnly
    @JvmName(name = "sumOfLong")
    @OverloadResolutionByLambdaReturnType
    private static final <T> long q5(Iterable<? extends T> iterable, d2.l<? super T, Long> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        long j4 = 0;
        for (Object obj : iterable) {
            j4 += selector.invoke(obj).longValue();
        }
        return j4;
    }

    @NotNull
    public static final <T, K, V, M extends Map<? super K, ? super V>> M r1(@NotNull Iterable<? extends T> iterable, @NotNull M destination, @NotNull d2.l<? super T, ? extends Pair<? extends K, ? extends V>> transform) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(destination, "destination");
        kotlin.jvm.internal.f0.p(transform, "transform");
        for (Object obj : iterable) {
            Pair<? extends K, ? extends V> invoke = transform.invoke(obj);
            destination.put(invoke.getFirst(), invoke.getSecond());
        }
        return destination;
    }

    @Nullable
    public static <T> T r2(@NotNull List<? extends T> list) {
        kotlin.jvm.internal.f0.p(list, "<this>");
        if (list.isEmpty()) {
            return null;
        }
        return list.get(0);
    }

    @Deprecated(message = "Use maxOrNull instead.", replaceWith = @ReplaceWith(expression = "this.maxOrNull()", imports = {}))
    @SinceKotlin(version = "1.1")
    @DeprecatedSinceKotlin(errorSince = "1.5", hiddenSince = "1.6", warningSince = "1.4")
    public static final /* synthetic */ Double r3(Iterable iterable) {
        Double E3;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        E3 = E3(iterable);
        return E3;
    }

    @NotNull
    public static final <T> List<T> r4(@NotNull Collection<? extends T> collection, @NotNull T[] elements) {
        kotlin.jvm.internal.f0.p(collection, "<this>");
        kotlin.jvm.internal.f0.p(elements, "elements");
        ArrayList arrayList = new ArrayList(collection.size() + elements.length);
        arrayList.addAll(collection);
        c0.q0(arrayList, elements);
        return arrayList;
    }

    @JvmName(name = "sumOfShort")
    public static final int r5(@NotNull Iterable<Short> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        int i4 = 0;
        for (Short sh : iterable) {
            i4 += sh.shortValue();
        }
        return i4;
    }

    /* JADX WARN: Multi-variable type inference failed */
    @SinceKotlin(version = "1.3")
    @NotNull
    public static final <K, V> Map<K, V> s1(@NotNull Iterable<? extends K> iterable, @NotNull d2.l<? super K, ? extends V> valueSelector) {
        int Z;
        int j4;
        int n4;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(valueSelector, "valueSelector");
        Z = y.Z(iterable, 10);
        j4 = y0.j(Z);
        n4 = kotlin.ranges.q.n(j4, 16);
        LinkedHashMap linkedHashMap = new LinkedHashMap(n4);
        for (Object obj : iterable) {
            linkedHashMap.put(obj, valueSelector.invoke(obj));
        }
        return linkedHashMap;
    }

    @NotNull
    public static final <T, R> List<R> s2(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, ? extends Iterable<? extends R>> transform) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(transform, "transform");
        ArrayList arrayList = new ArrayList();
        for (Object obj : iterable) {
            c0.o0(arrayList, transform.invoke(obj));
        }
        return arrayList;
    }

    @Deprecated(message = "Use maxOrNull instead.", replaceWith = @ReplaceWith(expression = "this.maxOrNull()", imports = {}))
    @SinceKotlin(version = "1.1")
    @DeprecatedSinceKotlin(errorSince = "1.5", hiddenSince = "1.6", warningSince = "1.4")
    public static final /* synthetic */ Float s3(Iterable iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        return F3(iterable);
    }

    @InlineOnly
    private static final <T> List<T> s4(Iterable<? extends T> iterable, T t3) {
        List<T> l4;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        l4 = l4(iterable, t3);
        return l4;
    }

    @SinceKotlin(version = "1.5")
    @InlineOnly
    @JvmName(name = "sumOfUInt")
    @OverloadResolutionByLambdaReturnType
    @WasExperimental(markerClass = {ExperimentalUnsignedTypes.class})
    private static final <T> int s5(Iterable<? extends T> iterable, d2.l<? super T, kotlin.r0> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        int i4 = kotlin.r0.i(0);
        for (Object obj : iterable) {
            i4 = kotlin.r0.i(i4 + selector.invoke(obj).l0());
        }
        return i4;
    }

    /* JADX WARN: Multi-variable type inference failed */
    @SinceKotlin(version = "1.3")
    @NotNull
    public static final <K, V, M extends Map<? super K, ? super V>> M t1(@NotNull Iterable<? extends K> iterable, @NotNull M destination, @NotNull d2.l<? super K, ? extends V> valueSelector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(destination, "destination");
        kotlin.jvm.internal.f0.p(valueSelector, "valueSelector");
        for (Object obj : iterable) {
            destination.put(obj, valueSelector.invoke(obj));
        }
        return destination;
    }

    @SinceKotlin(version = "1.4")
    @InlineOnly
    @JvmName(name = "flatMapIndexedIterable")
    @OverloadResolutionByLambdaReturnType
    private static final <T, R> List<R> t2(Iterable<? extends T> iterable, d2.p<? super Integer, ? super T, ? extends Iterable<? extends R>> transform) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(transform, "transform");
        ArrayList arrayList = new ArrayList();
        int i4 = 0;
        for (Object obj : iterable) {
            int i5 = i4 + 1;
            if (i4 < 0) {
                CollectionsKt__CollectionsKt.X();
            }
            c0.o0(arrayList, transform.invoke(Integer.valueOf(i4), obj));
            i4 = i5;
        }
        return arrayList;
    }

    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Type inference failed for: r0v12 */
    /* JADX WARN: Type inference failed for: r0v13 */
    /* JADX WARN: Type inference failed for: r0v3, types: [java.lang.Object] */
    /* JADX WARN: Type inference failed for: r0v5 */
    /* JADX WARN: Type inference failed for: r0v7 */
    /* JADX WARN: Type inference failed for: r2v0, types: [java.lang.Object] */
    @Deprecated(message = "Use maxByOrNull instead.", replaceWith = @ReplaceWith(expression = "this.maxByOrNull(selector)", imports = {}))
    @DeprecatedSinceKotlin(errorSince = "1.5", hiddenSince = "1.6", warningSince = "1.4")
    public static final /* synthetic */ <T, R extends Comparable<? super R>> T t3(Iterable<? extends T> iterable, d2.l<? super T, ? extends R> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            T next = it.next();
            if (it.hasNext()) {
                R invoke = selector.invoke(next);
                boolean z3 = next;
                do {
                    T next2 = it.next();
                    R invoke2 = selector.invoke(next2);
                    next = z3;
                    if (invoke.compareTo(invoke2) < 0) {
                        invoke = invoke2;
                        next = next2;
                    }
                    z3 = next;
                } while (it.hasNext());
                return next;
            }
            return next;
        }
        return null;
    }

    @InlineOnly
    private static final <T> List<T> t4(Collection<? extends T> collection, T t3) {
        List<T> p4;
        kotlin.jvm.internal.f0.p(collection, "<this>");
        p4 = p4(collection, t3);
        return p4;
    }

    @SinceKotlin(version = "1.5")
    @InlineOnly
    @JvmName(name = "sumOfULong")
    @OverloadResolutionByLambdaReturnType
    @WasExperimental(markerClass = {ExperimentalUnsignedTypes.class})
    private static final <T> long t5(Iterable<? extends T> iterable, d2.l<? super T, kotlin.v0> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        long i4 = kotlin.v0.i(0);
        for (Object obj : iterable) {
            i4 = kotlin.v0.i(i4 + selector.invoke(obj).l0());
        }
        return i4;
    }

    @JvmName(name = "averageOfByte")
    public static final double u1(@NotNull Iterable<Byte> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        double d4 = 0.0d;
        int i4 = 0;
        for (Byte b4 : iterable) {
            double byteValue = b4.byteValue();
            Double.isNaN(byteValue);
            d4 += byteValue;
            i4++;
            if (i4 < 0) {
                CollectionsKt__CollectionsKt.W();
            }
        }
        if (i4 == 0) {
            return Double.NaN;
        }
        double d5 = i4;
        Double.isNaN(d5);
        return d4 / d5;
    }

    @SinceKotlin(version = "1.4")
    @InlineOnly
    @JvmName(name = "flatMapIndexedIterableTo")
    @OverloadResolutionByLambdaReturnType
    private static final <T, R, C extends Collection<? super R>> C u2(Iterable<? extends T> iterable, C destination, d2.p<? super Integer, ? super T, ? extends Iterable<? extends R>> transform) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(destination, "destination");
        kotlin.jvm.internal.f0.p(transform, "transform");
        int i4 = 0;
        for (Object obj : iterable) {
            int i5 = i4 + 1;
            if (i4 < 0) {
                CollectionsKt__CollectionsKt.X();
            }
            c0.o0(destination, transform.invoke(Integer.valueOf(i4), obj));
            i4 = i5;
        }
        return destination;
    }

    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Type inference failed for: r0v3, types: [T, java.lang.Object] */
    @SinceKotlin(version = "1.4")
    @Nullable
    public static final <T, R extends Comparable<? super R>> T u3(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, ? extends R> selector) {
        T t3;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            T next = it.next();
            if (it.hasNext()) {
                R invoke = selector.invoke(next);
                T t4 = next;
                do {
                    T next2 = it.next();
                    R invoke2 = selector.invoke(next2);
                    t3 = t4;
                    if (invoke.compareTo(invoke2) < 0) {
                        invoke = invoke2;
                        t3 = next2;
                    }
                    t4 = t3;
                } while (it.hasNext());
                return t3;
            }
            return next;
        }
        return null;
    }

    @SinceKotlin(version = "1.3")
    @InlineOnly
    private static final <T> T u4(Collection<? extends T> collection) {
        kotlin.jvm.internal.f0.p(collection, "<this>");
        return (T) v4(collection, Random.Default);
    }

    @NotNull
    public static final <T> List<T> u5(@NotNull Iterable<? extends T> iterable, int i4) {
        List<T> R;
        Object k22;
        List<T> l4;
        List<T> G5;
        List<T> F;
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        int i5 = 0;
        if (!(i4 >= 0)) {
            throw new IllegalArgumentException(("Requested element count " + i4 + " is less than zero.").toString());
        } else if (i4 == 0) {
            F = CollectionsKt__CollectionsKt.F();
            return F;
        } else {
            if (iterable instanceof Collection) {
                if (i4 >= ((Collection) iterable).size()) {
                    G5 = G5(iterable);
                    return G5;
                } else if (i4 == 1) {
                    k22 = k2(iterable);
                    l4 = x.l(k22);
                    return l4;
                }
            }
            ArrayList arrayList = new ArrayList(i4);
            for (T t3 : iterable) {
                arrayList.add(t3);
                i5++;
                if (i5 == i4) {
                    break;
                }
            }
            R = CollectionsKt__CollectionsKt.R(arrayList);
            return R;
        }
    }

    @JvmName(name = "averageOfDouble")
    public static double v1(@NotNull Iterable<Double> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        double d4 = 0.0d;
        int i4 = 0;
        for (Double d5 : iterable) {
            d4 += d5.doubleValue();
            i4++;
            if (i4 < 0) {
                CollectionsKt__CollectionsKt.W();
            }
        }
        if (i4 == 0) {
            return Double.NaN;
        }
        double d6 = i4;
        Double.isNaN(d6);
        return d4 / d6;
    }

    @SinceKotlin(version = "1.4")
    @InlineOnly
    @JvmName(name = "flatMapIndexedSequence")
    @OverloadResolutionByLambdaReturnType
    private static final <T, R> List<R> v2(Iterable<? extends T> iterable, d2.p<? super Integer, ? super T, ? extends kotlin.sequences.m<? extends R>> transform) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(transform, "transform");
        ArrayList arrayList = new ArrayList();
        int i4 = 0;
        for (Object obj : iterable) {
            int i5 = i4 + 1;
            if (i4 < 0) {
                CollectionsKt__CollectionsKt.X();
            }
            c0.p0(arrayList, transform.invoke(Integer.valueOf(i4), obj));
            i4 = i5;
        }
        return arrayList;
    }

    @SinceKotlin(version = "1.4")
    @OverloadResolutionByLambdaReturnType
    @InlineOnly
    private static final <T> double v3(Iterable<? extends T> iterable, d2.l<? super T, Double> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            double doubleValue = selector.invoke((T) it.next()).doubleValue();
            while (it.hasNext()) {
                doubleValue = Math.max(doubleValue, selector.invoke((T) it.next()).doubleValue());
            }
            return doubleValue;
        }
        throw new NoSuchElementException();
    }

    @SinceKotlin(version = "1.3")
    public static final <T> T v4(@NotNull Collection<? extends T> collection, @NotNull Random random) {
        kotlin.jvm.internal.f0.p(collection, "<this>");
        kotlin.jvm.internal.f0.p(random, "random");
        if (!collection.isEmpty()) {
            return (T) R1(collection, random.nextInt(collection.size()));
        }
        throw new NoSuchElementException("Collection is empty.");
    }

    @NotNull
    public static <T> List<T> v5(@NotNull List<? extends T> list, int i4) {
        Object a32;
        List<T> l4;
        List<T> G5;
        List<T> F;
        kotlin.jvm.internal.f0.p(list, "<this>");
        if (!(i4 >= 0)) {
            throw new IllegalArgumentException(("Requested element count " + i4 + " is less than zero.").toString());
        } else if (i4 == 0) {
            F = CollectionsKt__CollectionsKt.F();
            return F;
        } else {
            int size = list.size();
            if (i4 >= size) {
                G5 = G5(list);
                return G5;
            } else if (i4 == 1) {
                a32 = a3(list);
                l4 = x.l(a32);
                return l4;
            } else {
                ArrayList arrayList = new ArrayList(i4);
                if (list instanceof RandomAccess) {
                    for (int i5 = size - i4; i5 < size; i5++) {
                        arrayList.add(list.get(i5));
                    }
                } else {
                    ListIterator<? extends T> listIterator = list.listIterator(size - i4);
                    while (listIterator.hasNext()) {
                        arrayList.add(listIterator.next());
                    }
                }
                return arrayList;
            }
        }
    }

    @JvmName(name = "averageOfFloat")
    public static final double w1(@NotNull Iterable<Float> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        double d4 = 0.0d;
        int i4 = 0;
        for (Float f4 : iterable) {
            double floatValue = f4.floatValue();
            Double.isNaN(floatValue);
            d4 += floatValue;
            i4++;
            if (i4 < 0) {
                CollectionsKt__CollectionsKt.W();
            }
        }
        if (i4 == 0) {
            return Double.NaN;
        }
        double d5 = i4;
        Double.isNaN(d5);
        return d4 / d5;
    }

    @SinceKotlin(version = "1.4")
    @InlineOnly
    @JvmName(name = "flatMapIndexedSequenceTo")
    @OverloadResolutionByLambdaReturnType
    private static final <T, R, C extends Collection<? super R>> C w2(Iterable<? extends T> iterable, C destination, d2.p<? super Integer, ? super T, ? extends kotlin.sequences.m<? extends R>> transform) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(destination, "destination");
        kotlin.jvm.internal.f0.p(transform, "transform");
        int i4 = 0;
        for (Object obj : iterable) {
            int i5 = i4 + 1;
            if (i4 < 0) {
                CollectionsKt__CollectionsKt.X();
            }
            c0.p0(destination, transform.invoke(Integer.valueOf(i4), obj));
            i4 = i5;
        }
        return destination;
    }

    @SinceKotlin(version = "1.4")
    @OverloadResolutionByLambdaReturnType
    @InlineOnly
    private static final <T> float w3(Iterable<? extends T> iterable, d2.l<? super T, Float> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            float floatValue = selector.invoke((T) it.next()).floatValue();
            while (it.hasNext()) {
                floatValue = Math.max(floatValue, selector.invoke((T) it.next()).floatValue());
            }
            return floatValue;
        }
        throw new NoSuchElementException();
    }

    @SinceKotlin(version = "1.4")
    @WasExperimental(markerClass = {ExperimentalStdlibApi.class})
    @InlineOnly
    private static final <T> T w4(Collection<? extends T> collection) {
        kotlin.jvm.internal.f0.p(collection, "<this>");
        return (T) x4(collection, Random.Default);
    }

    @NotNull
    public static final <T> List<T> w5(@NotNull List<? extends T> list, @NotNull d2.l<? super T, Boolean> predicate) {
        List<T> G5;
        List<T> F;
        List<T> F2;
        kotlin.jvm.internal.f0.p(list, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        if (list.isEmpty()) {
            F2 = CollectionsKt__CollectionsKt.F();
            return F2;
        }
        ListIterator<? extends T> listIterator = list.listIterator(list.size());
        while (listIterator.hasPrevious()) {
            if (!predicate.invoke((T) listIterator.previous()).booleanValue()) {
                listIterator.next();
                int size = list.size() - listIterator.nextIndex();
                if (size == 0) {
                    F = CollectionsKt__CollectionsKt.F();
                    return F;
                }
                ArrayList arrayList = new ArrayList(size);
                while (listIterator.hasNext()) {
                    arrayList.add(listIterator.next());
                }
                return arrayList;
            }
        }
        G5 = G5(list);
        return G5;
    }

    @JvmName(name = "averageOfInt")
    public static double x1(@NotNull Iterable<Integer> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        double d4 = 0.0d;
        int i4 = 0;
        for (Integer num : iterable) {
            double intValue = num.intValue();
            Double.isNaN(intValue);
            d4 += intValue;
            i4++;
            if (i4 < 0) {
                CollectionsKt__CollectionsKt.W();
            }
        }
        if (i4 == 0) {
            return Double.NaN;
        }
        double d5 = i4;
        Double.isNaN(d5);
        return d4 / d5;
    }

    @SinceKotlin(version = "1.4")
    @JvmName(name = "flatMapSequence")
    @NotNull
    @OverloadResolutionByLambdaReturnType
    public static final <T, R> List<R> x2(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, ? extends kotlin.sequences.m<? extends R>> transform) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(transform, "transform");
        ArrayList arrayList = new ArrayList();
        for (Object obj : iterable) {
            c0.p0(arrayList, transform.invoke(obj));
        }
        return arrayList;
    }

    @SinceKotlin(version = "1.4")
    @OverloadResolutionByLambdaReturnType
    @InlineOnly
    private static final <T, R extends Comparable<? super R>> R x3(Iterable<? extends T> iterable, d2.l<? super T, ? extends R> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            R invoke = selector.invoke((T) it.next());
            while (it.hasNext()) {
                R invoke2 = selector.invoke((T) it.next());
                if (invoke.compareTo(invoke2) < 0) {
                    invoke = invoke2;
                }
            }
            return invoke;
        }
        throw new NoSuchElementException();
    }

    @SinceKotlin(version = "1.4")
    @WasExperimental(markerClass = {ExperimentalStdlibApi.class})
    @Nullable
    public static final <T> T x4(@NotNull Collection<? extends T> collection, @NotNull Random random) {
        kotlin.jvm.internal.f0.p(collection, "<this>");
        kotlin.jvm.internal.f0.p(random, "random");
        if (collection.isEmpty()) {
            return null;
        }
        return (T) R1(collection, random.nextInt(collection.size()));
    }

    @NotNull
    public static final <T> List<T> x5(@NotNull Iterable<? extends T> iterable, @NotNull d2.l<? super T, Boolean> predicate) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(predicate, "predicate");
        ArrayList arrayList = new ArrayList();
        for (Object obj : iterable) {
            if (!predicate.invoke(obj).booleanValue()) {
                break;
            }
            arrayList.add(obj);
        }
        return arrayList;
    }

    @JvmName(name = "averageOfLong")
    public static final double y1(@NotNull Iterable<Long> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        double d4 = 0.0d;
        int i4 = 0;
        for (Long l4 : iterable) {
            double longValue = l4.longValue();
            Double.isNaN(longValue);
            d4 += longValue;
            i4++;
            if (i4 < 0) {
                CollectionsKt__CollectionsKt.W();
            }
        }
        if (i4 == 0) {
            return Double.NaN;
        }
        double d5 = i4;
        Double.isNaN(d5);
        return d4 / d5;
    }

    @SinceKotlin(version = "1.4")
    @JvmName(name = "flatMapSequenceTo")
    @NotNull
    @OverloadResolutionByLambdaReturnType
    public static final <T, R, C extends Collection<? super R>> C y2(@NotNull Iterable<? extends T> iterable, @NotNull C destination, @NotNull d2.l<? super T, ? extends kotlin.sequences.m<? extends R>> transform) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(destination, "destination");
        kotlin.jvm.internal.f0.p(transform, "transform");
        for (Object obj : iterable) {
            c0.p0(destination, transform.invoke(obj));
        }
        return destination;
    }

    @SinceKotlin(version = "1.4")
    @OverloadResolutionByLambdaReturnType
    @InlineOnly
    private static final <T, R extends Comparable<? super R>> R y3(Iterable<? extends T> iterable, d2.l<? super T, ? extends R> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            R invoke = selector.invoke((T) it.next());
            while (it.hasNext()) {
                R invoke2 = selector.invoke((T) it.next());
                if (invoke.compareTo(invoke2) < 0) {
                    invoke = invoke2;
                }
            }
            return invoke;
        }
        return null;
    }

    public static final <S, T extends S> S y4(@NotNull Iterable<? extends T> iterable, @NotNull d2.p<? super S, ? super T, ? extends S> operation) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(operation, "operation");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            Object obj = (T) it.next();
            while (it.hasNext()) {
                obj = (S) operation.invoke(obj, (T) it.next());
            }
            return (S) obj;
        }
        throw new UnsupportedOperationException("Empty collection can't be reduced.");
    }

    @NotNull
    public static final boolean[] y5(@NotNull Collection<Boolean> collection) {
        kotlin.jvm.internal.f0.p(collection, "<this>");
        boolean[] zArr = new boolean[collection.size()];
        int i4 = 0;
        for (Boolean bool : collection) {
            zArr[i4] = bool.booleanValue();
            i4++;
        }
        return zArr;
    }

    @JvmName(name = "averageOfShort")
    public static final double z1(@NotNull Iterable<Short> iterable) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        double d4 = 0.0d;
        int i4 = 0;
        for (Short sh : iterable) {
            double shortValue = sh.shortValue();
            Double.isNaN(shortValue);
            d4 += shortValue;
            i4++;
            if (i4 < 0) {
                CollectionsKt__CollectionsKt.W();
            }
        }
        if (i4 == 0) {
            return Double.NaN;
        }
        double d5 = i4;
        Double.isNaN(d5);
        return d4 / d5;
    }

    @NotNull
    public static final <T, R, C extends Collection<? super R>> C z2(@NotNull Iterable<? extends T> iterable, @NotNull C destination, @NotNull d2.l<? super T, ? extends Iterable<? extends R>> transform) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(destination, "destination");
        kotlin.jvm.internal.f0.p(transform, "transform");
        for (Object obj : iterable) {
            c0.o0(destination, transform.invoke(obj));
        }
        return destination;
    }

    @SinceKotlin(version = "1.4")
    @OverloadResolutionByLambdaReturnType
    @InlineOnly
    private static final <T> Double z3(Iterable<? extends T> iterable, d2.l<? super T, Double> selector) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(selector, "selector");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            double doubleValue = selector.invoke((T) it.next()).doubleValue();
            while (it.hasNext()) {
                doubleValue = Math.max(doubleValue, selector.invoke((T) it.next()).doubleValue());
            }
            return Double.valueOf(doubleValue);
        }
        return null;
    }

    public static final <S, T extends S> S z4(@NotNull Iterable<? extends T> iterable, @NotNull d2.q<? super Integer, ? super S, ? super T, ? extends S> operation) {
        kotlin.jvm.internal.f0.p(iterable, "<this>");
        kotlin.jvm.internal.f0.p(operation, "operation");
        Iterator<? extends T> it = iterable.iterator();
        if (it.hasNext()) {
            Object obj = (T) it.next();
            int i4 = 1;
            while (it.hasNext()) {
                int i5 = i4 + 1;
                if (i4 < 0) {
                    CollectionsKt__CollectionsKt.X();
                }
                obj = (S) operation.invoke(Integer.valueOf(i4), obj, (T) it.next());
                i4 = i5;
            }
            return (S) obj;
        }
        throw new UnsupportedOperationException("Empty collection can't be reduced.");
    }

    @NotNull
    public static byte[] z5(@NotNull Collection<Byte> collection) {
        kotlin.jvm.internal.f0.p(collection, "<this>");
        byte[] bArr = new byte[collection.size()];
        int i4 = 0;
        for (Byte b4 : collection) {
            bArr[i4] = b4.byteValue();
            i4++;
        }
        return bArr;
    }
}
