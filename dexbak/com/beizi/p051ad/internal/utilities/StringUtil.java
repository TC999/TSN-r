package com.beizi.p051ad.internal.utilities;

import android.content.res.Resources;
import android.graphics.Rect;
import android.text.TextUtils;
import android.util.Base64;
import android.util.Log;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.Nullable;
import com.baidu.idl.face.platform.FaceEnvironment;
import com.baidu.mobads.sdk.api.IAdInterListener;
import com.beizi.p051ad.alipay.model.AliPayEventBean;
import com.beizi.p051ad.internal.BeiZiImpl;
import com.beizi.p051ad.lance.p062a.AesUtil;
import com.beizi.p051ad.lance.p062a.C3019b;
import com.beizi.p051ad.lance.p062a.KeyGenerator;
import com.beizi.p051ad.lance.p062a.LogUtil;
import com.beizi.p051ad.lance.p062a.SystemUtil;
import com.beizi.p051ad.p056c.EnumType;
import com.kuaishou.weapon.p205p0.C7304t;
import com.umeng.analytics.pro.UMCommonContent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.UnsupportedEncodingException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Formatter;
import java.util.Scanner;
import java.util.UUID;
import java.util.zip.GZIPInputStream;
import java.util.zip.GZIPOutputStream;
import kotlin.UByte;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.slf4j.Marker;

/* renamed from: com.beizi.ad.internal.utilities.StringUtil */
/* loaded from: E:\fuckcool\tsn\7241516.dex */
public class StringUtil {
    public static String adscopeJSStr = "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";
    public static String adscopeNetStr = "062GAtgU5Usoz/Oa8K2+LQ==";
    public static String adscopeStr = "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";

    public static boolean appendLocalStr(StringBuilder sb, String str) {
        String m49090b = AesUtil.m49090b(KeyGenerator.m49047a(), str);
        if (m49090b != null) {
            sb.append(m49090b);
            return true;
        }
        return false;
    }

    public static boolean appendRes(StringBuilder sb, Resources resources, int i) {
        Scanner useDelimiter = new Scanner(resources.openRawResource(i), "UTF-8").useDelimiter("\\A");
        if (useDelimiter.hasNext()) {
            sb.append(useDelimiter.next());
            useDelimiter.close();
            return true;
        }
        useDelimiter.close();
        return false;
    }

    private static String byteToHex(byte[] bArr) {
        Formatter formatter = new Formatter();
        int length = bArr.length;
        for (int i = 0; i < length; i++) {
            formatter.format("%02x", Byte.valueOf(bArr[i]));
        }
        String formatter2 = formatter.toString();
        formatter.close();
        return formatter2;
    }

    private static String compressForGzip(String str) {
        if (TextUtils.isEmpty(str)) {
            return "";
        }
        try {
            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
            GZIPOutputStream gZIPOutputStream = new GZIPOutputStream(byteArrayOutputStream);
            gZIPOutputStream.write(str.getBytes());
            gZIPOutputStream.close();
            byte[] byteArray = byteArrayOutputStream.toByteArray();
            byteArrayOutputStream.flush();
            byteArrayOutputStream.close();
            return Base64.encodeToString(byteArray, 2);
        } catch (Exception e) {
            e.printStackTrace();
            return "";
        }
    }

    public static String createRequestId() {
        String md5 = md5(UUID.randomUUID().toString());
        LogUtil.m49046a("lance", "createRequestId:" + md5);
        return md5;
    }

    public static String decompressForGzip(String str) {
        if (TextUtils.isEmpty(str)) {
            return null;
        }
        try {
            byte[] decode = Base64.decode(str, 0);
            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
            ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(decode);
            GZIPInputStream gZIPInputStream = new GZIPInputStream(byteArrayInputStream);
            byte[] bArr = new byte[1024];
            while (true) {
                int read = gZIPInputStream.read(bArr, 0, 1024);
                if (read > 0) {
                    byteArrayOutputStream.write(bArr, 0, read);
                } else {
                    gZIPInputStream.close();
                    byteArrayInputStream.close();
                    byteArrayOutputStream.close();
                    return byteArrayOutputStream.toString();
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    private static int indexOfViewInParent(View view, ViewGroup viewGroup) {
        int i = 0;
        while (i < viewGroup.getChildCount() && viewGroup.getChildAt(i) != view) {
            i++;
        }
        return i;
    }

    public static boolean isEmpty(@Nullable String str) {
        return str == null || str.length() == 0;
    }

    private static boolean isViewCovered(View view) {
        if (view != null && view.getParent() != null) {
            try {
                Rect rect = new Rect();
                if (view.getGlobalVisibleRect(rect) && (rect.bottom - rect.top >= view.getMeasuredHeight()) && (rect.right - rect.left >= view.getMeasuredWidth())) {
                    ViewGroup viewGroup = view;
                    while (viewGroup.getParent() instanceof ViewGroup) {
                        ViewGroup viewGroup2 = (ViewGroup) viewGroup.getParent();
                        if (viewGroup2.getVisibility() != 0) {
                            return true;
                        }
                        for (int indexOfViewInParent = indexOfViewInParent(viewGroup, viewGroup2) + 1; indexOfViewInParent < viewGroup2.getChildCount(); indexOfViewInParent++) {
                            Rect rect2 = new Rect();
                            view.getGlobalVisibleRect(rect2);
                            View childAt = viewGroup2.getChildAt(indexOfViewInParent);
                            Rect rect3 = new Rect();
                            childAt.getGlobalVisibleRect(rect3);
                            if (Rect.intersects(rect2, rect3)) {
                                return true;
                            }
                        }
                        viewGroup = viewGroup2;
                    }
                    return false;
                }
                return true;
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return false;
    }

    public static boolean isVisible(View view) {
        if (view != null && view.getVisibility() == 0 && view.getParent() != null) {
            try {
                Rect rect = new Rect();
                if (view.getGlobalVisibleRect(rect)) {
                    int height = rect.height() * rect.width();
                    int height2 = view.getHeight() * view.getWidth();
                    return height2 > 0 && height * 100 >= height2 * 50;
                }
                return false;
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return false;
    }

    public static String md5(String str) {
        try {
            byte[] digest = MessageDigest.getInstance("MD5").digest(str.getBytes("UTF-8"));
            StringBuilder sb = new StringBuilder(digest.length * 2);
            for (byte b : digest) {
                int i = b & UByte.f41242c;
                if (i < 16) {
                    sb.append("0");
                }
                sb.append(Integer.toHexString(i));
            }
            return sb.toString();
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException("UnsupportedEncodingException", e);
        } catch (NoSuchAlgorithmException e2) {
            throw new RuntimeException("NoSuchAlgorithmException", e2);
        }
    }

    public static String replaceALiPay(String str, AliPayEventBean aliPayEventBean) {
        if (aliPayEventBean != null) {
            try {
                if (!TextUtils.isEmpty(aliPayEventBean.getAppUserId())) {
                    str = str.replace("__APP_USERID__", aliPayEventBean.getAppUserId());
                }
                if (!TextUtils.isEmpty(aliPayEventBean.getAppOrderId())) {
                    str = str.replace("__APP_ORDERID__", aliPayEventBean.getAppOrderId());
                }
                if (!TextUtils.isEmpty(aliPayEventBean.getTransAmount())) {
                    str = str.replace("__TRANS_AMOUNT__", aliPayEventBean.getTransAmount());
                }
                if (!TextUtils.isEmpty(aliPayEventBean.getIncentiveConfigVersion())) {
                    str = str.replace("__INCENTIVECONFIGVERSION__", aliPayEventBean.getIncentiveConfigVersion());
                }
                return !TextUtils.isEmpty(aliPayEventBean.getAuthCode()) ? str.replace("__AUTH_CODE__", aliPayEventBean.getAuthCode()) : str;
            } catch (Exception e) {
                e.printStackTrace();
                Log.d("BeiZisAd", "info:" + e.getMessage());
                return str;
            } catch (Throwable th) {
                th.printStackTrace();
                return str;
            }
        }
        return str;
    }

    public static String replaceClick(View view, String str) {
        if (!TextUtils.isEmpty(str) && view != null) {
            JSONObject jSONObject = new JSONObject();
            try {
                jSONObject.put("viewSecond", String.valueOf(0));
                JSONObject jSONObject2 = new JSONObject();
                jSONObject2.put(UMCommonContent.f37782aL, String.valueOf(view.getTop()));
                jSONObject2.put(C7304t.f25048d, String.valueOf(view.getLeft()));
                jSONObject2.put(IAdInterListener.AdReqParam.WIDTH, String.valueOf(view.getWidth()));
                jSONObject2.put("h", String.valueOf(view.getHeight()));
                jSONObject2.put("a", String.valueOf(view.getAlpha()));
                jSONObject2.put("v", String.valueOf(isVisible(view)));
                jSONObject2.put("s", String.valueOf(isViewCovered(view)));
                jSONObject.put("pos", jSONObject2);
                JSONObject jSONObject3 = new JSONObject();
                jSONObject3.put(IAdInterListener.AdReqParam.WIDTH, SystemUtil.m49027f(view.getContext()));
                jSONObject3.put("h", SystemUtil.m49025h(view.getContext()));
                jSONObject3.put("o", SystemUtil.m49021l(view.getContext()));
                jSONObject.put("screen", jSONObject3);
                jSONObject.put("spaces", new JSONArray());
                LogUtil.m49046a("adscope", "webView:" + jSONObject.toString());
                return str.replace(".UTC_TS.", String.valueOf(System.currentTimeMillis())).replace("__VT__", compressForGzip(jSONObject.toString()).replace(Marker.ANY_NON_NULL_MARKER, "-").replace("/", "_").replace("=", "."));
            } catch (JSONException e) {
                e.printStackTrace();
            }
        }
        return str;
    }

    public static String replaceM(String str, String str2, String str3, String str4, String str5, String str6, String str7, String str8, String str9, String str10) {
        int indexOf = str.indexOf("?") + 1;
        String substring = str.substring(0, indexOf);
        String substring2 = str.substring(indexOf);
        try {
            DeviceInfo deviceInfo = DeviceInfo.getInstance();
            UserEnvInfo userEnvInfo = UserEnvInfo.getInstance();
            if (!TextUtils.isEmpty(str2)) {
                substring2 = substring2.replace("__REQUESTUUID__", str2);
            }
            if (!TextUtils.isEmpty(str3)) {
                substring2 = substring2.replace("__EVENTTYPE__", str3);
            }
            if (!TextUtils.isEmpty(str4)) {
                substring2 = substring2.replace("__APPID__", str4);
            }
            if (!TextUtils.isEmpty(str5)) {
                substring2 = substring2.replace("__SPACEID__", str5);
            }
            if (!TextUtils.isEmpty(str6)) {
                substring2 = substring2.replace("__CHANNELID__", str6);
            }
            if (!TextUtils.isEmpty(str7)) {
                substring2 = substring2.replace("__CHANNELAPPID__", str7);
            }
            if (!TextUtils.isEmpty(str8)) {
                substring2 = substring2.replace("__CHANNELSPACEID__", str8);
            }
            if (!TextUtils.isEmpty(str9)) {
                substring2 = substring2.replace("__ERRINFO__", str9);
            }
            if (!TextUtils.isEmpty("3.5.0.5")) {
                substring2 = substring2.replace("__SDKVERSION__", "3.5.0.5");
            }
            if (!TextUtils.isEmpty(str10)) {
                substring2 = substring2.replace("__APPVERSION__", str10);
            }
            if (!TextUtils.isEmpty(String.valueOf(System.currentTimeMillis()))) {
                substring2 = substring2.replace("__TS__", String.valueOf(System.currentTimeMillis()));
            }
            if (!TextUtils.isEmpty(userEnvInfo.f10420ip)) {
                substring2 = substring2.replace("__IP__", userEnvInfo.f10420ip);
            }
            EnumType.EnumC2814c enumC2814c = userEnvInfo.isp;
            if (enumC2814c != null && !TextUtils.isEmpty(String.valueOf(enumC2814c.m49787a()))) {
                substring2 = substring2.replace("__CARRIER__", String.valueOf(userEnvInfo.isp.m49787a()));
            }
            EnumType.EnumC2815d enumC2815d = userEnvInfo.f47179net;
            if (enumC2815d != null && !TextUtils.isEmpty(String.valueOf(enumC2815d.m49786a()))) {
                substring2 = substring2.replace("__NETTYPE__", String.valueOf(userEnvInfo.f47179net.m49786a()));
            }
            if (!TextUtils.isEmpty(deviceInfo.sdkUID)) {
                substring2 = substring2.replace("__UID__", deviceInfo.sdkUID);
            }
            if (!TextUtils.isEmpty(BeiZiImpl.m49492a().f10137d)) {
                substring2 = substring2.replace("__UA__", BeiZiImpl.m49492a().f10137d);
            }
        } catch (Exception e) {
            e.printStackTrace();
        } catch (Throwable th) {
            th.printStackTrace();
        }
        String encodeToString = Base64.encodeToString(substring2.getBytes(), 2);
        String md5 = md5(encodeToString);
        StringBuilder sb = new StringBuilder(encodeToString);
        sb.insert(13, md5.substring(0, 5));
        String sb2 = sb.toString();
        return substring + "info=" + sb2;
    }

    public static String replaceR(String str) {
        try {
            return str.replace("__UID__", DeviceInfo.getInstance().sdkUID).replace("__TS__", String.valueOf(System.currentTimeMillis() / 1000)).replace("__PLATFORM__", FaceEnvironment.f8430OS).replace("__DEVICE__", "phone").replace("__IP__", UserEnvInfo.getInstance().f10420ip).replace("__UA__", BeiZiImpl.m49492a().f10137d);
        } catch (Exception e) {
            e.printStackTrace();
            return str;
        }
    }

    public static String replaceView(int i, View view, String str) {
        if (!TextUtils.isEmpty(str)) {
            JSONObject jSONObject = new JSONObject();
            try {
                jSONObject.put("viewSecond", String.valueOf(i));
                JSONObject jSONObject2 = new JSONObject();
                jSONObject2.put(UMCommonContent.f37782aL, String.valueOf(view.getTop()));
                jSONObject2.put(C7304t.f25048d, String.valueOf(view.getLeft()));
                jSONObject2.put(IAdInterListener.AdReqParam.WIDTH, String.valueOf(view.getWidth()));
                jSONObject2.put("h", String.valueOf(view.getHeight()));
                jSONObject2.put("a", String.valueOf(view.getAlpha()));
                jSONObject2.put("v", String.valueOf(isVisible(view)));
                jSONObject2.put("s", String.valueOf(isViewCovered(view)));
                jSONObject.put("pos", jSONObject2);
                JSONObject jSONObject3 = new JSONObject();
                jSONObject3.put(IAdInterListener.AdReqParam.WIDTH, SystemUtil.m49027f(view.getContext()));
                jSONObject3.put("h", SystemUtil.m49025h(view.getContext()));
                jSONObject3.put("o", SystemUtil.m49021l(view.getContext()));
                jSONObject.put("screen", jSONObject3);
                jSONObject.put("spaces", new JSONArray());
                LogUtil.m49046a("adscope", "webView:" + jSONObject.toString());
                return str.replace(".UTC_TS.", String.valueOf(System.currentTimeMillis())).replace("__VT__", compressForGzip(jSONObject.toString()).replace(Marker.ANY_NON_NULL_MARKER, "-").replace("/", "_").replace("=", "."));
            } catch (JSONException e) {
                e.printStackTrace();
            }
        }
        return str;
    }

    static String toMD5(String str) {
        try {
            MessageDigest messageDigest = MessageDigest.getInstance("MD5");
            messageDigest.reset();
            messageDigest.update(str.getBytes("UTF-8"));
            return byteToHex(messageDigest.digest());
        } catch (Exception unused) {
            return null;
        }
    }

    public static boolean appendRes(StringBuilder sb) {
        String m49089a = C3019b.m49089a("");
        if (TextUtils.isEmpty(m49089a)) {
            return false;
        }
        sb.append(m49089a);
        return true;
    }
}
